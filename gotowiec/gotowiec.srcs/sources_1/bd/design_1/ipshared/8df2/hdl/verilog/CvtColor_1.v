// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CvtColor_1 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_ready,
        ap_done,
        ap_continue,
        ap_idle,
        start_out,
        start_write,
        p_src_rows_V_dout,
        p_src_rows_V_empty_n,
        p_src_rows_V_read,
        p_src_cols_V_dout,
        p_src_cols_V_empty_n,
        p_src_cols_V_read,
        p_src_data_stream_0_V_dout,
        p_src_data_stream_0_V_empty_n,
        p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout,
        p_src_data_stream_1_V_empty_n,
        p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout,
        p_src_data_stream_2_V_empty_n,
        p_src_data_stream_2_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'b1;
parameter    ap_ST_fsm_state2 = 4'b10;
parameter    ap_ST_fsm_pp0_stage0 = 4'b100;
parameter    ap_ST_fsm_state8 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv29_1322D0 = 29'b100110010001011010000;
parameter    ap_const_lv28_74BC6 = 28'b1110100101111000110;
parameter    ap_const_lv30_259168 = 30'b1001011001000101101000;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_ready;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   start_out;
output   start_write;
input  [10:0] p_src_rows_V_dout;
input   p_src_rows_V_empty_n;
output   p_src_rows_V_read;
input  [11:0] p_src_cols_V_dout;
input   p_src_cols_V_empty_n;
output   p_src_cols_V_read;
input  [7:0] p_src_data_stream_0_V_dout;
input   p_src_data_stream_0_V_empty_n;
output   p_src_data_stream_0_V_read;
input  [7:0] p_src_data_stream_1_V_dout;
input   p_src_data_stream_1_V_empty_n;
output   p_src_data_stream_1_V_read;
input  [7:0] p_src_data_stream_2_V_dout;
input   p_src_data_stream_2_V_empty_n;
output   p_src_data_stream_2_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg p_src_rows_V_read;
reg p_src_cols_V_read;
reg p_src_data_stream_0_V_read;
reg p_src_data_stream_1_V_read;
reg p_src_data_stream_2_V_read;
reg p_dst_data_stream_V_write;

reg    real_start;
reg    real_start_status_reg;
reg    internal_ap_ready;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg    start_once_reg;
reg    start_control_reg;
reg    p_src_rows_V_blk_n;
reg    p_src_cols_V_blk_n;
reg    p_src_data_stream_0_V_blk_n;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] exitcond_i_reg_300;
reg    p_src_data_stream_1_V_blk_n;
reg    p_src_data_stream_2_V_blk_n;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300;
reg   [10:0] j_i_reg_144;
reg   [11:0] p_src_cols_V_read_reg_281;
reg    ap_condition_111;
reg   [10:0] p_src_rows_V_read_reg_286;
wire   [0:0] exitcond2_i_fu_159_p2;
wire   [0:0] ap_CS_fsm_state2;
wire   [9:0] i_fu_164_p2;
reg   [9:0] i_reg_295;
wire   [0:0] exitcond_i_fu_174_p2;
reg    ap_condition_137;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_i_reg_300;
reg   [0:0] ap_pipeline_reg_pp0_iter2_exitcond_i_reg_300;
wire   [10:0] j_fu_179_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] tmp_61_reg_309;
reg   [7:0] ap_pipeline_reg_pp0_iter2_tmp_61_reg_309;
reg   [7:0] tmp_62_reg_314;
reg   [7:0] ap_pipeline_reg_pp0_iter2_tmp_62_reg_314;
reg   [7:0] tmp_63_reg_319;
wire   [28:0] r_V_4_i_i_fu_257_p2;
reg   [28:0] r_V_4_i_i_reg_324;
wire   [29:0] grp_fu_271_p3;
reg   [29:0] r_V_1_reg_329;
reg    ap_enable_reg_pp0_iter3;
reg   [7:0] p_Val2_10_reg_334;
reg   [0:0] tmp_reg_339;
reg    ap_enable_reg_pp0_iter2;
reg   [9:0] i_i_reg_133;
wire   [0:0] ap_CS_fsm_state8;
wire   [10:0] i_cast_i_fu_155_p1;
wire   [11:0] j_cast_i_fu_170_p1;
wire   [28:0] grp_fu_263_p3;
wire   [7:0] tmp_3_i_i_i_i_fu_213_p1;
wire   [7:0] p_Val2_11_fu_223_p2;
wire   [0:0] tmp_58_fu_216_p3;
wire   [0:0] tmp_59_fu_228_p3;
wire   [0:0] p_Result_2_i_i_i_i_1_fu_236_p2;
wire   [0:0] not_carry_fu_242_p2;
wire   [7:0] r_V_4_i_i_fu_257_p0;
wire   [21:0] r_V_4_i_i_fu_257_p1;
wire   [7:0] grp_fu_263_p0;
wire   [19:0] grp_fu_263_p1;
wire   [7:0] grp_fu_271_p0;
wire   [22:0] grp_fu_271_p1;
wire   [28:0] grp_fu_271_p2;
reg   [3:0] ap_NS_fsm;
wire   [27:0] grp_fu_263_p00;
wire   [29:0] grp_fu_271_p00;
wire   [29:0] grp_fu_271_p20;
wire   [28:0] r_V_4_i_i_fu_257_p00;

// power-on initialization
initial begin
#0 real_start_status_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'b1;
#0 start_once_reg = 1'b0;
#0 start_control_reg = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

image_filter_mul_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 29 ))
image_filter_mul_bkb_U16(
    .din0(r_V_4_i_i_fu_257_p0),
    .din1(r_V_4_i_i_fu_257_p1),
    .dout(r_V_4_i_i_fu_257_p2)
);

image_filter_mac_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
image_filter_mac_cud_U17(
    .din0(grp_fu_263_p0),
    .din1(grp_fu_263_p1),
    .din2(r_V_4_i_i_reg_324),
    .dout(grp_fu_263_p3)
);

image_filter_mac_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 23 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 30 ))
image_filter_mac_dEe_U18(
    .din0(grp_fu_271_p0),
    .din1(grp_fu_271_p1),
    .din2(grp_fu_271_p2),
    .dout(grp_fu_271_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == exitcond2_i_fu_159_p2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0))) & ~(1'b0 == exitcond_i_fu_174_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond2_i_fu_159_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0))) & (1'b0 == exitcond_i_fu_174_p2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond2_i_fu_159_p2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0))) & ~(1'b0 == exitcond_i_fu_174_p2)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0)))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0)))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond2_i_fu_159_p2))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        real_start_status_reg <= 1'b0;
    end else begin
        if (~(1'b0 == start_full_n)) begin
            real_start_status_reg <= 1'b0;
        end else if (((1'b0 == start_full_n) & (1'b1 == internal_ap_ready))) begin
            real_start_status_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_control_reg <= 1'b0;
    end else begin
        if (((1'b1 == real_start) & ((1'b1 == internal_ap_ready) | (1'b0 == start_once_reg)))) begin
            start_control_reg <= 1'b1;
        end else if (((1'b1 == start_control_reg) & (1'b1 == start_full_n))) begin
            start_control_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if ((1'b1 == real_start)) begin
            start_once_reg <= 1'b1;
        end else if ((1'b0 == ap_start)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_i_reg_133 <= i_reg_295;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_111 == 1'b1))) begin
        i_i_reg_133 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0))) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond_i_fu_174_p2))) begin
        j_i_reg_144 <= j_fu_179_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond2_i_fu_159_p2))) begin
        j_i_reg_144 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0))))) begin
        ap_pipeline_reg_pp0_iter1_exitcond_i_reg_300 <= exitcond_i_reg_300;
        exitcond_i_reg_300 <= exitcond_i_fu_174_p2;
    end
end

always @ (posedge ap_clk) begin
    if (~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0)))) begin
        ap_pipeline_reg_pp0_iter2_exitcond_i_reg_300 <= ap_pipeline_reg_pp0_iter1_exitcond_i_reg_300;
        ap_pipeline_reg_pp0_iter2_tmp_61_reg_309 <= tmp_61_reg_309;
        ap_pipeline_reg_pp0_iter2_tmp_62_reg_314 <= tmp_62_reg_314;
        ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300 <= ap_pipeline_reg_pp0_iter2_exitcond_i_reg_300;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_295 <= i_fu_164_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0))) & (1'b0 == ap_pipeline_reg_pp0_iter2_exitcond_i_reg_300))) begin
        p_Val2_10_reg_334 <= {{grp_fu_271_p3[ap_const_lv32_1D : ap_const_lv32_16]}};
        tmp_reg_339 <= grp_fu_271_p3[ap_const_lv32_15];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_111 == 1'b1))) begin
        p_src_cols_V_read_reg_281 <= p_src_cols_V_dout;
        p_src_rows_V_read_reg_286 <= p_src_rows_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0))) & (1'b1 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_pipeline_reg_pp0_iter2_exitcond_i_reg_300))) begin
        r_V_1_reg_329 <= grp_fu_271_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0))) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_i_reg_300))) begin
        r_V_4_i_i_reg_324 <= r_V_4_i_i_fu_257_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_i_reg_300 == 1'b0) & ~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0))))) begin
        tmp_61_reg_309 <= p_src_data_stream_0_V_dout;
        tmp_62_reg_314 <= p_src_data_stream_1_V_dout;
        tmp_63_reg_319 <= p_src_data_stream_2_V_dout;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == exitcond2_i_fu_159_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == real_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == exitcond2_i_fu_159_p2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & ~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0))))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((real_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        p_src_cols_V_blk_n = p_src_cols_V_empty_n;
    end else begin
        p_src_cols_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_111 == 1'b1))) begin
        p_src_cols_V_read = 1'b1;
    end else begin
        p_src_cols_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_i_reg_300 == 1'b0))) begin
        p_src_data_stream_0_V_blk_n = p_src_data_stream_0_V_empty_n;
    end else begin
        p_src_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_i_reg_300 == 1'b0) & ~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0))))) begin
        p_src_data_stream_0_V_read = 1'b1;
    end else begin
        p_src_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_i_reg_300 == 1'b0))) begin
        p_src_data_stream_1_V_blk_n = p_src_data_stream_1_V_empty_n;
    end else begin
        p_src_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_i_reg_300 == 1'b0) & ~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0))))) begin
        p_src_data_stream_1_V_read = 1'b1;
    end else begin
        p_src_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_i_reg_300 == 1'b0))) begin
        p_src_data_stream_2_V_blk_n = p_src_data_stream_2_V_empty_n;
    end else begin
        p_src_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_i_reg_300 == 1'b0) & ~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0))))) begin
        p_src_data_stream_2_V_read = 1'b1;
    end else begin
        p_src_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((real_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        p_src_rows_V_blk_n = p_src_rows_V_empty_n;
    end else begin
        p_src_rows_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_111 == 1'b1))) begin
        p_src_rows_V_read = 1'b1;
    end else begin
        p_src_rows_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == real_start_status_reg)) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_condition_111 == 1'b1)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (~(1'b0 == exitcond2_i_fu_159_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp0_iter4) & ~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0))) & ~(1'b1 == ap_enable_reg_pp0_iter3)) & ~(~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0))) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_i_fu_174_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp0_iter4) & ~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0))) & ~(1'b1 == ap_enable_reg_pp0_iter3)) | (~(((1'b1 == ap_enable_reg_pp0_iter1) & (ap_condition_137 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) & (p_dst_data_stream_V_full_n == 1'b0))) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_i_fu_174_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_3];

always @ (*) begin
    ap_condition_111 = ((real_start == 1'b0) | (ap_done_reg == 1'b1) | (p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_137 = (((exitcond_i_reg_300 == 1'b0) & (p_src_data_stream_0_V_empty_n == 1'b0)) | ((exitcond_i_reg_300 == 1'b0) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_i_reg_300 == 1'b0) & (p_src_data_stream_2_V_empty_n == 1'b0)));
end

assign ap_ready = internal_ap_ready;

assign exitcond2_i_fu_159_p2 = ((i_cast_i_fu_155_p1 == p_src_rows_V_read_reg_286) ? 1'b1 : 1'b0);

assign exitcond_i_fu_174_p2 = ((j_cast_i_fu_170_p1 == p_src_cols_V_read_reg_281) ? 1'b1 : 1'b0);

assign grp_fu_263_p0 = grp_fu_263_p00;

assign grp_fu_263_p00 = ap_pipeline_reg_pp0_iter2_tmp_61_reg_309;

assign grp_fu_263_p1 = ap_const_lv28_74BC6;

assign grp_fu_271_p0 = grp_fu_271_p00;

assign grp_fu_271_p00 = ap_pipeline_reg_pp0_iter2_tmp_62_reg_314;

assign grp_fu_271_p1 = ap_const_lv30_259168;

assign grp_fu_271_p2 = grp_fu_271_p20;

assign grp_fu_271_p20 = grp_fu_263_p3;

assign i_cast_i_fu_155_p1 = i_i_reg_133;

assign i_fu_164_p2 = (i_i_reg_133 + ap_const_lv10_1);

assign j_cast_i_fu_170_p1 = j_i_reg_144;

assign j_fu_179_p2 = (j_i_reg_144 + ap_const_lv11_1);

assign not_carry_fu_242_p2 = (tmp_59_fu_228_p3 | p_Result_2_i_i_i_i_1_fu_236_p2);

assign p_Result_2_i_i_i_i_1_fu_236_p2 = (tmp_58_fu_216_p3 ^ 1'b1);

assign p_Val2_11_fu_223_p2 = (p_Val2_10_reg_334 + tmp_3_i_i_i_i_fu_213_p1);

assign p_dst_data_stream_V_din = ((not_carry_fu_242_p2[0:0] === 1'b1) ? p_Val2_11_fu_223_p2 : ap_const_lv8_FF);

assign r_V_4_i_i_fu_257_p0 = r_V_4_i_i_fu_257_p00;

assign r_V_4_i_i_fu_257_p00 = tmp_63_reg_319;

assign r_V_4_i_i_fu_257_p1 = ap_const_lv29_1322D0;

assign start_out = real_start;

assign start_write = (ap_start & start_control_reg);

assign tmp_3_i_i_i_i_fu_213_p1 = tmp_reg_339;

assign tmp_58_fu_216_p3 = r_V_1_reg_329[ap_const_lv32_1D];

assign tmp_59_fu_228_p3 = p_Val2_11_fu_223_p2[ap_const_lv32_7];

endmodule //CvtColor_1
