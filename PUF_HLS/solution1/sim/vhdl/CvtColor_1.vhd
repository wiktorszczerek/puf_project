-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity CvtColor_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    p_src_rows_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    p_src_rows_V_empty_n : IN STD_LOGIC;
    p_src_rows_V_read : OUT STD_LOGIC;
    p_src_cols_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_cols_V_empty_n : IN STD_LOGIC;
    p_src_cols_V_read : OUT STD_LOGIC;
    p_src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_0_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_0_V_read : OUT STD_LOGIC;
    p_src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_1_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_1_V_read : OUT STD_LOGIC;
    p_src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_2_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_2_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of CvtColor_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv29_1322D0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000100110010001011010000";
    constant ap_const_lv28_74BC6 : STD_LOGIC_VECTOR (27 downto 0) := "0000000001110100101111000110";
    constant ap_const_lv30_259168 : STD_LOGIC_VECTOR (29 downto 0) := "000000001001011001000101101000";

    signal real_start : STD_LOGIC;
    signal real_start_status_reg : STD_LOGIC := '0';
    signal internal_ap_ready : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal start_once_reg : STD_LOGIC := '0';
    signal start_control_reg : STD_LOGIC := '0';
    signal p_src_rows_V_blk_n : STD_LOGIC;
    signal p_src_cols_V_blk_n : STD_LOGIC;
    signal p_src_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal exitcond_i_reg_300 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_src_data_stream_1_V_blk_n : STD_LOGIC;
    signal p_src_data_stream_2_V_blk_n : STD_LOGIC;
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_i_reg_144 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_src_cols_V_read_reg_281 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_condition_111 : BOOLEAN;
    signal p_src_rows_V_read_reg_286 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond2_i_fu_159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_fu_164_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_reg_295 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond_i_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_137 : BOOLEAN;
    signal ap_pipeline_reg_pp0_iter1_exitcond_i_reg_300 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_i_reg_300 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_179_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_61_reg_309 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_61_reg_309 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_62_reg_314 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_62_reg_314 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_63_reg_319 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_4_i_i_fu_257_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_4_i_i_reg_324 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_271_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_1_reg_329 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal p_Val2_10_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_339 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal i_i_reg_133 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal i_cast_i_fu_155_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_cast_i_fu_170_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_263_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_3_i_i_i_i_fu_213_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_11_fu_223_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_58_fu_216_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_228_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_i_i_i_i_1_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_carry_fu_242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_4_i_i_fu_257_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_4_i_i_fu_257_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_263_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_263_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_271_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_271_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_271_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_263_p00 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_271_p00 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_271_p20 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_4_i_i_fu_257_p00 : STD_LOGIC_VECTOR (28 downto 0);

    component image_filter_mul_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component image_filter_mac_cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        din2 : IN STD_LOGIC_VECTOR (28 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component image_filter_mac_dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        din2 : IN STD_LOGIC_VECTOR (28 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;



begin
    image_filter_mul_bkb_U16 : component image_filter_mul_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 22,
        dout_WIDTH => 29)
    port map (
        din0 => r_V_4_i_i_fu_257_p0,
        din1 => r_V_4_i_i_fu_257_p1,
        dout => r_V_4_i_i_fu_257_p2);

    image_filter_mac_cud_U17 : component image_filter_mac_cud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 20,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        din0 => grp_fu_263_p0,
        din1 => grp_fu_263_p1,
        din2 => r_V_4_i_i_reg_324,
        dout => grp_fu_263_p3);

    image_filter_mac_dEe_U18 : component image_filter_mac_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 23,
        din2_WIDTH => 29,
        dout_WIDTH => 30)
    port map (
        din0 => grp_fu_271_p0,
        din1 => grp_fu_271_p1,
        din2 => grp_fu_271_p2,
        dout => grp_fu_271_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = exitcond2_i_fu_159_p2)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0)))) and not((ap_const_lv1_0 = exitcond_i_fu_174_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond2_i_fu_159_p2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0)))) and (ap_const_lv1_0 = exitcond_i_fu_174_p2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond2_i_fu_159_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0)))) and not((ap_const_lv1_0 = exitcond_i_fu_174_p2))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond2_i_fu_159_p2))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    real_start_status_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                real_start_status_reg <= ap_const_logic_0;
            else
                if (not((ap_const_logic_0 = start_full_n))) then 
                    real_start_status_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_0 = start_full_n) and (ap_const_logic_1 = internal_ap_ready))) then 
                    real_start_status_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_control_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_control_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = real_start) and ((ap_const_logic_1 = internal_ap_ready) or (ap_const_logic_0 = start_once_reg)))) then 
                    start_control_reg <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = start_control_reg) and (ap_const_logic_1 = start_full_n))) then 
                    start_control_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = real_start)) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_0 = ap_start)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_i_reg_133_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
                i_i_reg_133 <= i_reg_295;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_111 = ap_const_boolean_1)))) then 
                i_i_reg_133 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    j_i_reg_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_i_fu_174_p2))) then 
                j_i_reg_144 <= j_fu_179_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond2_i_fu_159_p2))) then 
                j_i_reg_144 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0)))))) then
                ap_pipeline_reg_pp0_iter1_exitcond_i_reg_300 <= exitcond_i_reg_300;
                exitcond_i_reg_300 <= exitcond_i_fu_174_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0))))) then
                ap_pipeline_reg_pp0_iter2_exitcond_i_reg_300 <= ap_pipeline_reg_pp0_iter1_exitcond_i_reg_300;
                ap_pipeline_reg_pp0_iter2_tmp_61_reg_309 <= tmp_61_reg_309;
                ap_pipeline_reg_pp0_iter2_tmp_62_reg_314 <= tmp_62_reg_314;
                ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300 <= ap_pipeline_reg_pp0_iter2_exitcond_i_reg_300;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then
                i_reg_295 <= i_fu_164_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0)))) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_i_reg_300))) then
                p_Val2_10_reg_334 <= grp_fu_271_p3(29 downto 22);
                tmp_reg_339 <= grp_fu_271_p3(21 downto 21);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_111 = ap_const_boolean_1)))) then
                p_src_cols_V_read_reg_281 <= p_src_cols_V_dout;
                p_src_rows_V_read_reg_286 <= p_src_rows_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_i_reg_300))) then
                r_V_1_reg_329 <= grp_fu_271_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0)))) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_i_reg_300))) then
                r_V_4_i_i_reg_324 <= r_V_4_i_i_fu_257_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_i_reg_300 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0)))))) then
                tmp_61_reg_309 <= p_src_data_stream_0_V_dout;
                tmp_62_reg_314 <= p_src_data_stream_1_V_dout;
                tmp_63_reg_319 <= p_src_data_stream_2_V_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300, ap_condition_111, exitcond2_i_fu_159_p2, exitcond_i_fu_174_p2, ap_condition_137, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_condition_111 = ap_const_boolean_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (not((ap_const_lv1_0 = exitcond2_i_fu_159_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0)))) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter3)))) and not((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_i_fu_174_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0)))) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter3))) or (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_i_fu_174_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state8 <= ap_CS_fsm(3 downto 3);

    ap_condition_111_assign_proc : process(real_start, ap_done_reg, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
                ap_condition_111 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0));
    end process;


    ap_condition_137_assign_proc : process(p_src_data_stream_0_V_empty_n, p_src_data_stream_1_V_empty_n, p_src_data_stream_2_V_empty_n, exitcond_i_reg_300)
    begin
                ap_condition_137 <= (((exitcond_i_reg_300 = ap_const_lv1_0) and (p_src_data_stream_0_V_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_300 = ap_const_lv1_0) and (p_src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_300 = ap_const_lv1_0) and (p_src_data_stream_2_V_empty_n = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond2_i_fu_159_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = exitcond2_i_fu_159_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = real_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    exitcond2_i_fu_159_p2 <= "1" when (i_cast_i_fu_155_p1 = p_src_rows_V_read_reg_286) else "0";
    exitcond_i_fu_174_p2 <= "1" when (j_cast_i_fu_170_p1 = p_src_cols_V_read_reg_281) else "0";
    grp_fu_263_p0 <= grp_fu_263_p00(8 - 1 downto 0);
    grp_fu_263_p00 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter2_tmp_61_reg_309),28));
    grp_fu_263_p1 <= ap_const_lv28_74BC6(20 - 1 downto 0);
    grp_fu_271_p0 <= grp_fu_271_p00(8 - 1 downto 0);
    grp_fu_271_p00 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter2_tmp_62_reg_314),30));
    grp_fu_271_p1 <= ap_const_lv30_259168(23 - 1 downto 0);
    grp_fu_271_p2 <= grp_fu_271_p20(29 - 1 downto 0);
    grp_fu_271_p20 <= std_logic_vector(resize(unsigned(grp_fu_263_p3),30));
    i_cast_i_fu_155_p1 <= std_logic_vector(resize(unsigned(i_i_reg_133),11));
    i_fu_164_p2 <= std_logic_vector(unsigned(i_i_reg_133) + unsigned(ap_const_lv10_1));

    internal_ap_ready_assign_proc : process(exitcond2_i_fu_159_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = exitcond2_i_fu_159_p2)))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    j_cast_i_fu_170_p1 <= std_logic_vector(resize(unsigned(j_i_reg_144),12));
    j_fu_179_p2 <= std_logic_vector(unsigned(j_i_reg_144) + unsigned(ap_const_lv11_1));
    not_carry_fu_242_p2 <= (tmp_59_fu_228_p3 or p_Result_2_i_i_i_i_1_fu_236_p2);
    p_Result_2_i_i_i_i_1_fu_236_p2 <= (tmp_58_fu_216_p3 xor ap_const_lv1_1);
    p_Val2_11_fu_223_p2 <= std_logic_vector(unsigned(p_Val2_10_reg_334) + unsigned(tmp_3_i_i_i_i_fu_213_p1));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter4, ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        p_Val2_11_fu_223_p2 when (not_carry_fu_242_p2(0) = '1') else 
        ap_const_lv8_FF;

    p_dst_data_stream_V_write_assign_proc : process(p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300, ap_condition_137)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0)))))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_cols_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_cols_V_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            p_src_cols_V_blk_n <= p_src_cols_V_empty_n;
        else 
            p_src_cols_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_cols_V_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_111)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_111 = ap_const_boolean_1)))) then 
            p_src_cols_V_read <= ap_const_logic_1;
        else 
            p_src_cols_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_0_V_blk_n_assign_proc : process(p_src_data_stream_0_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_reg_300)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_i_reg_300 = ap_const_lv1_0))) then 
            p_src_data_stream_0_V_blk_n <= p_src_data_stream_0_V_empty_n;
        else 
            p_src_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_0_V_read_assign_proc : process(p_dst_data_stream_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_reg_300, ap_enable_reg_pp0_iter4, ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300, ap_condition_137)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_i_reg_300 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0)))))) then 
            p_src_data_stream_0_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_1_V_blk_n_assign_proc : process(p_src_data_stream_1_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_reg_300)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_i_reg_300 = ap_const_lv1_0))) then 
            p_src_data_stream_1_V_blk_n <= p_src_data_stream_1_V_empty_n;
        else 
            p_src_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_1_V_read_assign_proc : process(p_dst_data_stream_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_reg_300, ap_enable_reg_pp0_iter4, ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300, ap_condition_137)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_i_reg_300 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0)))))) then 
            p_src_data_stream_1_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_2_V_blk_n_assign_proc : process(p_src_data_stream_2_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_reg_300)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_i_reg_300 = ap_const_lv1_0))) then 
            p_src_data_stream_2_V_blk_n <= p_src_data_stream_2_V_empty_n;
        else 
            p_src_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_2_V_read_assign_proc : process(p_dst_data_stream_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_reg_300, ap_enable_reg_pp0_iter4, ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300, ap_condition_137)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_i_reg_300 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_condition_137 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_i_reg_300) and (p_dst_data_stream_V_full_n = ap_const_logic_0)))))) then 
            p_src_data_stream_2_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_rows_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            p_src_rows_V_blk_n <= p_src_rows_V_empty_n;
        else 
            p_src_rows_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_rows_V_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_111)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_111 = ap_const_boolean_1)))) then 
            p_src_rows_V_read <= ap_const_logic_1;
        else 
            p_src_rows_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_4_i_i_fu_257_p0 <= r_V_4_i_i_fu_257_p00(8 - 1 downto 0);
    r_V_4_i_i_fu_257_p00 <= std_logic_vector(resize(unsigned(tmp_63_reg_319),29));
    r_V_4_i_i_fu_257_p1 <= ap_const_lv29_1322D0(22 - 1 downto 0);

    real_start_assign_proc : process(ap_start, real_start_status_reg)
    begin
        if ((ap_const_logic_1 = real_start_status_reg)) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;
    start_write <= (ap_start and start_control_reg);
    tmp_3_i_i_i_i_fu_213_p1 <= std_logic_vector(resize(unsigned(tmp_reg_339),8));
    tmp_58_fu_216_p3 <= r_V_1_reg_329(29 downto 29);
    tmp_59_fu_228_p3 <= p_Val2_11_fu_223_p2(7 downto 7);
end behav;
