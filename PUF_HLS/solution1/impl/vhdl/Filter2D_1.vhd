-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of Filter2D_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv10_2D2 : STD_LOGIC_VECTOR (9 downto 0) := "1011010010";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_2D0 : STD_LOGIC_VECTOR (9 downto 0) := "1011010000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_2D0 : STD_LOGIC_VECTOR (10 downto 0) := "01011010000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv11_7FE : STD_LOGIC_VECTOR (10 downto 0) := "11111111110";
    constant ap_const_lv11_7FD : STD_LOGIC_VECTOR (10 downto 0) := "11111111101";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_502 : STD_LOGIC_VECTOR (10 downto 0) := "10100000010";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_500 : STD_LOGIC_VECTOR (11 downto 0) := "010100000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_9FE : STD_LOGIC_VECTOR (11 downto 0) := "100111111110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv21_1171 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000101110001";
    constant ap_const_lv19_3A8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001110101000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln444_reg_1444 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_reg_1453 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_1409 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_reg_1400 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal and_ln512_reg_1474 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1474_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_reg_305 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln443_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_326_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_V_reg_1395 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln887_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln457_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln457_reg_1404 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1414 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_1418 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_1_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_1_reg_1422 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln493_1_fu_526_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln493_1_reg_1429 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln493_2_fu_564_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln493_2_reg_1434 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln493_3_fu_602_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln493_3_reg_1439 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln444_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op129_read_state4 : BOOLEAN;
    signal ap_predicate_op136_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln444_reg_1444_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_reg_1444_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_reg_1444_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_618_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal and_ln118_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_reg_1453_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_740_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_reg_1457 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln458_fu_748_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln458_reg_1462 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln457_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln457_reg_1467 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln457_reg_1467_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1474_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1474_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1474_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal right_border_buf_0_6_reg_1478 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln493_fu_775_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln493_reg_1489 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_4_addr_reg_1496 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1502 : STD_LOGIC_VECTOR (10 downto 0);
    signal src_kernel_win_0_va_6_fu_894_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1508 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1508_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_912_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1514 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_930_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_reg_1521 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_fu_1281_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_reg_1527 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1287_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln703_1_reg_1532 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal sub_ln1118_1_fu_1025_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1118_1_reg_1537 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln703_4_fu_1074_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln703_4_reg_1542 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_s_fu_1180_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_Val2_s_reg_1547 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_Val2_1_reg_1552 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_reg_1557 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1562 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter1_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_we0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_we0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_we0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal t_V_reg_294 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln835_fu_768_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal src_kernel_win_0_va_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_10 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_11 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_806_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_194 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_198 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_202 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_824_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_206 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_210 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_841_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_right_border_buf_0_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_fu_344_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln443_fu_316_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln506_fu_378_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln506_fu_382_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_5_fu_394_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_2_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_420_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_fu_428_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln139_1_fu_434_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln507_fu_442_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln506_1_fu_458_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln506_2_fu_484_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln144_1_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln507_fu_452_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln118_1_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln507_fu_388_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln507_fu_510_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln507_1_fu_518_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln142_fu_480_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_fu_472_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln118_fu_538_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln118_fu_544_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_fu_464_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln139_2_fu_548_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln118_1_fu_532_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_fu_556_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln142_1_fu_506_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_17_fu_498_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_3_fu_576_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln118_1_fu_582_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_16_fu_490_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln139_3_fu_586_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln118_fu_570_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_1_fu_594_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_18_fu_624_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln444_fu_608_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_fu_640_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_19_fu_646_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_1_fu_660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_4_fu_654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_672_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_1_fu_680_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln139_fu_686_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln147_fu_704_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln118_2_fu_710_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal xor_ln118_5_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln118_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln144_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln139_fu_694_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln118_fu_718_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln891_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln144_fu_765_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_795_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_813_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_831_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_883_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_901_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_919_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_960_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln1118_1_fu_972_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1118_1_fu_968_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln1118_2_fu_980_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1118_fu_984_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_fu_990_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln1118_2_fu_1001_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln1118_3_fu_1013_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1118_3_fu_1009_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln1118_4_fu_1021_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal shl_ln1118_4_fu_1031_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln1118_5_fu_1042_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1118_6_fu_1038_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln1118_7_fu_1049_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1118_2_fu_1053_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_2_fu_1059_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1297_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln1118_8_fu_1063_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln703_5_fu_1071_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1118_1_fu_1110_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln703_3_fu_1113_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln703_2_fu_1107_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_2_fu_1117_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln703_6_fu_1123_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_5_fu_1126_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal shl_ln1118_6_fu_1136_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln1118_7_fu_1148_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1118_10_fu_1144_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln1118_11_fu_1156_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1118_3_fu_1160_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_3_fu_1166_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1305_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln703_7_fu_1132_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln703_9_fu_1177_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln415_fu_1226_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_1239_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_fu_1229_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_1252_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln777_fu_1246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_1234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln777_fu_1260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_1266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_fu_1281_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_fu_1281_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1287_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1287_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1287_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1287_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1297_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1297_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1305_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1305_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1305_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op130_store_state4 : BOOLEAN;
    signal ap_enable_operation_130 : BOOLEAN;
    signal ap_enable_state4_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op128_load_state4 : BOOLEAN;
    signal ap_enable_operation_128 : BOOLEAN;
    signal ap_enable_operation_153 : BOOLEAN;
    signal ap_enable_state5_pp0_iter2_stage0 : BOOLEAN;
    signal ap_predicate_op158_store_state5 : BOOLEAN;
    signal ap_enable_operation_158 : BOOLEAN;
    signal ap_predicate_op132_store_state4 : BOOLEAN;
    signal ap_enable_operation_132 : BOOLEAN;
    signal ap_enable_operation_126 : BOOLEAN;
    signal ap_enable_operation_150 : BOOLEAN;
    signal ap_predicate_op159_store_state5 : BOOLEAN;
    signal ap_enable_operation_159 : BOOLEAN;
    signal ap_predicate_op134_store_state4 : BOOLEAN;
    signal ap_enable_operation_134 : BOOLEAN;
    signal ap_enable_operation_123 : BOOLEAN;
    signal ap_enable_operation_147 : BOOLEAN;
    signal ap_predicate_op137_store_state4 : BOOLEAN;
    signal ap_enable_operation_137 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1287_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1287_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1287_p30 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1297_p10 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1305_p10 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1305_p20 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln1118_fu_1281_p10 : STD_LOGIC_VECTOR (20 downto 0);

    component image_filter_mux_hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component image_filter_mul_ibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component image_filter_ama_jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        din3 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component image_filter_mac_kbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component image_filter_mac_lbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component Filter2D_1_k_buf_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        we0 => k_buf_0_val_3_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        we0 => k_buf_0_val_4_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_3_q0);

    k_buf_0_val_5_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        we0 => k_buf_0_val_5_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_4_q0);

    image_filter_mux_hbi_U32 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_190,
        din1 => right_border_buf_0_1_fu_194,
        din2 => ap_const_lv8_0,
        din3 => xor_ln493_reg_1489,
        dout => tmp_8_fu_795_p5);

    image_filter_mux_hbi_U33 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_202,
        din1 => right_border_buf_0_4_fu_206,
        din2 => ap_const_lv8_0,
        din3 => xor_ln493_reg_1489,
        dout => tmp_9_fu_813_p5);

    image_filter_mux_hbi_U34 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_6_reg_1478,
        din1 => right_border_buf_0_2_fu_198,
        din2 => ap_const_lv8_0,
        din3 => xor_ln493_reg_1489,
        dout => tmp_2_fu_831_p5);

    image_filter_mux_hbi_U35 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_806_p3,
        din1 => col_buf_0_val_1_0_fu_824_p3,
        din2 => col_buf_0_val_2_0_fu_841_p3,
        din3 => xor_ln493_1_reg_1429,
        dout => tmp_3_fu_883_p5);

    image_filter_mux_hbi_U36 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_806_p3,
        din1 => col_buf_0_val_1_0_fu_824_p3,
        din2 => col_buf_0_val_2_0_fu_841_p3,
        din3 => xor_ln493_2_reg_1434,
        dout => tmp_4_fu_901_p5);

    image_filter_mux_hbi_U37 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_806_p3,
        din1 => col_buf_0_val_1_0_fu_824_p3,
        din2 => col_buf_0_val_2_0_fu_841_p3,
        din3 => xor_ln493_3_reg_1439,
        dout => tmp_10_fu_919_p5);

    image_filter_mul_ibs_U38 : component image_filter_mul_ibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 8,
        dout_WIDTH => 21)
    port map (
        din0 => mul_ln1118_fu_1281_p0,
        din1 => mul_ln1118_fu_1281_p1,
        dout => mul_ln1118_fu_1281_p2);

    image_filter_ama_jbC_U39 : component image_filter_ama_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        din3_WIDTH => 24,
        dout_WIDTH => 25)
    port map (
        din0 => grp_fu_1287_p0,
        din1 => grp_fu_1287_p1,
        din2 => grp_fu_1287_p2,
        din3 => grp_fu_1287_p3,
        dout => grp_fu_1287_p4);

    image_filter_mac_kbM_U40 : component image_filter_mac_kbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_1297_p0,
        din1 => grp_fu_1297_p1,
        din2 => mul_ln1118_reg_1527,
        dout => grp_fu_1297_p3);

    image_filter_mac_lbW_U41 : component image_filter_mac_lbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        din2_WIDTH => 24,
        dout_WIDTH => 25)
    port map (
        din0 => grp_fu_1305_p0,
        din1 => grp_fu_1305_p1,
        din2 => grp_fu_1305_p2,
        dout => grp_fu_1305_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((icmp_ln444_fu_612_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln443_fu_320_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state4)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((icmp_ln443_fu_320_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_2_reg_305_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_fu_612_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_2_reg_305 <= j_V_fu_618_p2;
            elsif (((icmp_ln443_fu_320_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_2_reg_305 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                t_V_reg_294 <= i_V_reg_1395;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_294 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_1474_pp0_iter2_reg) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln703_1_reg_1532 <= grp_fu_1287_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_1474_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln703_4_reg_1542 <= add_ln703_4_fu_1074_p2;
                    sub_ln1118_1_reg_1537(19 downto 2) <= sub_ln1118_1_fu_1025_p2(19 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_fu_612_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln118_reg_1453 <= and_ln118_fu_666_p2;
                and_ln512_reg_1474 <= and_ln512_fu_757_p2;
                or_ln457_reg_1467 <= or_ln457_fu_752_p2;
                trunc_ln458_reg_1462 <= trunc_ln458_fu_748_p1;
                x_reg_1457 <= x_fu_740_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln118_reg_1453_pp0_iter1_reg <= and_ln118_reg_1453;
                and_ln512_reg_1474_pp0_iter1_reg <= and_ln512_reg_1474;
                icmp_ln444_reg_1444 <= icmp_ln444_fu_612_p2;
                icmp_ln444_reg_1444_pp0_iter1_reg <= icmp_ln444_reg_1444;
                or_ln457_reg_1467_pp0_iter1_reg <= or_ln457_reg_1467;
                right_border_buf_0_6_reg_1478 <= ap_sig_allocacmp_right_border_buf_0_6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                and_ln512_reg_1474_pp0_iter2_reg <= and_ln512_reg_1474_pp0_iter1_reg;
                and_ln512_reg_1474_pp0_iter3_reg <= and_ln512_reg_1474_pp0_iter2_reg;
                and_ln512_reg_1474_pp0_iter4_reg <= and_ln512_reg_1474_pp0_iter3_reg;
                icmp_ln444_reg_1444_pp0_iter2_reg <= icmp_ln444_reg_1444_pp0_iter1_reg;
                icmp_ln444_reg_1444_pp0_iter3_reg <= icmp_ln444_reg_1444_pp0_iter2_reg;
                src_kernel_win_0_va_6_reg_1508 <= src_kernel_win_0_va_6_fu_894_p3;
                src_kernel_win_0_va_6_reg_1508_pp0_iter3_reg <= src_kernel_win_0_va_6_reg_1508;
                src_kernel_win_0_va_7_reg_1514 <= src_kernel_win_0_va_7_fu_912_p3;
                src_kernel_win_0_va_8_reg_1521 <= src_kernel_win_0_va_8_fu_930_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1395 <= i_V_fu_326_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln443_fu_320_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln879_1_reg_1418 <= icmp_ln879_1_fu_366_p2;
                icmp_ln879_reg_1414 <= icmp_ln879_fu_360_p2;
                icmp_ln887_reg_1400 <= icmp_ln887_fu_332_p2;
                icmp_ln899_1_reg_1422 <= icmp_ln899_1_fu_372_p2;
                icmp_ln899_reg_1409 <= icmp_ln899_fu_354_p2;
                xor_ln457_reg_1404 <= xor_ln457_fu_338_p2;
                xor_ln493_1_reg_1429 <= xor_ln493_1_fu_526_p2;
                xor_ln493_2_reg_1434 <= xor_ln493_2_fu_564_p2;
                xor_ln493_3_reg_1439 <= xor_ln493_3_fu_602_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_1444 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_4_addr_reg_1496 <= zext_ln835_fu_768_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1502 <= zext_ln835_fu_768_p1(11 - 1 downto 0);
                xor_ln493_reg_1489 <= xor_ln493_fu_775_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_1474_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul_ln1118_reg_1527 <= mul_ln1118_fu_1281_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_1474_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_1_reg_1552 <= p_Val2_s_fu_1180_p2(21 downto 14);
                p_Val2_s_reg_1547 <= p_Val2_s_fu_1180_p2;
                tmp_11_reg_1562 <= p_Val2_s_fu_1180_p2(26 downto 22);
                tmp_23_reg_1557 <= p_Val2_s_fu_1180_p2(13 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_reg_1400 = ap_const_lv1_1) and (icmp_ln899_reg_1409 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1453_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_1_fu_194 <= right_border_buf_0_s_fu_190;
                right_border_buf_0_2_fu_198 <= right_border_buf_0_6_reg_1478;
                right_border_buf_0_3_fu_202 <= col_buf_0_val_1_0_fu_824_p3;
                right_border_buf_0_4_fu_206 <= right_border_buf_0_3_fu_202;
                right_border_buf_0_5_fu_210 <= col_buf_0_val_2_0_fu_841_p3;
                right_border_buf_0_s_fu_190 <= col_buf_0_val_0_0_fu_806_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_1444_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_170 <= src_kernel_win_0_va_fu_166;
                src_kernel_win_0_va_fu_166 <= src_kernel_win_0_va_6_reg_1508_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_1444_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_2_fu_174 <= src_kernel_win_0_va_7_reg_1514;
                src_kernel_win_0_va_3_fu_178 <= src_kernel_win_0_va_2_fu_174;
                src_kernel_win_0_va_4_fu_182 <= src_kernel_win_0_va_8_reg_1521;
                src_kernel_win_0_va_5_fu_186 <= src_kernel_win_0_va_4_fu_182;
            end if;
        end if;
    end process;
    sub_ln1118_1_reg_1537(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, icmp_ln443_fu_320_p2, ap_CS_fsm_state2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln443_fu_320_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ImagLoc_x_fu_640_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(zext_ln444_fu_608_p1));
    Range1_all_zeros_fu_1234_p2 <= "1" when (tmp_11_reg_1562 = ap_const_lv5_0) else "0";
    add_ln118_fu_570_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(trunc_ln506_fu_378_p1));
    add_ln506_1_fu_458_p2 <= std_logic_vector(signed(ap_const_lv11_7FE) + signed(zext_ln443_fu_316_p1));
    add_ln506_2_fu_484_p2 <= std_logic_vector(signed(ap_const_lv11_7FD) + signed(zext_ln443_fu_316_p1));
    add_ln506_fu_382_p2 <= std_logic_vector(signed(ap_const_lv11_7FF) + signed(zext_ln443_fu_316_p1));
    add_ln507_fu_388_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(trunc_ln506_fu_378_p1));
    add_ln703_2_fu_1117_p2 <= std_logic_vector(unsigned(zext_ln703_3_fu_1113_p1) + unsigned(zext_ln703_2_fu_1107_p1));
    add_ln703_4_fu_1074_p2 <= std_logic_vector(unsigned(zext_ln1118_8_fu_1063_p1) + unsigned(zext_ln703_5_fu_1071_p1));
    add_ln703_5_fu_1126_p2 <= std_logic_vector(unsigned(add_ln703_2_fu_1117_p2) + unsigned(zext_ln703_6_fu_1123_p1));
    and_ln118_1_fu_414_p2 <= (xor_ln118_2_fu_402_p2 and icmp_ln118_fu_408_p2);
    and_ln118_fu_666_p2 <= (xor_ln118_4_fu_654_p2 and icmp_ln118_1_fu_660_p2);
    and_ln144_fu_734_p2 <= (or_ln118_fu_728_p2 and icmp_ln144_fu_698_p2);
    and_ln512_fu_757_p2 <= (icmp_ln899_reg_1409 and icmp_ln891_fu_634_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state9 <= ap_CS_fsm(3);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, and_ln512_reg_1474_pp0_iter4_reg, ap_predicate_op129_read_state4, ap_predicate_op136_read_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_const_lv1_1 = and_ln512_reg_1474_pp0_iter4_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op136_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op129_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, and_ln512_reg_1474_pp0_iter4_reg, ap_predicate_op129_read_state4, ap_predicate_op136_read_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_lv1_1 = and_ln512_reg_1474_pp0_iter4_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op136_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op129_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, and_ln512_reg_1474_pp0_iter4_reg, ap_predicate_op129_read_state4, ap_predicate_op136_read_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_lv1_1 = and_ln512_reg_1474_pp0_iter4_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op136_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op129_read_state4 = ap_const_boolean_1)))));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op129_read_state4, ap_predicate_op136_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op136_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op129_read_state4 = ap_const_boolean_1)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter5_assign_proc : process(p_dst_data_stream_V_full_n, and_ln512_reg_1474_pp0_iter4_reg)
    begin
                ap_block_state8_pp0_stage0_iter5 <= ((ap_const_lv1_1 = and_ln512_reg_1474_pp0_iter4_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter1_state4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln443_fu_320_p2, ap_CS_fsm_state2)
    begin
        if ((((icmp_ln443_fu_320_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_operation_123_assign_proc : process(icmp_ln444_reg_1444)
    begin
                ap_enable_operation_123 <= (icmp_ln444_reg_1444 = ap_const_lv1_0);
    end process;


    ap_enable_operation_126_assign_proc : process(icmp_ln444_reg_1444)
    begin
                ap_enable_operation_126 <= (icmp_ln444_reg_1444 = ap_const_lv1_0);
    end process;


    ap_enable_operation_128_assign_proc : process(ap_predicate_op128_load_state4)
    begin
                ap_enable_operation_128 <= (ap_predicate_op128_load_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_130_assign_proc : process(ap_predicate_op130_store_state4)
    begin
                ap_enable_operation_130 <= (ap_predicate_op130_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_132_assign_proc : process(ap_predicate_op132_store_state4)
    begin
                ap_enable_operation_132 <= (ap_predicate_op132_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_134_assign_proc : process(ap_predicate_op134_store_state4)
    begin
                ap_enable_operation_134 <= (ap_predicate_op134_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_137_assign_proc : process(ap_predicate_op137_store_state4)
    begin
                ap_enable_operation_137 <= (ap_predicate_op137_store_state4 = ap_const_boolean_1);
    end process;

        ap_enable_operation_147 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_150 <= (ap_const_boolean_1 = ap_const_boolean_1);

    ap_enable_operation_153_assign_proc : process(or_ln457_reg_1467_pp0_iter1_reg)
    begin
                ap_enable_operation_153 <= (or_ln457_reg_1467_pp0_iter1_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_158_assign_proc : process(ap_predicate_op158_store_state5)
    begin
                ap_enable_operation_158 <= (ap_predicate_op158_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_159_assign_proc : process(ap_predicate_op159_store_state5)
    begin
                ap_enable_operation_159 <= (ap_predicate_op159_store_state5 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state4_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state4_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state5_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state5_pp0_iter2_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op128_load_state4_assign_proc : process(icmp_ln444_reg_1444, or_ln457_reg_1467)
    begin
                ap_predicate_op128_load_state4 <= ((or_ln457_reg_1467 = ap_const_lv1_1) and (icmp_ln444_reg_1444 = ap_const_lv1_0));
    end process;


    ap_predicate_op129_read_state4_assign_proc : process(icmp_ln444_reg_1444, and_ln118_reg_1453, icmp_ln899_reg_1409)
    begin
                ap_predicate_op129_read_state4 <= ((ap_const_lv1_1 = and_ln118_reg_1453) and (icmp_ln899_reg_1409 = ap_const_lv1_0) and (icmp_ln444_reg_1444 = ap_const_lv1_0));
    end process;


    ap_predicate_op130_store_state4_assign_proc : process(icmp_ln444_reg_1444, and_ln118_reg_1453, icmp_ln899_reg_1409, icmp_ln879_reg_1414)
    begin
                ap_predicate_op130_store_state4 <= ((icmp_ln879_reg_1414 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1453) and (icmp_ln899_reg_1409 = ap_const_lv1_0) and (icmp_ln444_reg_1444 = ap_const_lv1_0));
    end process;


    ap_predicate_op132_store_state4_assign_proc : process(icmp_ln444_reg_1444, and_ln118_reg_1453, icmp_ln899_reg_1409, icmp_ln879_1_reg_1418)
    begin
                ap_predicate_op132_store_state4 <= ((icmp_ln879_1_reg_1418 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1453) and (icmp_ln899_reg_1409 = ap_const_lv1_0) and (icmp_ln444_reg_1444 = ap_const_lv1_0));
    end process;


    ap_predicate_op134_store_state4_assign_proc : process(icmp_ln444_reg_1444, and_ln118_reg_1453, icmp_ln899_reg_1409, icmp_ln879_reg_1414)
    begin
                ap_predicate_op134_store_state4 <= ((icmp_ln879_reg_1414 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1453) and (icmp_ln899_reg_1409 = ap_const_lv1_0) and (icmp_ln444_reg_1444 = ap_const_lv1_0));
    end process;


    ap_predicate_op136_read_state4_assign_proc : process(icmp_ln444_reg_1444, and_ln118_reg_1453, icmp_ln899_reg_1409, icmp_ln887_reg_1400)
    begin
                ap_predicate_op136_read_state4 <= ((icmp_ln887_reg_1400 = ap_const_lv1_1) and (icmp_ln899_reg_1409 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1453) and (icmp_ln444_reg_1444 = ap_const_lv1_0));
    end process;


    ap_predicate_op137_store_state4_assign_proc : process(icmp_ln444_reg_1444, and_ln118_reg_1453, icmp_ln899_reg_1409, icmp_ln887_reg_1400)
    begin
                ap_predicate_op137_store_state4 <= ((icmp_ln887_reg_1400 = ap_const_lv1_1) and (icmp_ln899_reg_1409 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1453) and (icmp_ln444_reg_1444 = ap_const_lv1_0));
    end process;


    ap_predicate_op158_store_state5_assign_proc : process(icmp_ln899_reg_1409, icmp_ln887_reg_1400, and_ln118_reg_1453_pp0_iter1_reg)
    begin
                ap_predicate_op158_store_state5 <= ((icmp_ln887_reg_1400 = ap_const_lv1_1) and (icmp_ln899_reg_1409 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1453_pp0_iter1_reg));
    end process;


    ap_predicate_op159_store_state5_assign_proc : process(icmp_ln899_reg_1409, icmp_ln887_reg_1400, and_ln118_reg_1453_pp0_iter1_reg)
    begin
                ap_predicate_op159_store_state5 <= ((icmp_ln887_reg_1400 = ap_const_lv1_1) and (icmp_ln899_reg_1409 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1453_pp0_iter1_reg));
    end process;


    ap_ready_assign_proc : process(icmp_ln443_fu_320_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln443_fu_320_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_right_border_buf_0_6_assign_proc : process(ap_block_pp0_stage0, icmp_ln899_reg_1409, icmp_ln887_reg_1400, and_ln118_reg_1453_pp0_iter1_reg, ap_enable_reg_pp0_iter2, right_border_buf_0_5_fu_210, col_buf_0_val_2_0_fu_841_p3)
    begin
        if (((icmp_ln887_reg_1400 = ap_const_lv1_1) and (icmp_ln899_reg_1409 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1453_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_right_border_buf_0_6 <= col_buf_0_val_2_0_fu_841_p3;
        else 
            ap_sig_allocacmp_right_border_buf_0_6 <= right_border_buf_0_5_fu_210;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_10_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_1444_pp0_iter3_reg, ap_enable_reg_pp0_iter4, src_kernel_win_0_va_fu_166, src_kernel_win_0_va_1_fu_170)
    begin
        if (((icmp_ln444_reg_1444_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_10 <= src_kernel_win_0_va_fu_166;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_10 <= src_kernel_win_0_va_1_fu_170;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_11_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_1444_pp0_iter2_reg, src_kernel_win_0_va_7_reg_1514, ap_enable_reg_pp0_iter3, src_kernel_win_0_va_2_fu_174)
    begin
        if (((icmp_ln444_reg_1444_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_11 <= src_kernel_win_0_va_7_reg_1514;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_11 <= src_kernel_win_0_va_2_fu_174;
        end if; 
    end process;

    col_buf_0_val_0_0_fu_806_p3 <= 
        k_buf_0_val_3_q0 when (or_ln457_reg_1467_pp0_iter1_reg(0) = '1') else 
        tmp_8_fu_795_p5;
    col_buf_0_val_1_0_fu_824_p3 <= 
        k_buf_0_val_4_q0 when (or_ln457_reg_1467_pp0_iter1_reg(0) = '1') else 
        tmp_9_fu_813_p5;
    col_buf_0_val_2_0_fu_841_p3 <= 
        k_buf_0_val_5_q0 when (or_ln457_reg_1467_pp0_iter1_reg(0) = '1') else 
        tmp_2_fu_831_p5;
    deleted_zeros_fu_1266_p2 <= (or_ln777_fu_1260_p2 and Range1_all_zeros_fu_1234_p2);
    grp_fu_1287_p0 <= grp_fu_1287_p00(8 - 1 downto 0);
    grp_fu_1287_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_reg_1521),9));
    grp_fu_1287_p1 <= grp_fu_1287_p10(8 - 1 downto 0);
    grp_fu_1287_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_186),9));
    grp_fu_1287_p2 <= ap_const_lv19_3A8(11 - 1 downto 0);
    grp_fu_1287_p3 <= grp_fu_1287_p30(24 - 1 downto 0);
    grp_fu_1287_p30 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1118_fu_990_p1),25));
    grp_fu_1297_p0 <= ap_const_lv19_3A8(11 - 1 downto 0);
    grp_fu_1297_p1 <= grp_fu_1297_p10(8 - 1 downto 0);
    grp_fu_1297_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_10),19));
    grp_fu_1305_p0 <= ap_const_lv19_3A8(11 - 1 downto 0);
    grp_fu_1305_p1 <= grp_fu_1305_p10(8 - 1 downto 0);
    grp_fu_1305_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_6_reg_1508_pp0_iter3_reg),19));
    grp_fu_1305_p2 <= grp_fu_1305_p20(24 - 1 downto 0);
    grp_fu_1305_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1118_3_fu_1166_p1),25));
    i_V_fu_326_p2 <= std_logic_vector(unsigned(t_V_reg_294) + unsigned(ap_const_lv10_1));
    icmp_ln118_1_fu_660_p2 <= "1" when (signed(ImagLoc_x_fu_640_p2) < signed(ap_const_lv12_500)) else "0";
    icmp_ln118_fu_408_p2 <= "1" when (signed(add_ln506_fu_382_p2) < signed(ap_const_lv11_2D0)) else "0";
    icmp_ln144_1_fu_446_p2 <= "1" when (signed(select_ln139_1_fu_434_p3) < signed(ap_const_lv11_2D0)) else "0";
    icmp_ln144_fu_698_p2 <= "1" when (signed(select_ln139_fu_686_p3) < signed(ap_const_lv12_500)) else "0";
    icmp_ln443_fu_320_p2 <= "1" when (t_V_reg_294 = ap_const_lv10_2D2) else "0";
    icmp_ln444_fu_612_p2 <= "1" when (t_V_2_reg_305 = ap_const_lv11_502) else "0";
    icmp_ln879_1_fu_366_p2 <= "1" when (t_V_reg_294 = ap_const_lv10_0) else "0";
    icmp_ln879_fu_360_p2 <= "1" when (t_V_reg_294 = ap_const_lv10_1) else "0";
    icmp_ln887_fu_332_p2 <= "1" when (unsigned(t_V_reg_294) < unsigned(ap_const_lv10_2D0)) else "0";
    icmp_ln891_fu_634_p2 <= "0" when (tmp_18_fu_624_p4 = ap_const_lv10_0) else "1";
    icmp_ln899_1_fu_372_p2 <= "1" when (unsigned(t_V_reg_294) > unsigned(ap_const_lv10_2D0)) else "0";
    icmp_ln899_fu_354_p2 <= "0" when (tmp_fu_344_p4 = ap_const_lv9_0) else "1";
    j_V_fu_618_p2 <= std_logic_vector(unsigned(t_V_2_reg_305) + unsigned(ap_const_lv11_1));
    k_buf_0_val_3_address0 <= zext_ln835_fu_768_p1(11 - 1 downto 0);
    k_buf_0_val_3_address1 <= zext_ln835_fu_768_p1(11 - 1 downto 0);

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1444, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln444_reg_1444 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1444, and_ln118_reg_1453, icmp_ln899_reg_1409, icmp_ln879_reg_1414, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_reg_1414 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1453) and (icmp_ln899_reg_1409 = ap_const_lv1_0) and (icmp_ln444_reg_1444 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1444, and_ln118_reg_1453, icmp_ln899_reg_1409, icmp_ln887_reg_1400, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln887_reg_1400 = ap_const_lv1_1) and (icmp_ln899_reg_1409 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1453) and (icmp_ln444_reg_1444 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= zext_ln835_fu_768_p1(11 - 1 downto 0);
    k_buf_0_val_4_address1 <= k_buf_0_val_4_addr_reg_1496;

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1444, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln444_reg_1444 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1444, and_ln118_reg_1453, icmp_ln899_reg_1409, icmp_ln879_1_reg_1418, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_1_reg_1418 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1453) and (icmp_ln899_reg_1409 = ap_const_lv1_0) and (icmp_ln444_reg_1444 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(icmp_ln899_reg_1409, icmp_ln887_reg_1400, ap_block_pp0_stage0_11001, and_ln118_reg_1453_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_1400 = ap_const_lv1_1) and (icmp_ln899_reg_1409 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1453_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= zext_ln835_fu_768_p1(11 - 1 downto 0);
    k_buf_0_val_5_address1 <= k_buf_0_val_5_addr_reg_1502;

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1444, and_ln118_reg_1453, icmp_ln899_reg_1409, icmp_ln879_reg_1414, ap_block_pp0_stage0_11001, or_ln457_reg_1467)
    begin
        if ((((icmp_ln879_reg_1414 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1453) and (icmp_ln899_reg_1409 = ap_const_lv1_0) and (icmp_ln444_reg_1444 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_ln457_reg_1467 = ap_const_lv1_1) and (icmp_ln444_reg_1444 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1444, and_ln118_reg_1453, icmp_ln899_reg_1409, icmp_ln879_reg_1414, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_reg_1414 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1453) and (icmp_ln899_reg_1409 = ap_const_lv1_0) and (icmp_ln444_reg_1444 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(icmp_ln899_reg_1409, icmp_ln887_reg_1400, ap_block_pp0_stage0_11001, and_ln118_reg_1453_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_1400 = ap_const_lv1_1) and (icmp_ln899_reg_1409 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1453_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln1118_fu_1281_p0 <= ap_const_lv21_1171(14 - 1 downto 0);
    mul_ln1118_fu_1281_p1 <= mul_ln1118_fu_1281_p10(8 - 1 downto 0);
    mul_ln1118_fu_1281_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_11),21));
    or_ln118_fu_728_p2 <= (xor_ln118_5_fu_722_p2 or tmp_19_fu_646_p3);
    or_ln457_fu_752_p2 <= (xor_ln457_reg_1404 or icmp_ln118_1_fu_660_p2);
    or_ln777_fu_1260_p2 <= (xor_ln777_fu_1246_p2 or tmp_25_fu_1252_p3);
    p_Val2_2_fu_1229_p2 <= std_logic_vector(unsigned(zext_ln415_fu_1226_p1) + unsigned(p_Val2_1_reg_1552));
    p_Val2_s_fu_1180_p2 <= std_logic_vector(unsigned(zext_ln703_7_fu_1132_p1) + unsigned(zext_ln703_9_fu_1177_p1));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, and_ln512_reg_1474_pp0_iter4_reg)
    begin
        if (((ap_const_lv1_1 = and_ln512_reg_1474_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        p_Val2_2_fu_1229_p2 when (deleted_zeros_fu_1266_p2(0) = '1') else 
        ap_const_lv8_FF;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, and_ln512_reg_1474_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_1 = and_ln512_reg_1474_pp0_iter4_reg) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln444_reg_1444, and_ln118_reg_1453, icmp_ln899_reg_1409, icmp_ln887_reg_1400)
    begin
        if ((((icmp_ln887_reg_1400 = ap_const_lv1_1) and (icmp_ln899_reg_1409 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1453) and (icmp_ln444_reg_1444 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = and_ln118_reg_1453) and (icmp_ln899_reg_1409 = ap_const_lv1_0) and (icmp_ln444_reg_1444 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op129_read_state4, ap_predicate_op136_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op136_read_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op129_read_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln118_1_fu_594_p3 <= 
        select_ln139_3_fu_586_p3 when (tmp_16_fu_490_p3(0) = '1') else 
        add_ln118_fu_570_p2;
    select_ln118_2_fu_710_p3 <= 
        ImagLoc_x_fu_640_p2 when (and_ln118_fu_666_p2(0) = '1') else 
        sub_ln147_fu_704_p2;
    select_ln118_fu_556_p3 <= 
        select_ln139_2_fu_548_p3 when (tmp_7_fu_464_p3(0) = '1') else 
        xor_ln118_1_fu_532_p2;
    select_ln139_1_fu_434_p3 <= 
        sub_ln142_fu_428_p2 when (tmp_6_fu_420_p3(0) = '1') else 
        add_ln506_fu_382_p2;
    select_ln139_2_fu_548_p3 <= 
        sub_ln118_fu_538_p2 when (tmp_15_fu_472_p3(0) = '1') else 
        trunc_ln118_fu_544_p1;
    select_ln139_3_fu_586_p3 <= 
        xor_ln118_3_fu_576_p2 when (tmp_17_fu_498_p3(0) = '1') else 
        trunc_ln118_1_fu_582_p1;
    select_ln139_fu_686_p3 <= 
        sub_ln142_1_fu_680_p2 when (tmp_20_fu_672_p3(0) = '1') else 
        ImagLoc_x_fu_640_p2;
    select_ln507_1_fu_518_p3 <= 
        add_ln507_fu_388_p2 when (and_ln118_1_fu_414_p2(0) = '1') else 
        select_ln507_fu_510_p3;
    select_ln507_fu_510_p3 <= 
        trunc_ln507_fu_442_p1 when (icmp_ln144_1_fu_446_p2(0) = '1') else 
        sub_ln507_fu_452_p2;
        sext_ln1118_1_fu_1110_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1118_1_reg_1537),24));

        sext_ln1118_2_fu_1059_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1118_2_fu_1053_p2),24));

        sext_ln1118_3_fu_1166_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1118_3_fu_1160_p2),24));

        sext_ln1118_fu_990_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1118_fu_984_p2),24));

        sext_ln139_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln139_fu_686_p3),13));

        sext_ln144_fu_765_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_reg_1457),32));

    shl_ln1118_1_fu_972_p3 <= (src_kernel_win_0_va_4_fu_182 & ap_const_lv2_0);
    shl_ln1118_2_fu_1001_p3 <= (src_kernel_win_0_va_3_fu_178 & ap_const_lv11_0);
    shl_ln1118_3_fu_1013_p3 <= (src_kernel_win_0_va_3_fu_178 & ap_const_lv2_0);
    shl_ln1118_4_fu_1031_p3 <= (src_kernel_win_0_va_7_reg_1514 & ap_const_lv11_0);
    shl_ln1118_5_fu_1042_p3 <= (src_kernel_win_0_va_7_reg_1514 & ap_const_lv2_0);
    shl_ln1118_6_fu_1136_p3 <= (src_kernel_win_0_va_fu_166 & ap_const_lv11_0);
    shl_ln1118_7_fu_1148_p3 <= (src_kernel_win_0_va_fu_166 & ap_const_lv2_0);
    shl_ln_fu_960_p3 <= (src_kernel_win_0_va_4_fu_182 & ap_const_lv11_0);
    src_kernel_win_0_va_6_fu_894_p3 <= 
        tmp_3_fu_883_p5 when (icmp_ln899_1_reg_1422(0) = '1') else 
        col_buf_0_val_0_0_fu_806_p3;
    src_kernel_win_0_va_7_fu_912_p3 <= 
        tmp_4_fu_901_p5 when (icmp_ln899_1_reg_1422(0) = '1') else 
        col_buf_0_val_1_0_fu_824_p3;
    src_kernel_win_0_va_8_fu_930_p3 <= 
        tmp_10_fu_919_p5 when (icmp_ln899_1_reg_1422(0) = '1') else 
        col_buf_0_val_2_0_fu_841_p3;
    sub_ln1118_1_fu_1025_p2 <= std_logic_vector(unsigned(zext_ln1118_3_fu_1009_p1) - unsigned(zext_ln1118_4_fu_1021_p1));
    sub_ln1118_2_fu_1053_p2 <= std_logic_vector(unsigned(zext_ln1118_6_fu_1038_p1) - unsigned(zext_ln1118_7_fu_1049_p1));
    sub_ln1118_3_fu_1160_p2 <= std_logic_vector(unsigned(zext_ln1118_10_fu_1144_p1) - unsigned(zext_ln1118_11_fu_1156_p1));
    sub_ln1118_fu_984_p2 <= std_logic_vector(unsigned(zext_ln1118_1_fu_968_p1) - unsigned(zext_ln1118_2_fu_980_p1));
    sub_ln118_fu_538_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(trunc_ln142_fu_480_p1));
    sub_ln142_1_fu_680_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(zext_ln444_fu_608_p1));
    sub_ln142_fu_428_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) - unsigned(zext_ln443_fu_316_p1));
    sub_ln147_fu_704_p2 <= std_logic_vector(signed(ap_const_lv12_9FE) - signed(select_ln139_fu_686_p3));
    sub_ln507_fu_452_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(trunc_ln507_fu_442_p1));
    tmp_15_fu_472_p3 <= add_ln506_1_fu_458_p2(10 downto 10);
    tmp_16_fu_490_p3 <= add_ln506_2_fu_484_p2(10 downto 10);
    tmp_17_fu_498_p3 <= add_ln506_2_fu_484_p2(10 downto 10);
    tmp_18_fu_624_p4 <= t_V_2_reg_305(10 downto 1);
    tmp_19_fu_646_p3 <= ImagLoc_x_fu_640_p2(11 downto 11);
    tmp_20_fu_672_p3 <= ImagLoc_x_fu_640_p2(11 downto 11);
    tmp_24_fu_1239_p3 <= p_Val2_s_reg_1547(21 downto 21);
    tmp_25_fu_1252_p3 <= p_Val2_2_fu_1229_p2(7 downto 7);
    tmp_5_fu_394_p3 <= add_ln506_fu_382_p2(10 downto 10);
    tmp_6_fu_420_p3 <= add_ln506_fu_382_p2(10 downto 10);
    tmp_7_fu_464_p3 <= add_ln506_1_fu_458_p2(10 downto 10);
    tmp_fu_344_p4 <= t_V_reg_294(9 downto 1);
    trunc_ln118_1_fu_582_p1 <= add_ln506_2_fu_484_p2(2 - 1 downto 0);
    trunc_ln118_fu_544_p1 <= add_ln506_1_fu_458_p2(2 - 1 downto 0);
    trunc_ln142_1_fu_506_p1 <= t_V_reg_294(2 - 1 downto 0);
    trunc_ln142_fu_480_p1 <= t_V_reg_294(2 - 1 downto 0);
    trunc_ln458_fu_748_p1 <= x_fu_740_p3(2 - 1 downto 0);
    trunc_ln506_fu_378_p1 <= t_V_reg_294(2 - 1 downto 0);
    trunc_ln507_fu_442_p1 <= select_ln139_1_fu_434_p3(2 - 1 downto 0);
    x_fu_740_p3 <= 
        sext_ln139_fu_694_p1 when (and_ln144_fu_734_p2(0) = '1') else 
        zext_ln118_fu_718_p1;
    xor_ln118_1_fu_532_p2 <= (trunc_ln506_fu_378_p1 xor ap_const_lv2_2);
    xor_ln118_2_fu_402_p2 <= (tmp_5_fu_394_p3 xor ap_const_lv1_1);
    xor_ln118_3_fu_576_p2 <= (trunc_ln142_1_fu_506_p1 xor ap_const_lv2_3);
    xor_ln118_4_fu_654_p2 <= (tmp_19_fu_646_p3 xor ap_const_lv1_1);
    xor_ln118_5_fu_722_p2 <= (icmp_ln118_1_fu_660_p2 xor ap_const_lv1_1);
    xor_ln457_fu_338_p2 <= (icmp_ln887_fu_332_p2 xor ap_const_lv1_1);
    xor_ln493_1_fu_526_p2 <= (select_ln507_1_fu_518_p3 xor ap_const_lv2_3);
    xor_ln493_2_fu_564_p2 <= (select_ln118_fu_556_p3 xor ap_const_lv2_3);
    xor_ln493_3_fu_602_p2 <= (select_ln118_1_fu_594_p3 xor ap_const_lv2_3);
    xor_ln493_fu_775_p2 <= (trunc_ln458_reg_1462 xor ap_const_lv2_3);
    xor_ln777_fu_1246_p2 <= (tmp_24_fu_1239_p3 xor ap_const_lv1_1);
    zext_ln1118_10_fu_1144_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_6_fu_1136_p3),20));
    zext_ln1118_11_fu_1156_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_7_fu_1148_p3),20));
    zext_ln1118_1_fu_968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_960_p3),20));
    zext_ln1118_2_fu_980_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_1_fu_972_p3),20));
    zext_ln1118_3_fu_1009_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_2_fu_1001_p3),20));
    zext_ln1118_4_fu_1021_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_3_fu_1013_p3),20));
    zext_ln1118_6_fu_1038_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_4_fu_1031_p3),20));
    zext_ln1118_7_fu_1049_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_5_fu_1042_p3),20));
    zext_ln1118_8_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1118_2_fu_1059_p1),25));
    zext_ln118_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln118_2_fu_710_p3),13));
    zext_ln415_fu_1226_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_reg_1557),8));
    zext_ln443_fu_316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_294),11));
    zext_ln444_fu_608_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_305),12));
    zext_ln703_2_fu_1107_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_1_reg_1532),26));
    zext_ln703_3_fu_1113_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1118_1_fu_1110_p1),26));
    zext_ln703_5_fu_1071_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1297_p3),25));
    zext_ln703_6_fu_1123_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_4_reg_1542),26));
    zext_ln703_7_fu_1132_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_5_fu_1126_p2),27));
    zext_ln703_9_fu_1177_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1305_p3),27));
    zext_ln835_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln144_fu_765_p1),64));
end behav;
