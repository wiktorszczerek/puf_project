// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state9 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln444_reg_1444;
reg   [0:0] and_ln118_reg_1453;
reg   [0:0] icmp_ln899_reg_1409;
reg   [0:0] icmp_ln887_reg_1400;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] and_ln512_reg_1474;
reg   [0:0] and_ln512_reg_1474_pp0_iter4_reg;
reg   [10:0] t_V_2_reg_305;
wire   [0:0] icmp_ln443_fu_320_p2;
wire    ap_CS_fsm_state2;
wire   [9:0] i_V_fu_326_p2;
reg   [9:0] i_V_reg_1395;
wire   [0:0] icmp_ln887_fu_332_p2;
wire   [0:0] xor_ln457_fu_338_p2;
reg   [0:0] xor_ln457_reg_1404;
wire   [0:0] icmp_ln899_fu_354_p2;
wire   [0:0] icmp_ln879_fu_360_p2;
reg   [0:0] icmp_ln879_reg_1414;
wire   [0:0] icmp_ln879_1_fu_366_p2;
reg   [0:0] icmp_ln879_1_reg_1418;
wire   [0:0] icmp_ln899_1_fu_372_p2;
reg   [0:0] icmp_ln899_1_reg_1422;
wire   [1:0] xor_ln493_1_fu_526_p2;
reg   [1:0] xor_ln493_1_reg_1429;
wire   [1:0] xor_ln493_2_fu_564_p2;
reg   [1:0] xor_ln493_2_reg_1434;
wire   [1:0] xor_ln493_3_fu_602_p2;
reg   [1:0] xor_ln493_3_reg_1439;
wire   [0:0] icmp_ln444_fu_612_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op129_read_state4;
reg    ap_predicate_op136_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_state8_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln444_reg_1444_pp0_iter1_reg;
reg   [0:0] icmp_ln444_reg_1444_pp0_iter2_reg;
reg   [0:0] icmp_ln444_reg_1444_pp0_iter3_reg;
wire   [10:0] j_V_fu_618_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] and_ln118_fu_666_p2;
reg   [0:0] and_ln118_reg_1453_pp0_iter1_reg;
wire  signed [12:0] x_fu_740_p3;
reg  signed [12:0] x_reg_1457;
wire   [1:0] trunc_ln458_fu_748_p1;
reg   [1:0] trunc_ln458_reg_1462;
wire   [0:0] or_ln457_fu_752_p2;
reg   [0:0] or_ln457_reg_1467;
reg   [0:0] or_ln457_reg_1467_pp0_iter1_reg;
wire   [0:0] and_ln512_fu_757_p2;
reg   [0:0] and_ln512_reg_1474_pp0_iter1_reg;
reg   [0:0] and_ln512_reg_1474_pp0_iter2_reg;
reg   [0:0] and_ln512_reg_1474_pp0_iter3_reg;
reg   [7:0] right_border_buf_0_6_reg_1478;
wire   [1:0] xor_ln493_fu_775_p2;
reg   [1:0] xor_ln493_reg_1489;
reg   [10:0] k_buf_0_val_4_addr_reg_1496;
reg   [10:0] k_buf_0_val_5_addr_reg_1502;
wire   [7:0] src_kernel_win_0_va_6_fu_894_p3;
reg   [7:0] src_kernel_win_0_va_6_reg_1508;
reg   [7:0] src_kernel_win_0_va_6_reg_1508_pp0_iter3_reg;
wire   [7:0] src_kernel_win_0_va_7_fu_912_p3;
reg   [7:0] src_kernel_win_0_va_7_reg_1514;
wire   [7:0] src_kernel_win_0_va_8_fu_930_p3;
reg   [7:0] src_kernel_win_0_va_8_reg_1521;
wire   [20:0] mul_ln1118_fu_1281_p2;
reg   [20:0] mul_ln1118_reg_1527;
wire   [24:0] grp_fu_1287_p4;
reg   [24:0] add_ln703_1_reg_1532;
reg    ap_enable_reg_pp0_iter3;
wire   [19:0] sub_ln1118_1_fu_1025_p2;
reg   [19:0] sub_ln1118_1_reg_1537;
wire   [24:0] add_ln703_4_fu_1074_p2;
reg   [24:0] add_ln703_4_reg_1542;
wire   [26:0] p_Val2_s_fu_1180_p2;
reg   [26:0] p_Val2_s_reg_1547;
reg   [7:0] p_Val2_1_reg_1552;
reg   [0:0] tmp_23_reg_1557;
reg   [4:0] tmp_11_reg_1562;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state4;
reg    ap_enable_reg_pp0_iter4;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
reg    k_buf_0_val_3_we0;
wire   [7:0] k_buf_0_val_3_q0;
wire   [10:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
reg    k_buf_0_val_4_we0;
wire   [7:0] k_buf_0_val_4_q0;
wire   [10:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
reg    k_buf_0_val_5_we0;
wire   [7:0] k_buf_0_val_5_q0;
wire   [10:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [9:0] t_V_reg_294;
wire    ap_CS_fsm_state9;
wire   [63:0] zext_ln835_fu_768_p1;
reg   [7:0] src_kernel_win_0_va_fu_166;
reg   [7:0] src_kernel_win_0_va_1_fu_170;
reg   [7:0] ap_sig_allocacmp_src_kernel_win_0_va_10;
reg   [7:0] src_kernel_win_0_va_2_fu_174;
reg   [7:0] ap_sig_allocacmp_src_kernel_win_0_va_11;
reg   [7:0] src_kernel_win_0_va_3_fu_178;
reg   [7:0] src_kernel_win_0_va_4_fu_182;
reg   [7:0] src_kernel_win_0_va_5_fu_186;
reg   [7:0] right_border_buf_0_s_fu_190;
wire   [7:0] col_buf_0_val_0_0_fu_806_p3;
reg   [7:0] right_border_buf_0_1_fu_194;
reg   [7:0] right_border_buf_0_2_fu_198;
reg   [7:0] right_border_buf_0_3_fu_202;
wire   [7:0] col_buf_0_val_1_0_fu_824_p3;
reg   [7:0] right_border_buf_0_4_fu_206;
reg   [7:0] right_border_buf_0_5_fu_210;
wire   [7:0] col_buf_0_val_2_0_fu_841_p3;
reg   [7:0] ap_sig_allocacmp_right_border_buf_0_6;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] tmp_fu_344_p4;
wire   [10:0] zext_ln443_fu_316_p1;
wire   [1:0] trunc_ln506_fu_378_p1;
wire   [10:0] add_ln506_fu_382_p2;
wire   [0:0] tmp_5_fu_394_p3;
wire   [0:0] icmp_ln118_fu_408_p2;
wire   [0:0] xor_ln118_2_fu_402_p2;
wire   [0:0] tmp_6_fu_420_p3;
wire   [10:0] sub_ln142_fu_428_p2;
wire   [10:0] select_ln139_1_fu_434_p3;
wire   [1:0] trunc_ln507_fu_442_p1;
wire   [10:0] add_ln506_1_fu_458_p2;
wire   [10:0] add_ln506_2_fu_484_p2;
wire   [0:0] icmp_ln144_1_fu_446_p2;
wire   [1:0] sub_ln507_fu_452_p2;
wire   [0:0] and_ln118_1_fu_414_p2;
wire   [1:0] add_ln507_fu_388_p2;
wire   [1:0] select_ln507_fu_510_p3;
wire   [1:0] select_ln507_1_fu_518_p3;
wire   [1:0] trunc_ln142_fu_480_p1;
wire   [0:0] tmp_15_fu_472_p3;
wire   [1:0] sub_ln118_fu_538_p2;
wire   [1:0] trunc_ln118_fu_544_p1;
wire   [0:0] tmp_7_fu_464_p3;
wire   [1:0] select_ln139_2_fu_548_p3;
wire   [1:0] xor_ln118_1_fu_532_p2;
wire   [1:0] select_ln118_fu_556_p3;
wire   [1:0] trunc_ln142_1_fu_506_p1;
wire   [0:0] tmp_17_fu_498_p3;
wire   [1:0] xor_ln118_3_fu_576_p2;
wire   [1:0] trunc_ln118_1_fu_582_p1;
wire   [0:0] tmp_16_fu_490_p3;
wire   [1:0] select_ln139_3_fu_586_p3;
wire   [1:0] add_ln118_fu_570_p2;
wire   [1:0] select_ln118_1_fu_594_p3;
wire   [9:0] tmp_18_fu_624_p4;
wire   [11:0] zext_ln444_fu_608_p1;
wire   [11:0] ImagLoc_x_fu_640_p2;
wire   [0:0] tmp_19_fu_646_p3;
wire   [0:0] icmp_ln118_1_fu_660_p2;
wire   [0:0] xor_ln118_4_fu_654_p2;
wire   [0:0] tmp_20_fu_672_p3;
wire   [11:0] sub_ln142_1_fu_680_p2;
wire  signed [11:0] select_ln139_fu_686_p3;
wire   [11:0] sub_ln147_fu_704_p2;
wire   [11:0] select_ln118_2_fu_710_p3;
wire   [0:0] xor_ln118_5_fu_722_p2;
wire   [0:0] icmp_ln144_fu_698_p2;
wire   [0:0] or_ln118_fu_728_p2;
wire   [0:0] and_ln144_fu_734_p2;
wire  signed [12:0] sext_ln139_fu_694_p1;
wire   [12:0] zext_ln118_fu_718_p1;
wire   [0:0] icmp_ln891_fu_634_p2;
wire  signed [31:0] sext_ln144_fu_765_p1;
wire   [7:0] tmp_8_fu_795_p5;
wire   [7:0] tmp_9_fu_813_p5;
wire   [7:0] tmp_2_fu_831_p5;
wire   [7:0] tmp_3_fu_883_p5;
wire   [7:0] tmp_4_fu_901_p5;
wire   [7:0] tmp_10_fu_919_p5;
wire   [18:0] shl_ln_fu_960_p3;
wire   [9:0] shl_ln1118_1_fu_972_p3;
wire   [19:0] zext_ln1118_1_fu_968_p1;
wire   [19:0] zext_ln1118_2_fu_980_p1;
wire   [19:0] sub_ln1118_fu_984_p2;
wire  signed [23:0] sext_ln1118_fu_990_p1;
wire   [18:0] shl_ln1118_2_fu_1001_p3;
wire   [9:0] shl_ln1118_3_fu_1013_p3;
wire   [19:0] zext_ln1118_3_fu_1009_p1;
wire   [19:0] zext_ln1118_4_fu_1021_p1;
wire   [18:0] shl_ln1118_4_fu_1031_p3;
wire   [9:0] shl_ln1118_5_fu_1042_p3;
wire   [19:0] zext_ln1118_6_fu_1038_p1;
wire   [19:0] zext_ln1118_7_fu_1049_p1;
wire   [19:0] sub_ln1118_2_fu_1053_p2;
wire  signed [23:0] sext_ln1118_2_fu_1059_p1;
wire   [20:0] grp_fu_1297_p3;
wire   [24:0] zext_ln1118_8_fu_1063_p1;
wire   [24:0] zext_ln703_5_fu_1071_p1;
wire  signed [23:0] sext_ln1118_1_fu_1110_p1;
wire   [25:0] zext_ln703_3_fu_1113_p1;
wire   [25:0] zext_ln703_2_fu_1107_p1;
wire   [25:0] add_ln703_2_fu_1117_p2;
wire   [25:0] zext_ln703_6_fu_1123_p1;
wire   [25:0] add_ln703_5_fu_1126_p2;
wire   [18:0] shl_ln1118_6_fu_1136_p3;
wire   [9:0] shl_ln1118_7_fu_1148_p3;
wire   [19:0] zext_ln1118_10_fu_1144_p1;
wire   [19:0] zext_ln1118_11_fu_1156_p1;
wire   [19:0] sub_ln1118_3_fu_1160_p2;
wire  signed [23:0] sext_ln1118_3_fu_1166_p1;
wire   [24:0] grp_fu_1305_p3;
wire   [26:0] zext_ln703_7_fu_1132_p1;
wire   [26:0] zext_ln703_9_fu_1177_p1;
wire   [7:0] zext_ln415_fu_1226_p1;
wire   [0:0] tmp_24_fu_1239_p3;
wire   [7:0] p_Val2_2_fu_1229_p2;
wire   [0:0] tmp_25_fu_1252_p3;
wire   [0:0] xor_ln777_fu_1246_p2;
wire   [0:0] Range1_all_zeros_fu_1234_p2;
wire   [0:0] or_ln777_fu_1260_p2;
wire   [0:0] deleted_zeros_fu_1266_p2;
wire   [13:0] mul_ln1118_fu_1281_p0;
wire   [7:0] mul_ln1118_fu_1281_p1;
wire   [7:0] grp_fu_1287_p0;
wire   [7:0] grp_fu_1287_p1;
wire   [10:0] grp_fu_1287_p2;
wire   [23:0] grp_fu_1287_p3;
wire   [10:0] grp_fu_1297_p0;
wire   [7:0] grp_fu_1297_p1;
wire   [10:0] grp_fu_1305_p0;
wire   [7:0] grp_fu_1305_p1;
wire   [23:0] grp_fu_1305_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op130_store_state4;
reg    ap_enable_operation_130;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_predicate_op128_load_state4;
reg    ap_enable_operation_128;
reg    ap_enable_operation_153;
reg    ap_enable_state5_pp0_iter2_stage0;
reg    ap_predicate_op158_store_state5;
reg    ap_enable_operation_158;
reg    ap_predicate_op132_store_state4;
reg    ap_enable_operation_132;
reg    ap_enable_operation_126;
wire    ap_enable_operation_150;
reg    ap_predicate_op159_store_state5;
reg    ap_enable_operation_159;
reg    ap_predicate_op134_store_state4;
reg    ap_enable_operation_134;
reg    ap_enable_operation_123;
wire    ap_enable_operation_147;
reg    ap_predicate_op137_store_state4;
reg    ap_enable_operation_137;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [8:0] grp_fu_1287_p00;
wire   [8:0] grp_fu_1287_p10;
wire   [24:0] grp_fu_1287_p30;
wire   [18:0] grp_fu_1297_p10;
wire   [18:0] grp_fu_1305_p10;
wire   [24:0] grp_fu_1305_p20;
wire   [20:0] mul_ln1118_fu_1281_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .we0(k_buf_0_val_3_we0),
    .d0(p_src_data_stream_V_dout),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .we0(k_buf_0_val_4_we0),
    .d0(p_src_data_stream_V_dout),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_3_q0)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .we0(k_buf_0_val_5_we0),
    .d0(p_src_data_stream_V_dout),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_4_q0)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U32(
    .din0(right_border_buf_0_s_fu_190),
    .din1(right_border_buf_0_1_fu_194),
    .din2(8'd0),
    .din3(xor_ln493_reg_1489),
    .dout(tmp_8_fu_795_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U33(
    .din0(right_border_buf_0_3_fu_202),
    .din1(right_border_buf_0_4_fu_206),
    .din2(8'd0),
    .din3(xor_ln493_reg_1489),
    .dout(tmp_9_fu_813_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U34(
    .din0(right_border_buf_0_6_reg_1478),
    .din1(right_border_buf_0_2_fu_198),
    .din2(8'd0),
    .din3(xor_ln493_reg_1489),
    .dout(tmp_2_fu_831_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U35(
    .din0(col_buf_0_val_0_0_fu_806_p3),
    .din1(col_buf_0_val_1_0_fu_824_p3),
    .din2(col_buf_0_val_2_0_fu_841_p3),
    .din3(xor_ln493_1_reg_1429),
    .dout(tmp_3_fu_883_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U36(
    .din0(col_buf_0_val_0_0_fu_806_p3),
    .din1(col_buf_0_val_1_0_fu_824_p3),
    .din2(col_buf_0_val_2_0_fu_841_p3),
    .din3(xor_ln493_2_reg_1434),
    .dout(tmp_4_fu_901_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U37(
    .din0(col_buf_0_val_0_0_fu_806_p3),
    .din1(col_buf_0_val_1_0_fu_824_p3),
    .din2(col_buf_0_val_2_0_fu_841_p3),
    .din3(xor_ln493_3_reg_1439),
    .dout(tmp_10_fu_919_p5)
);

image_filter_mul_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 21 ))
image_filter_mul_ibs_U38(
    .din0(mul_ln1118_fu_1281_p0),
    .din1(mul_ln1118_fu_1281_p1),
    .dout(mul_ln1118_fu_1281_p2)
);

image_filter_ama_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
image_filter_ama_jbC_U39(
    .din0(grp_fu_1287_p0),
    .din1(grp_fu_1287_p1),
    .din2(grp_fu_1287_p2),
    .din3(grp_fu_1287_p3),
    .dout(grp_fu_1287_p4)
);

image_filter_mac_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
image_filter_mac_kbM_U40(
    .din0(grp_fu_1297_p0),
    .din1(grp_fu_1297_p1),
    .din2(mul_ln1118_reg_1527),
    .dout(grp_fu_1297_p3)
);

image_filter_mac_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
image_filter_mac_lbW_U41(
    .din0(grp_fu_1305_p0),
    .din1(grp_fu_1305_p1),
    .din2(grp_fu_1305_p2),
    .dout(grp_fu_1305_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((icmp_ln444_fu_612_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln443_fu_320_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state4)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((icmp_ln443_fu_320_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_fu_612_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_305 <= j_V_fu_618_p2;
    end else if (((icmp_ln443_fu_320_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_305 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        t_V_reg_294 <= i_V_reg_1395;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_294 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln512_reg_1474_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_1_reg_1532 <= grp_fu_1287_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln512_reg_1474_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_4_reg_1542 <= add_ln703_4_fu_1074_p2;
        sub_ln1118_1_reg_1537[19 : 2] <= sub_ln1118_1_fu_1025_p2[19 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_fu_612_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln118_reg_1453 <= and_ln118_fu_666_p2;
        and_ln512_reg_1474 <= and_ln512_fu_757_p2;
        or_ln457_reg_1467 <= or_ln457_fu_752_p2;
        trunc_ln458_reg_1462 <= trunc_ln458_fu_748_p1;
        x_reg_1457 <= x_fu_740_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln118_reg_1453_pp0_iter1_reg <= and_ln118_reg_1453;
        and_ln512_reg_1474_pp0_iter1_reg <= and_ln512_reg_1474;
        icmp_ln444_reg_1444 <= icmp_ln444_fu_612_p2;
        icmp_ln444_reg_1444_pp0_iter1_reg <= icmp_ln444_reg_1444;
        or_ln457_reg_1467_pp0_iter1_reg <= or_ln457_reg_1467;
        right_border_buf_0_6_reg_1478 <= ap_sig_allocacmp_right_border_buf_0_6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln512_reg_1474_pp0_iter2_reg <= and_ln512_reg_1474_pp0_iter1_reg;
        and_ln512_reg_1474_pp0_iter3_reg <= and_ln512_reg_1474_pp0_iter2_reg;
        and_ln512_reg_1474_pp0_iter4_reg <= and_ln512_reg_1474_pp0_iter3_reg;
        icmp_ln444_reg_1444_pp0_iter2_reg <= icmp_ln444_reg_1444_pp0_iter1_reg;
        icmp_ln444_reg_1444_pp0_iter3_reg <= icmp_ln444_reg_1444_pp0_iter2_reg;
        src_kernel_win_0_va_6_reg_1508 <= src_kernel_win_0_va_6_fu_894_p3;
        src_kernel_win_0_va_6_reg_1508_pp0_iter3_reg <= src_kernel_win_0_va_6_reg_1508;
        src_kernel_win_0_va_7_reg_1514 <= src_kernel_win_0_va_7_fu_912_p3;
        src_kernel_win_0_va_8_reg_1521 <= src_kernel_win_0_va_8_fu_930_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1395 <= i_V_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln443_fu_320_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln879_1_reg_1418 <= icmp_ln879_1_fu_366_p2;
        icmp_ln879_reg_1414 <= icmp_ln879_fu_360_p2;
        icmp_ln887_reg_1400 <= icmp_ln887_fu_332_p2;
        icmp_ln899_1_reg_1422 <= icmp_ln899_1_fu_372_p2;
        icmp_ln899_reg_1409 <= icmp_ln899_fu_354_p2;
        xor_ln457_reg_1404 <= xor_ln457_fu_338_p2;
        xor_ln493_1_reg_1429 <= xor_ln493_1_fu_526_p2;
        xor_ln493_2_reg_1434 <= xor_ln493_2_fu_564_p2;
        xor_ln493_3_reg_1439 <= xor_ln493_3_fu_602_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_reg_1444 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_addr_reg_1496 <= zext_ln835_fu_768_p1;
        k_buf_0_val_5_addr_reg_1502 <= zext_ln835_fu_768_p1;
        xor_ln493_reg_1489 <= xor_ln493_fu_775_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln512_reg_1474_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln1118_reg_1527 <= mul_ln1118_fu_1281_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln512_reg_1474_pp0_iter3_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_1_reg_1552 <= {{p_Val2_s_fu_1180_p2[21:14]}};
        p_Val2_s_reg_1547 <= p_Val2_s_fu_1180_p2;
        tmp_11_reg_1562 <= {{p_Val2_s_fu_1180_p2[26:22]}};
        tmp_23_reg_1557 <= p_Val2_s_fu_1180_p2[32'd13];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1400 == 1'd1) & (icmp_ln899_reg_1409 == 1'd1) & (1'd1 == and_ln118_reg_1453_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_194 <= right_border_buf_0_s_fu_190;
        right_border_buf_0_2_fu_198 <= right_border_buf_0_6_reg_1478;
        right_border_buf_0_3_fu_202 <= col_buf_0_val_1_0_fu_824_p3;
        right_border_buf_0_4_fu_206 <= right_border_buf_0_3_fu_202;
        right_border_buf_0_5_fu_210 <= col_buf_0_val_2_0_fu_841_p3;
        right_border_buf_0_s_fu_190 <= col_buf_0_val_0_0_fu_806_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_reg_1444_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_170 <= src_kernel_win_0_va_fu_166;
        src_kernel_win_0_va_fu_166 <= src_kernel_win_0_va_6_reg_1508_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_reg_1444_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_2_fu_174 <= src_kernel_win_0_va_7_reg_1514;
        src_kernel_win_0_va_3_fu_178 <= src_kernel_win_0_va_2_fu_174;
        src_kernel_win_0_va_4_fu_182 <= src_kernel_win_0_va_8_reg_1521;
        src_kernel_win_0_va_5_fu_186 <= src_kernel_win_0_va_4_fu_182;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln443_fu_320_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln443_fu_320_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_1400 == 1'd1) & (icmp_ln899_reg_1409 == 1'd1) & (1'd1 == and_ln118_reg_1453_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_right_border_buf_0_6 = col_buf_0_val_2_0_fu_841_p3;
    end else begin
        ap_sig_allocacmp_right_border_buf_0_6 = right_border_buf_0_5_fu_210;
    end
end

always @ (*) begin
    if (((icmp_ln444_reg_1444_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_src_kernel_win_0_va_10 = src_kernel_win_0_va_fu_166;
    end else begin
        ap_sig_allocacmp_src_kernel_win_0_va_10 = src_kernel_win_0_va_1_fu_170;
    end
end

always @ (*) begin
    if (((icmp_ln444_reg_1444_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_src_kernel_win_0_va_11 = src_kernel_win_0_va_7_reg_1514;
    end else begin
        ap_sig_allocacmp_src_kernel_win_0_va_11 = src_kernel_win_0_va_2_fu_174;
    end
end

always @ (*) begin
    if (((icmp_ln444_reg_1444 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_reg_1414 == 1'd1) & (1'd1 == and_ln118_reg_1453) & (icmp_ln899_reg_1409 == 1'd0) & (icmp_ln444_reg_1444 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_we0 = 1'b1;
    end else begin
        k_buf_0_val_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_1400 == 1'd1) & (icmp_ln899_reg_1409 == 1'd1) & (1'd1 == and_ln118_reg_1453) & (icmp_ln444_reg_1444 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln444_reg_1444 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_1_reg_1418 == 1'd1) & (1'd1 == and_ln118_reg_1453) & (icmp_ln899_reg_1409 == 1'd0) & (icmp_ln444_reg_1444 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_we0 = 1'b1;
    end else begin
        k_buf_0_val_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_1400 == 1'd1) & (icmp_ln899_reg_1409 == 1'd1) & (1'd1 == and_ln118_reg_1453_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln879_reg_1414 == 1'd1) & (1'd1 == and_ln118_reg_1453) & (icmp_ln899_reg_1409 == 1'd0) & (icmp_ln444_reg_1444 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_ln457_reg_1467 == 1'd1) & (icmp_ln444_reg_1444 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_reg_1414 == 1'd1) & (1'd1 == and_ln118_reg_1453) & (icmp_ln899_reg_1409 == 1'd0) & (icmp_ln444_reg_1444 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_we0 = 1'b1;
    end else begin
        k_buf_0_val_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_1400 == 1'd1) & (icmp_ln899_reg_1409 == 1'd1) & (1'd1 == and_ln118_reg_1453_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_1474_pp0_iter4_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_1474_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1400 == 1'd1) & (icmp_ln899_reg_1409 == 1'd1) & (1'd1 == and_ln118_reg_1453) & (icmp_ln444_reg_1444 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd1 == and_ln118_reg_1453) & (icmp_ln899_reg_1409 == 1'd0) & (icmp_ln444_reg_1444 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op136_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op129_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln443_fu_320_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_640_p2 = ($signed(12'd4095) + $signed(zext_ln444_fu_608_p1));

assign Range1_all_zeros_fu_1234_p2 = ((tmp_11_reg_1562 == 5'd0) ? 1'b1 : 1'b0);

assign add_ln118_fu_570_p2 = (2'd1 + trunc_ln506_fu_378_p1);

assign add_ln506_1_fu_458_p2 = ($signed(11'd2046) + $signed(zext_ln443_fu_316_p1));

assign add_ln506_2_fu_484_p2 = ($signed(11'd2045) + $signed(zext_ln443_fu_316_p1));

assign add_ln506_fu_382_p2 = ($signed(11'd2047) + $signed(zext_ln443_fu_316_p1));

assign add_ln507_fu_388_p2 = ($signed(2'd3) + $signed(trunc_ln506_fu_378_p1));

assign add_ln703_2_fu_1117_p2 = (zext_ln703_3_fu_1113_p1 + zext_ln703_2_fu_1107_p1);

assign add_ln703_4_fu_1074_p2 = (zext_ln1118_8_fu_1063_p1 + zext_ln703_5_fu_1071_p1);

assign add_ln703_5_fu_1126_p2 = (add_ln703_2_fu_1117_p2 + zext_ln703_6_fu_1123_p1);

assign and_ln118_1_fu_414_p2 = (xor_ln118_2_fu_402_p2 & icmp_ln118_fu_408_p2);

assign and_ln118_fu_666_p2 = (xor_ln118_4_fu_654_p2 & icmp_ln118_1_fu_660_p2);

assign and_ln144_fu_734_p2 = (or_ln118_fu_728_p2 & icmp_ln144_fu_698_p2);

assign and_ln512_fu_757_p2 = (icmp_ln899_reg_1409 & icmp_ln891_fu_634_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'd1 == and_ln512_reg_1474_pp0_iter4_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op136_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op129_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'd1 == and_ln512_reg_1474_pp0_iter4_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op136_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op129_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'd1 == and_ln512_reg_1474_pp0_iter4_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op136_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op129_read_state4 == 1'b1)))));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op136_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op129_read_state4 == 1'b1)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter5 = ((1'd1 == and_ln512_reg_1474_pp0_iter4_reg) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_enable_operation_123 = (icmp_ln444_reg_1444 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_126 = (icmp_ln444_reg_1444 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_128 = (ap_predicate_op128_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_130 = (ap_predicate_op130_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_132 = (ap_predicate_op132_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_134 = (ap_predicate_op134_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_137 = (ap_predicate_op137_store_state4 == 1'b1);
end

assign ap_enable_operation_147 = (1'b1 == 1'b1);

assign ap_enable_operation_150 = (1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_153 = (or_ln457_reg_1467_pp0_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_158 = (ap_predicate_op158_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_159 = (ap_predicate_op159_store_state5 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter2_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_predicate_op128_load_state4 = ((or_ln457_reg_1467 == 1'd1) & (icmp_ln444_reg_1444 == 1'd0));
end

always @ (*) begin
    ap_predicate_op129_read_state4 = ((1'd1 == and_ln118_reg_1453) & (icmp_ln899_reg_1409 == 1'd0) & (icmp_ln444_reg_1444 == 1'd0));
end

always @ (*) begin
    ap_predicate_op130_store_state4 = ((icmp_ln879_reg_1414 == 1'd1) & (1'd1 == and_ln118_reg_1453) & (icmp_ln899_reg_1409 == 1'd0) & (icmp_ln444_reg_1444 == 1'd0));
end

always @ (*) begin
    ap_predicate_op132_store_state4 = ((icmp_ln879_1_reg_1418 == 1'd1) & (1'd1 == and_ln118_reg_1453) & (icmp_ln899_reg_1409 == 1'd0) & (icmp_ln444_reg_1444 == 1'd0));
end

always @ (*) begin
    ap_predicate_op134_store_state4 = ((icmp_ln879_reg_1414 == 1'd1) & (1'd1 == and_ln118_reg_1453) & (icmp_ln899_reg_1409 == 1'd0) & (icmp_ln444_reg_1444 == 1'd0));
end

always @ (*) begin
    ap_predicate_op136_read_state4 = ((icmp_ln887_reg_1400 == 1'd1) & (icmp_ln899_reg_1409 == 1'd1) & (1'd1 == and_ln118_reg_1453) & (icmp_ln444_reg_1444 == 1'd0));
end

always @ (*) begin
    ap_predicate_op137_store_state4 = ((icmp_ln887_reg_1400 == 1'd1) & (icmp_ln899_reg_1409 == 1'd1) & (1'd1 == and_ln118_reg_1453) & (icmp_ln444_reg_1444 == 1'd0));
end

always @ (*) begin
    ap_predicate_op158_store_state5 = ((icmp_ln887_reg_1400 == 1'd1) & (icmp_ln899_reg_1409 == 1'd1) & (1'd1 == and_ln118_reg_1453_pp0_iter1_reg));
end

always @ (*) begin
    ap_predicate_op159_store_state5 = ((icmp_ln887_reg_1400 == 1'd1) & (icmp_ln899_reg_1409 == 1'd1) & (1'd1 == and_ln118_reg_1453_pp0_iter1_reg));
end

assign col_buf_0_val_0_0_fu_806_p3 = ((or_ln457_reg_1467_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_8_fu_795_p5);

assign col_buf_0_val_1_0_fu_824_p3 = ((or_ln457_reg_1467_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_9_fu_813_p5);

assign col_buf_0_val_2_0_fu_841_p3 = ((or_ln457_reg_1467_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_2_fu_831_p5);

assign deleted_zeros_fu_1266_p2 = (or_ln777_fu_1260_p2 & Range1_all_zeros_fu_1234_p2);

assign grp_fu_1287_p0 = grp_fu_1287_p00;

assign grp_fu_1287_p00 = src_kernel_win_0_va_8_reg_1521;

assign grp_fu_1287_p1 = grp_fu_1287_p10;

assign grp_fu_1287_p10 = src_kernel_win_0_va_5_fu_186;

assign grp_fu_1287_p2 = 19'd936;

assign grp_fu_1287_p3 = grp_fu_1287_p30;

assign grp_fu_1287_p30 = $unsigned(sext_ln1118_fu_990_p1);

assign grp_fu_1297_p0 = 19'd936;

assign grp_fu_1297_p1 = grp_fu_1297_p10;

assign grp_fu_1297_p10 = ap_sig_allocacmp_src_kernel_win_0_va_10;

assign grp_fu_1305_p0 = 19'd936;

assign grp_fu_1305_p1 = grp_fu_1305_p10;

assign grp_fu_1305_p10 = src_kernel_win_0_va_6_reg_1508_pp0_iter3_reg;

assign grp_fu_1305_p2 = grp_fu_1305_p20;

assign grp_fu_1305_p20 = $unsigned(sext_ln1118_3_fu_1166_p1);

assign i_V_fu_326_p2 = (t_V_reg_294 + 10'd1);

assign icmp_ln118_1_fu_660_p2 = (($signed(ImagLoc_x_fu_640_p2) < $signed(12'd1280)) ? 1'b1 : 1'b0);

assign icmp_ln118_fu_408_p2 = (($signed(add_ln506_fu_382_p2) < $signed(11'd720)) ? 1'b1 : 1'b0);

assign icmp_ln144_1_fu_446_p2 = (($signed(select_ln139_1_fu_434_p3) < $signed(11'd720)) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_698_p2 = (($signed(select_ln139_fu_686_p3) < $signed(12'd1280)) ? 1'b1 : 1'b0);

assign icmp_ln443_fu_320_p2 = ((t_V_reg_294 == 10'd722) ? 1'b1 : 1'b0);

assign icmp_ln444_fu_612_p2 = ((t_V_2_reg_305 == 11'd1282) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_366_p2 = ((t_V_reg_294 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_360_p2 = ((t_V_reg_294 == 10'd1) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_332_p2 = ((t_V_reg_294 < 10'd720) ? 1'b1 : 1'b0);

assign icmp_ln891_fu_634_p2 = ((tmp_18_fu_624_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln899_1_fu_372_p2 = ((t_V_reg_294 > 10'd720) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_354_p2 = ((tmp_fu_344_p4 != 9'd0) ? 1'b1 : 1'b0);

assign j_V_fu_618_p2 = (t_V_2_reg_305 + 11'd1);

assign k_buf_0_val_3_address0 = zext_ln835_fu_768_p1;

assign k_buf_0_val_3_address1 = zext_ln835_fu_768_p1;

assign k_buf_0_val_4_address0 = zext_ln835_fu_768_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_1496;

assign k_buf_0_val_5_address0 = zext_ln835_fu_768_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_1502;

assign mul_ln1118_fu_1281_p0 = 21'd4465;

assign mul_ln1118_fu_1281_p1 = mul_ln1118_fu_1281_p10;

assign mul_ln1118_fu_1281_p10 = ap_sig_allocacmp_src_kernel_win_0_va_11;

assign or_ln118_fu_728_p2 = (xor_ln118_5_fu_722_p2 | tmp_19_fu_646_p3);

assign or_ln457_fu_752_p2 = (xor_ln457_reg_1404 | icmp_ln118_1_fu_660_p2);

assign or_ln777_fu_1260_p2 = (xor_ln777_fu_1246_p2 | tmp_25_fu_1252_p3);

assign p_Val2_2_fu_1229_p2 = (zext_ln415_fu_1226_p1 + p_Val2_1_reg_1552);

assign p_Val2_s_fu_1180_p2 = (zext_ln703_7_fu_1132_p1 + zext_ln703_9_fu_1177_p1);

assign p_dst_data_stream_V_din = ((deleted_zeros_fu_1266_p2[0:0] === 1'b1) ? p_Val2_2_fu_1229_p2 : 8'd255);

assign select_ln118_1_fu_594_p3 = ((tmp_16_fu_490_p3[0:0] === 1'b1) ? select_ln139_3_fu_586_p3 : add_ln118_fu_570_p2);

assign select_ln118_2_fu_710_p3 = ((and_ln118_fu_666_p2[0:0] === 1'b1) ? ImagLoc_x_fu_640_p2 : sub_ln147_fu_704_p2);

assign select_ln118_fu_556_p3 = ((tmp_7_fu_464_p3[0:0] === 1'b1) ? select_ln139_2_fu_548_p3 : xor_ln118_1_fu_532_p2);

assign select_ln139_1_fu_434_p3 = ((tmp_6_fu_420_p3[0:0] === 1'b1) ? sub_ln142_fu_428_p2 : add_ln506_fu_382_p2);

assign select_ln139_2_fu_548_p3 = ((tmp_15_fu_472_p3[0:0] === 1'b1) ? sub_ln118_fu_538_p2 : trunc_ln118_fu_544_p1);

assign select_ln139_3_fu_586_p3 = ((tmp_17_fu_498_p3[0:0] === 1'b1) ? xor_ln118_3_fu_576_p2 : trunc_ln118_1_fu_582_p1);

assign select_ln139_fu_686_p3 = ((tmp_20_fu_672_p3[0:0] === 1'b1) ? sub_ln142_1_fu_680_p2 : ImagLoc_x_fu_640_p2);

assign select_ln507_1_fu_518_p3 = ((and_ln118_1_fu_414_p2[0:0] === 1'b1) ? add_ln507_fu_388_p2 : select_ln507_fu_510_p3);

assign select_ln507_fu_510_p3 = ((icmp_ln144_1_fu_446_p2[0:0] === 1'b1) ? trunc_ln507_fu_442_p1 : sub_ln507_fu_452_p2);

assign sext_ln1118_1_fu_1110_p1 = $signed(sub_ln1118_1_reg_1537);

assign sext_ln1118_2_fu_1059_p1 = $signed(sub_ln1118_2_fu_1053_p2);

assign sext_ln1118_3_fu_1166_p1 = $signed(sub_ln1118_3_fu_1160_p2);

assign sext_ln1118_fu_990_p1 = $signed(sub_ln1118_fu_984_p2);

assign sext_ln139_fu_694_p1 = select_ln139_fu_686_p3;

assign sext_ln144_fu_765_p1 = x_reg_1457;

assign shl_ln1118_1_fu_972_p3 = {{src_kernel_win_0_va_4_fu_182}, {2'd0}};

assign shl_ln1118_2_fu_1001_p3 = {{src_kernel_win_0_va_3_fu_178}, {11'd0}};

assign shl_ln1118_3_fu_1013_p3 = {{src_kernel_win_0_va_3_fu_178}, {2'd0}};

assign shl_ln1118_4_fu_1031_p3 = {{src_kernel_win_0_va_7_reg_1514}, {11'd0}};

assign shl_ln1118_5_fu_1042_p3 = {{src_kernel_win_0_va_7_reg_1514}, {2'd0}};

assign shl_ln1118_6_fu_1136_p3 = {{src_kernel_win_0_va_fu_166}, {11'd0}};

assign shl_ln1118_7_fu_1148_p3 = {{src_kernel_win_0_va_fu_166}, {2'd0}};

assign shl_ln_fu_960_p3 = {{src_kernel_win_0_va_4_fu_182}, {11'd0}};

assign src_kernel_win_0_va_6_fu_894_p3 = ((icmp_ln899_1_reg_1422[0:0] === 1'b1) ? tmp_3_fu_883_p5 : col_buf_0_val_0_0_fu_806_p3);

assign src_kernel_win_0_va_7_fu_912_p3 = ((icmp_ln899_1_reg_1422[0:0] === 1'b1) ? tmp_4_fu_901_p5 : col_buf_0_val_1_0_fu_824_p3);

assign src_kernel_win_0_va_8_fu_930_p3 = ((icmp_ln899_1_reg_1422[0:0] === 1'b1) ? tmp_10_fu_919_p5 : col_buf_0_val_2_0_fu_841_p3);

assign sub_ln1118_1_fu_1025_p2 = (zext_ln1118_3_fu_1009_p1 - zext_ln1118_4_fu_1021_p1);

assign sub_ln1118_2_fu_1053_p2 = (zext_ln1118_6_fu_1038_p1 - zext_ln1118_7_fu_1049_p1);

assign sub_ln1118_3_fu_1160_p2 = (zext_ln1118_10_fu_1144_p1 - zext_ln1118_11_fu_1156_p1);

assign sub_ln1118_fu_984_p2 = (zext_ln1118_1_fu_968_p1 - zext_ln1118_2_fu_980_p1);

assign sub_ln118_fu_538_p2 = ($signed(2'd2) - $signed(trunc_ln142_fu_480_p1));

assign sub_ln142_1_fu_680_p2 = (12'd1 - zext_ln444_fu_608_p1);

assign sub_ln142_fu_428_p2 = (11'd1 - zext_ln443_fu_316_p1);

assign sub_ln147_fu_704_p2 = ($signed(12'd2558) - $signed(select_ln139_fu_686_p3));

assign sub_ln507_fu_452_p2 = ($signed(2'd2) - $signed(trunc_ln507_fu_442_p1));

assign tmp_15_fu_472_p3 = add_ln506_1_fu_458_p2[32'd10];

assign tmp_16_fu_490_p3 = add_ln506_2_fu_484_p2[32'd10];

assign tmp_17_fu_498_p3 = add_ln506_2_fu_484_p2[32'd10];

assign tmp_18_fu_624_p4 = {{t_V_2_reg_305[10:1]}};

assign tmp_19_fu_646_p3 = ImagLoc_x_fu_640_p2[32'd11];

assign tmp_20_fu_672_p3 = ImagLoc_x_fu_640_p2[32'd11];

assign tmp_24_fu_1239_p3 = p_Val2_s_reg_1547[32'd21];

assign tmp_25_fu_1252_p3 = p_Val2_2_fu_1229_p2[32'd7];

assign tmp_5_fu_394_p3 = add_ln506_fu_382_p2[32'd10];

assign tmp_6_fu_420_p3 = add_ln506_fu_382_p2[32'd10];

assign tmp_7_fu_464_p3 = add_ln506_1_fu_458_p2[32'd10];

assign tmp_fu_344_p4 = {{t_V_reg_294[9:1]}};

assign trunc_ln118_1_fu_582_p1 = add_ln506_2_fu_484_p2[1:0];

assign trunc_ln118_fu_544_p1 = add_ln506_1_fu_458_p2[1:0];

assign trunc_ln142_1_fu_506_p1 = t_V_reg_294[1:0];

assign trunc_ln142_fu_480_p1 = t_V_reg_294[1:0];

assign trunc_ln458_fu_748_p1 = x_fu_740_p3[1:0];

assign trunc_ln506_fu_378_p1 = t_V_reg_294[1:0];

assign trunc_ln507_fu_442_p1 = select_ln139_1_fu_434_p3[1:0];

assign x_fu_740_p3 = ((and_ln144_fu_734_p2[0:0] === 1'b1) ? sext_ln139_fu_694_p1 : zext_ln118_fu_718_p1);

assign xor_ln118_1_fu_532_p2 = (trunc_ln506_fu_378_p1 ^ 2'd2);

assign xor_ln118_2_fu_402_p2 = (tmp_5_fu_394_p3 ^ 1'd1);

assign xor_ln118_3_fu_576_p2 = (trunc_ln142_1_fu_506_p1 ^ 2'd3);

assign xor_ln118_4_fu_654_p2 = (tmp_19_fu_646_p3 ^ 1'd1);

assign xor_ln118_5_fu_722_p2 = (icmp_ln118_1_fu_660_p2 ^ 1'd1);

assign xor_ln457_fu_338_p2 = (icmp_ln887_fu_332_p2 ^ 1'd1);

assign xor_ln493_1_fu_526_p2 = (select_ln507_1_fu_518_p3 ^ 2'd3);

assign xor_ln493_2_fu_564_p2 = (select_ln118_fu_556_p3 ^ 2'd3);

assign xor_ln493_3_fu_602_p2 = (select_ln118_1_fu_594_p3 ^ 2'd3);

assign xor_ln493_fu_775_p2 = (trunc_ln458_reg_1462 ^ 2'd3);

assign xor_ln777_fu_1246_p2 = (tmp_24_fu_1239_p3 ^ 1'd1);

assign zext_ln1118_10_fu_1144_p1 = shl_ln1118_6_fu_1136_p3;

assign zext_ln1118_11_fu_1156_p1 = shl_ln1118_7_fu_1148_p3;

assign zext_ln1118_1_fu_968_p1 = shl_ln_fu_960_p3;

assign zext_ln1118_2_fu_980_p1 = shl_ln1118_1_fu_972_p3;

assign zext_ln1118_3_fu_1009_p1 = shl_ln1118_2_fu_1001_p3;

assign zext_ln1118_4_fu_1021_p1 = shl_ln1118_3_fu_1013_p3;

assign zext_ln1118_6_fu_1038_p1 = shl_ln1118_4_fu_1031_p3;

assign zext_ln1118_7_fu_1049_p1 = shl_ln1118_5_fu_1042_p3;

assign zext_ln1118_8_fu_1063_p1 = $unsigned(sext_ln1118_2_fu_1059_p1);

assign zext_ln118_fu_718_p1 = select_ln118_2_fu_710_p3;

assign zext_ln415_fu_1226_p1 = tmp_23_reg_1557;

assign zext_ln443_fu_316_p1 = t_V_reg_294;

assign zext_ln444_fu_608_p1 = t_V_2_reg_305;

assign zext_ln703_2_fu_1107_p1 = add_ln703_1_reg_1532;

assign zext_ln703_3_fu_1113_p1 = $unsigned(sext_ln1118_1_fu_1110_p1);

assign zext_ln703_5_fu_1071_p1 = grp_fu_1297_p3;

assign zext_ln703_6_fu_1123_p1 = add_ln703_4_reg_1542;

assign zext_ln703_7_fu_1132_p1 = add_ln703_5_fu_1126_p2;

assign zext_ln703_9_fu_1177_p1 = grp_fu_1305_p3;

assign zext_ln835_fu_768_p1 = $unsigned(sext_ln144_fu_765_p1);

always @ (posedge ap_clk) begin
    sub_ln1118_1_reg_1537[1:0] <= 2'b00;
end

endmodule //Filter2D_1
