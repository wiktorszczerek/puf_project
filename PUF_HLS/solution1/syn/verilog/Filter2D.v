// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_read,
        p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_2_read,
        p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state9 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [1:0] p_kernel_val_0_V_1_read;
input  [1:0] p_kernel_val_0_V_2_read;
input  [2:0] p_kernel_val_1_V_0_read;
input  [3:0] p_kernel_val_1_V_2_read;
input  [1:0] p_kernel_val_2_V_0_read;
input  [2:0] p_kernel_val_2_V_1_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln444_reg_1451;
reg   [0:0] and_ln118_reg_1460;
reg   [0:0] icmp_ln899_reg_1416;
reg   [0:0] icmp_ln887_reg_1407;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] and_ln512_reg_1481;
reg   [0:0] and_ln512_reg_1481_pp0_iter4_reg;
reg   [10:0] t_V_2_reg_335;
wire  signed [9:0] sext_ln1118_fu_346_p1;
reg  signed [9:0] sext_ln1118_reg_1368;
wire  signed [9:0] sext_ln1118_1_fu_350_p1;
reg  signed [9:0] sext_ln1118_1_reg_1373;
wire  signed [10:0] sext_ln1118_2_fu_354_p1;
reg  signed [10:0] sext_ln1118_2_reg_1378;
wire   [11:0] zext_ln1118_4_fu_358_p1;
reg   [11:0] zext_ln1118_4_reg_1383;
wire  signed [9:0] sext_ln1118_3_fu_362_p1;
reg  signed [9:0] sext_ln1118_3_reg_1388;
wire   [10:0] zext_ln1118_8_fu_366_p1;
reg   [10:0] zext_ln1118_8_reg_1393;
wire   [0:0] icmp_ln443_fu_374_p2;
wire    ap_CS_fsm_state2;
wire   [9:0] i_V_fu_380_p2;
reg   [9:0] i_V_reg_1402;
wire   [0:0] icmp_ln887_fu_386_p2;
wire   [0:0] xor_ln457_fu_392_p2;
reg   [0:0] xor_ln457_reg_1411;
wire   [0:0] icmp_ln899_fu_408_p2;
wire   [0:0] icmp_ln879_fu_414_p2;
reg   [0:0] icmp_ln879_reg_1421;
wire   [0:0] icmp_ln879_1_fu_420_p2;
reg   [0:0] icmp_ln879_1_reg_1425;
wire   [0:0] icmp_ln899_1_fu_426_p2;
reg   [0:0] icmp_ln899_1_reg_1429;
wire   [1:0] xor_ln493_1_fu_580_p2;
reg   [1:0] xor_ln493_1_reg_1436;
wire   [1:0] xor_ln493_2_fu_618_p2;
reg   [1:0] xor_ln493_2_reg_1441;
wire   [1:0] xor_ln493_3_fu_656_p2;
reg   [1:0] xor_ln493_3_reg_1446;
wire   [0:0] icmp_ln444_fu_666_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op141_read_state4;
reg    ap_predicate_op148_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_state8_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln444_reg_1451_pp0_iter1_reg;
reg   [0:0] icmp_ln444_reg_1451_pp0_iter2_reg;
wire   [10:0] j_V_fu_672_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] and_ln118_fu_720_p2;
reg   [0:0] and_ln118_reg_1460_pp0_iter1_reg;
wire  signed [12:0] x_fu_794_p3;
reg  signed [12:0] x_reg_1464;
wire   [1:0] trunc_ln458_fu_802_p1;
reg   [1:0] trunc_ln458_reg_1469;
wire   [0:0] or_ln457_fu_806_p2;
reg   [0:0] or_ln457_reg_1474;
reg   [0:0] or_ln457_reg_1474_pp0_iter1_reg;
wire   [0:0] and_ln512_fu_811_p2;
reg   [0:0] and_ln512_reg_1481_pp0_iter1_reg;
reg   [0:0] and_ln512_reg_1481_pp0_iter2_reg;
reg   [0:0] and_ln512_reg_1481_pp0_iter3_reg;
reg   [7:0] right_border_buf_0_19_reg_1485;
wire   [1:0] xor_ln493_fu_829_p2;
reg   [1:0] xor_ln493_reg_1496;
reg   [10:0] k_buf_0_val_4_addr_reg_1503;
reg   [10:0] k_buf_0_val_5_addr_reg_1509;
wire   [7:0] src_kernel_win_0_va_23_fu_948_p3;
reg   [7:0] src_kernel_win_0_va_23_reg_1515;
reg   [7:0] src_kernel_win_0_va_23_reg_1515_pp0_iter3_reg;
wire   [7:0] src_kernel_win_0_va_24_fu_966_p3;
reg   [7:0] src_kernel_win_0_va_24_reg_1522;
wire   [7:0] src_kernel_win_0_va_25_fu_984_p3;
reg   [7:0] src_kernel_win_0_va_25_reg_1528;
wire   [7:0] trunc_ln703_2_fu_1059_p1;
reg   [7:0] trunc_ln703_2_reg_1534;
wire   [10:0] add_ln703_1_fu_1063_p2;
reg   [10:0] add_ln703_1_reg_1539;
wire  signed [10:0] mul_ln1118_2_fu_1073_p2;
reg  signed [10:0] mul_ln1118_2_reg_1544;
wire   [7:0] trunc_ln703_3_fu_1078_p1;
reg   [7:0] trunc_ln703_3_reg_1549;
wire   [11:0] mul_ln1118_3_fu_1085_p2;
reg   [11:0] mul_ln1118_3_reg_1554;
wire   [7:0] trunc_ln703_6_fu_1120_p1;
reg   [7:0] trunc_ln703_6_reg_1559;
wire   [10:0] add_ln703_4_fu_1124_p2;
reg   [10:0] add_ln703_4_reg_1564;
wire   [7:0] add_ln703_7_fu_1130_p2;
reg   [7:0] add_ln703_7_reg_1569;
wire   [7:0] add_ln703_10_fu_1136_p2;
reg   [7:0] add_ln703_10_reg_1574;
reg   [0:0] p_Result_s_reg_1579;
wire   [7:0] p_Val2_5_fu_1239_p2;
reg   [7:0] p_Val2_5_reg_1585;
reg   [3:0] tmp_10_reg_1590;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state4;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
reg    k_buf_0_val_3_we0;
wire   [7:0] k_buf_0_val_3_q0;
wire   [10:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
reg    k_buf_0_val_4_we0;
wire   [7:0] k_buf_0_val_4_q0;
wire   [10:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
reg    k_buf_0_val_5_we0;
wire   [7:0] k_buf_0_val_5_q0;
wire   [10:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [9:0] t_V_reg_324;
wire    ap_CS_fsm_state9;
wire   [63:0] zext_ln835_fu_822_p1;
reg   [7:0] src_kernel_win_0_va_fu_160;
reg   [7:0] src_kernel_win_0_va_18_fu_164;
reg   [7:0] src_kernel_win_0_va_19_fu_168;
reg   [7:0] src_kernel_win_0_va_20_fu_172;
reg   [7:0] src_kernel_win_0_va_21_fu_176;
reg   [7:0] src_kernel_win_0_va_22_fu_180;
reg   [7:0] right_border_buf_0_s_fu_184;
wire   [7:0] col_buf_0_val_0_0_fu_860_p3;
reg   [7:0] right_border_buf_0_14_fu_188;
reg   [7:0] right_border_buf_0_15_fu_192;
reg   [7:0] right_border_buf_0_16_fu_196;
wire   [7:0] col_buf_0_val_1_0_fu_878_p3;
reg   [7:0] right_border_buf_0_17_fu_200;
reg   [7:0] right_border_buf_0_18_fu_204;
wire   [7:0] col_buf_0_val_2_0_fu_895_p3;
reg   [7:0] ap_sig_allocacmp_right_border_buf_0_19;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] tmp_fu_398_p4;
wire   [10:0] zext_ln443_fu_370_p1;
wire   [1:0] trunc_ln506_fu_432_p1;
wire   [10:0] add_ln506_fu_436_p2;
wire   [0:0] tmp_28_fu_448_p3;
wire   [0:0] icmp_ln118_fu_462_p2;
wire   [0:0] xor_ln118_6_fu_456_p2;
wire   [0:0] tmp_29_fu_474_p3;
wire   [10:0] sub_ln142_fu_482_p2;
wire   [10:0] select_ln139_1_fu_488_p3;
wire   [1:0] trunc_ln507_fu_496_p1;
wire   [10:0] add_ln506_1_fu_512_p2;
wire   [10:0] add_ln506_2_fu_538_p2;
wire   [0:0] icmp_ln144_1_fu_500_p2;
wire   [1:0] sub_ln507_fu_506_p2;
wire   [0:0] and_ln118_1_fu_468_p2;
wire   [1:0] add_ln507_fu_442_p2;
wire   [1:0] select_ln507_fu_564_p3;
wire   [1:0] select_ln507_1_fu_572_p3;
wire   [1:0] trunc_ln142_fu_534_p1;
wire   [0:0] tmp_31_fu_526_p3;
wire   [1:0] sub_ln118_fu_592_p2;
wire   [1:0] trunc_ln118_fu_598_p1;
wire   [0:0] tmp_30_fu_518_p3;
wire   [1:0] select_ln139_4_fu_602_p3;
wire   [1:0] xor_ln118_1_fu_586_p2;
wire   [1:0] select_ln118_fu_610_p3;
wire   [1:0] trunc_ln142_2_fu_560_p1;
wire   [0:0] tmp_33_fu_552_p3;
wire   [1:0] xor_ln118_7_fu_630_p2;
wire   [1:0] trunc_ln118_2_fu_636_p1;
wire   [0:0] tmp_32_fu_544_p3;
wire   [1:0] select_ln139_5_fu_640_p3;
wire   [1:0] add_ln118_fu_624_p2;
wire   [1:0] select_ln118_1_fu_648_p3;
wire   [9:0] tmp_34_fu_678_p4;
wire   [11:0] zext_ln444_fu_662_p1;
wire   [11:0] ImagLoc_x_fu_694_p2;
wire   [0:0] tmp_35_fu_700_p3;
wire   [0:0] icmp_ln118_1_fu_714_p2;
wire   [0:0] xor_ln118_8_fu_708_p2;
wire   [0:0] tmp_36_fu_726_p3;
wire   [11:0] sub_ln142_2_fu_734_p2;
wire  signed [11:0] select_ln139_fu_740_p3;
wire   [11:0] sub_ln147_fu_758_p2;
wire   [11:0] select_ln118_3_fu_764_p3;
wire   [0:0] xor_ln118_9_fu_776_p2;
wire   [0:0] icmp_ln144_fu_752_p2;
wire   [0:0] or_ln118_fu_782_p2;
wire   [0:0] and_ln144_fu_788_p2;
wire  signed [12:0] sext_ln139_fu_748_p1;
wire   [12:0] zext_ln118_fu_772_p1;
wire   [0:0] icmp_ln891_fu_688_p2;
wire  signed [31:0] sext_ln144_fu_819_p1;
wire   [7:0] tmp_4_fu_849_p5;
wire   [7:0] tmp_5_fu_867_p5;
wire   [7:0] tmp_6_fu_885_p5;
wire   [7:0] tmp_7_fu_937_p5;
wire   [7:0] tmp_8_fu_955_p5;
wire   [7:0] tmp_9_fu_973_p5;
wire   [8:0] zext_ln1118_fu_1006_p1;
wire  signed [8:0] sub_ln1118_fu_1010_p2;
wire  signed [1:0] mul_ln1118_fu_1024_p0;
wire   [7:0] mul_ln1118_fu_1024_p1;
wire  signed [9:0] mul_ln1118_fu_1024_p2;
wire  signed [10:0] sext_ln1116_fu_1016_p1;
wire  signed [10:0] sext_ln703_fu_1029_p1;
wire  signed [1:0] mul_ln1118_1_fu_1050_p0;
wire   [7:0] mul_ln1118_1_fu_1050_p1;
wire  signed [9:0] mul_ln1118_1_fu_1050_p2;
wire  signed [10:0] sext_ln703_1_fu_1055_p1;
wire   [10:0] add_ln703_fu_1041_p2;
wire  signed [2:0] mul_ln1118_2_fu_1073_p0;
wire   [7:0] mul_ln1118_2_fu_1073_p1;
wire   [3:0] mul_ln1118_3_fu_1085_p0;
wire   [7:0] mul_ln1118_3_fu_1085_p1;
wire  signed [1:0] mul_ln1118_4_fu_1098_p0;
wire   [7:0] mul_ln1118_4_fu_1098_p1;
wire  signed [9:0] mul_ln1118_4_fu_1098_p2;
wire   [2:0] mul_ln1118_5_fu_1115_p0;
wire   [7:0] mul_ln1118_5_fu_1115_p1;
wire   [10:0] mul_ln1118_5_fu_1115_p2;
wire  signed [10:0] sext_ln703_4_fu_1103_p1;
wire   [7:0] trunc_ln703_fu_1033_p1;
wire   [7:0] trunc_ln703_1_fu_1037_p1;
wire   [7:0] trunc_ln703_5_fu_1107_p1;
wire   [7:0] trunc_ln703_4_fu_1090_p1;
wire  signed [11:0] sext_ln703_3_fu_1181_p1;
wire  signed [11:0] sext_ln703_2_fu_1178_p1;
wire   [11:0] add_ln703_2_fu_1184_p2;
wire   [11:0] add_ln703_3_fu_1190_p2;
wire  signed [11:0] sext_ln703_5_fu_1195_p1;
wire   [11:0] zext_ln703_fu_1204_p1;
wire   [11:0] add_ln703_5_fu_1198_p2;
wire   [11:0] p_Val2_s_fu_1207_p2;
wire   [7:0] add_ln703_8_fu_1221_p2;
wire   [7:0] add_ln703_11_fu_1230_p2;
wire   [7:0] add_ln703_9_fu_1225_p2;
wire   [7:0] add_ln703_12_fu_1234_p2;
wire   [0:0] icmp_ln785_fu_1260_p2;
wire   [0:0] xor_ln785_fu_1255_p2;
wire   [0:0] overflow_fu_1265_p2;
wire   [0:0] or_ln340_fu_1279_p2;
wire   [7:0] select_ln340_fu_1271_p3;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op142_store_state4;
reg    ap_enable_operation_142;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_predicate_op140_load_state4;
reg    ap_enable_operation_140;
reg    ap_enable_operation_165;
reg    ap_enable_state5_pp0_iter2_stage0;
reg    ap_predicate_op170_store_state5;
reg    ap_enable_operation_170;
reg    ap_predicate_op144_store_state4;
reg    ap_enable_operation_144;
reg    ap_enable_operation_138;
wire    ap_enable_operation_162;
reg    ap_predicate_op171_store_state5;
reg    ap_enable_operation_171;
reg    ap_predicate_op146_store_state4;
reg    ap_enable_operation_146;
reg    ap_enable_operation_135;
wire    ap_enable_operation_159;
reg    ap_predicate_op149_store_state4;
reg    ap_enable_operation_149;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] mul_ln1118_1_fu_1050_p10;
wire   [10:0] mul_ln1118_2_fu_1073_p10;
wire   [11:0] mul_ln1118_3_fu_1085_p10;
wire   [9:0] mul_ln1118_4_fu_1098_p10;
wire   [10:0] mul_ln1118_5_fu_1115_p10;
wire   [9:0] mul_ln1118_fu_1024_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .we0(k_buf_0_val_3_we0),
    .d0(p_src_data_stream_V_dout),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .we0(k_buf_0_val_4_we0),
    .d0(p_src_data_stream_V_dout),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_3_q0)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .we0(k_buf_0_val_5_we0),
    .d0(p_src_data_stream_V_dout),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_4_q0)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U55(
    .din0(right_border_buf_0_s_fu_184),
    .din1(right_border_buf_0_14_fu_188),
    .din2(8'd0),
    .din3(xor_ln493_reg_1496),
    .dout(tmp_4_fu_849_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U56(
    .din0(right_border_buf_0_16_fu_196),
    .din1(right_border_buf_0_17_fu_200),
    .din2(8'd0),
    .din3(xor_ln493_reg_1496),
    .dout(tmp_5_fu_867_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U57(
    .din0(right_border_buf_0_19_reg_1485),
    .din1(right_border_buf_0_15_fu_192),
    .din2(8'd0),
    .din3(xor_ln493_reg_1496),
    .dout(tmp_6_fu_885_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U58(
    .din0(col_buf_0_val_0_0_fu_860_p3),
    .din1(col_buf_0_val_1_0_fu_878_p3),
    .din2(col_buf_0_val_2_0_fu_895_p3),
    .din3(xor_ln493_1_reg_1436),
    .dout(tmp_7_fu_937_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U59(
    .din0(col_buf_0_val_0_0_fu_860_p3),
    .din1(col_buf_0_val_1_0_fu_878_p3),
    .din2(col_buf_0_val_2_0_fu_895_p3),
    .din3(xor_ln493_2_reg_1441),
    .dout(tmp_8_fu_955_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U60(
    .din0(col_buf_0_val_0_0_fu_860_p3),
    .din1(col_buf_0_val_1_0_fu_878_p3),
    .din2(col_buf_0_val_2_0_fu_895_p3),
    .din3(xor_ln493_3_reg_1446),
    .dout(tmp_9_fu_973_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((icmp_ln444_fu_666_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln443_fu_374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state4)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((icmp_ln443_fu_374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_fu_666_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_335 <= j_V_fu_672_p2;
    end else if (((icmp_ln443_fu_374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_335 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        t_V_reg_324 <= i_V_reg_1402;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_324 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln512_reg_1481_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_10_reg_1574 <= add_ln703_10_fu_1136_p2;
        add_ln703_1_reg_1539 <= add_ln703_1_fu_1063_p2;
        add_ln703_4_reg_1564 <= add_ln703_4_fu_1124_p2;
        add_ln703_7_reg_1569 <= add_ln703_7_fu_1130_p2;
        mul_ln1118_2_reg_1544 <= mul_ln1118_2_fu_1073_p2;
        mul_ln1118_3_reg_1554 <= mul_ln1118_3_fu_1085_p2;
        trunc_ln703_2_reg_1534 <= trunc_ln703_2_fu_1059_p1;
        trunc_ln703_3_reg_1549 <= trunc_ln703_3_fu_1078_p1;
        trunc_ln703_6_reg_1559 <= trunc_ln703_6_fu_1120_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_fu_666_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln118_reg_1460 <= and_ln118_fu_720_p2;
        and_ln512_reg_1481 <= and_ln512_fu_811_p2;
        or_ln457_reg_1474 <= or_ln457_fu_806_p2;
        trunc_ln458_reg_1469 <= trunc_ln458_fu_802_p1;
        x_reg_1464 <= x_fu_794_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln118_reg_1460_pp0_iter1_reg <= and_ln118_reg_1460;
        and_ln512_reg_1481_pp0_iter1_reg <= and_ln512_reg_1481;
        icmp_ln444_reg_1451 <= icmp_ln444_fu_666_p2;
        icmp_ln444_reg_1451_pp0_iter1_reg <= icmp_ln444_reg_1451;
        or_ln457_reg_1474_pp0_iter1_reg <= or_ln457_reg_1474;
        right_border_buf_0_19_reg_1485 <= ap_sig_allocacmp_right_border_buf_0_19;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln512_reg_1481_pp0_iter2_reg <= and_ln512_reg_1481_pp0_iter1_reg;
        and_ln512_reg_1481_pp0_iter3_reg <= and_ln512_reg_1481_pp0_iter2_reg;
        and_ln512_reg_1481_pp0_iter4_reg <= and_ln512_reg_1481_pp0_iter3_reg;
        icmp_ln444_reg_1451_pp0_iter2_reg <= icmp_ln444_reg_1451_pp0_iter1_reg;
        src_kernel_win_0_va_23_reg_1515 <= src_kernel_win_0_va_23_fu_948_p3;
        src_kernel_win_0_va_23_reg_1515_pp0_iter3_reg <= src_kernel_win_0_va_23_reg_1515;
        src_kernel_win_0_va_24_reg_1522 <= src_kernel_win_0_va_24_fu_966_p3;
        src_kernel_win_0_va_25_reg_1528 <= src_kernel_win_0_va_25_fu_984_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1402 <= i_V_fu_380_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln443_fu_374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln879_1_reg_1425 <= icmp_ln879_1_fu_420_p2;
        icmp_ln879_reg_1421 <= icmp_ln879_fu_414_p2;
        icmp_ln887_reg_1407 <= icmp_ln887_fu_386_p2;
        icmp_ln899_1_reg_1429 <= icmp_ln899_1_fu_426_p2;
        icmp_ln899_reg_1416 <= icmp_ln899_fu_408_p2;
        xor_ln457_reg_1411 <= xor_ln457_fu_392_p2;
        xor_ln493_1_reg_1436 <= xor_ln493_1_fu_580_p2;
        xor_ln493_2_reg_1441 <= xor_ln493_2_fu_618_p2;
        xor_ln493_3_reg_1446 <= xor_ln493_3_fu_656_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_reg_1451 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_addr_reg_1503 <= zext_ln835_fu_822_p1;
        k_buf_0_val_5_addr_reg_1509 <= zext_ln835_fu_822_p1;
        xor_ln493_reg_1496 <= xor_ln493_fu_829_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln512_reg_1481_pp0_iter3_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_s_reg_1579 <= p_Val2_s_fu_1207_p2[32'd11];
        p_Val2_5_reg_1585 <= p_Val2_5_fu_1239_p2;
        tmp_10_reg_1590 <= {{p_Val2_s_fu_1207_p2[11:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1407 == 1'd1) & (icmp_ln899_reg_1416 == 1'd1) & (1'd1 == and_ln118_reg_1460_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_14_fu_188 <= right_border_buf_0_s_fu_184;
        right_border_buf_0_15_fu_192 <= right_border_buf_0_19_reg_1485;
        right_border_buf_0_16_fu_196 <= col_buf_0_val_1_0_fu_878_p3;
        right_border_buf_0_17_fu_200 <= right_border_buf_0_16_fu_196;
        right_border_buf_0_18_fu_204 <= col_buf_0_val_2_0_fu_895_p3;
        right_border_buf_0_s_fu_184 <= col_buf_0_val_0_0_fu_860_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sext_ln1118_1_reg_1373 <= sext_ln1118_1_fu_350_p1;
        sext_ln1118_2_reg_1378 <= sext_ln1118_2_fu_354_p1;
        sext_ln1118_3_reg_1388 <= sext_ln1118_3_fu_362_p1;
        sext_ln1118_reg_1368 <= sext_ln1118_fu_346_p1;
        zext_ln1118_4_reg_1383[3 : 0] <= zext_ln1118_4_fu_358_p1[3 : 0];
        zext_ln1118_8_reg_1393[2 : 0] <= zext_ln1118_8_fu_366_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_reg_1451_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_18_fu_164 <= src_kernel_win_0_va_fu_160;
        src_kernel_win_0_va_19_fu_168 <= src_kernel_win_0_va_24_reg_1522;
        src_kernel_win_0_va_20_fu_172 <= src_kernel_win_0_va_19_fu_168;
        src_kernel_win_0_va_21_fu_176 <= src_kernel_win_0_va_25_reg_1528;
        src_kernel_win_0_va_22_fu_180 <= src_kernel_win_0_va_21_fu_176;
        src_kernel_win_0_va_fu_160 <= src_kernel_win_0_va_23_reg_1515;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln443_fu_374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln443_fu_374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_1407 == 1'd1) & (icmp_ln899_reg_1416 == 1'd1) & (1'd1 == and_ln118_reg_1460_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_right_border_buf_0_19 = col_buf_0_val_2_0_fu_895_p3;
    end else begin
        ap_sig_allocacmp_right_border_buf_0_19 = right_border_buf_0_18_fu_204;
    end
end

always @ (*) begin
    if (((icmp_ln444_reg_1451 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_reg_1421 == 1'd1) & (1'd1 == and_ln118_reg_1460) & (icmp_ln899_reg_1416 == 1'd0) & (icmp_ln444_reg_1451 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_we0 = 1'b1;
    end else begin
        k_buf_0_val_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_1407 == 1'd1) & (icmp_ln899_reg_1416 == 1'd1) & (1'd1 == and_ln118_reg_1460) & (icmp_ln444_reg_1451 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln444_reg_1451 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_1_reg_1425 == 1'd1) & (1'd1 == and_ln118_reg_1460) & (icmp_ln899_reg_1416 == 1'd0) & (icmp_ln444_reg_1451 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_we0 = 1'b1;
    end else begin
        k_buf_0_val_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_1407 == 1'd1) & (icmp_ln899_reg_1416 == 1'd1) & (1'd1 == and_ln118_reg_1460_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln879_reg_1421 == 1'd1) & (1'd1 == and_ln118_reg_1460) & (icmp_ln899_reg_1416 == 1'd0) & (icmp_ln444_reg_1451 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_ln457_reg_1474 == 1'd1) & (icmp_ln444_reg_1451 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_reg_1421 == 1'd1) & (1'd1 == and_ln118_reg_1460) & (icmp_ln899_reg_1416 == 1'd0) & (icmp_ln444_reg_1451 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_we0 = 1'b1;
    end else begin
        k_buf_0_val_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_1407 == 1'd1) & (icmp_ln899_reg_1416 == 1'd1) & (1'd1 == and_ln118_reg_1460_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_1481_pp0_iter4_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_1481_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1407 == 1'd1) & (icmp_ln899_reg_1416 == 1'd1) & (1'd1 == and_ln118_reg_1460) & (icmp_ln444_reg_1451 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd1 == and_ln118_reg_1460) & (icmp_ln899_reg_1416 == 1'd0) & (icmp_ln444_reg_1451 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op148_read_state4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op141_read_state4 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln443_fu_374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_694_p2 = ($signed(12'd4095) + $signed(zext_ln444_fu_662_p1));

assign add_ln118_fu_624_p2 = (2'd1 + trunc_ln506_fu_432_p1);

assign add_ln506_1_fu_512_p2 = ($signed(11'd2046) + $signed(zext_ln443_fu_370_p1));

assign add_ln506_2_fu_538_p2 = ($signed(11'd2045) + $signed(zext_ln443_fu_370_p1));

assign add_ln506_fu_436_p2 = ($signed(11'd2047) + $signed(zext_ln443_fu_370_p1));

assign add_ln507_fu_442_p2 = ($signed(2'd3) + $signed(trunc_ln506_fu_432_p1));

assign add_ln703_10_fu_1136_p2 = (trunc_ln703_5_fu_1107_p1 + trunc_ln703_4_fu_1090_p1);

assign add_ln703_11_fu_1230_p2 = (src_kernel_win_0_va_23_reg_1515_pp0_iter3_reg + trunc_ln703_6_reg_1559);

assign add_ln703_12_fu_1234_p2 = (add_ln703_10_reg_1574 + add_ln703_11_fu_1230_p2);

assign add_ln703_1_fu_1063_p2 = ($signed(sext_ln703_1_fu_1055_p1) + $signed(add_ln703_fu_1041_p2));

assign add_ln703_2_fu_1184_p2 = ($signed(sext_ln703_3_fu_1181_p1) + $signed(sext_ln703_2_fu_1178_p1));

assign add_ln703_3_fu_1190_p2 = (mul_ln1118_3_reg_1554 + add_ln703_2_fu_1184_p2);

assign add_ln703_4_fu_1124_p2 = ($signed(sext_ln703_4_fu_1103_p1) + $signed(mul_ln1118_5_fu_1115_p2));

assign add_ln703_5_fu_1198_p2 = ($signed(add_ln703_3_fu_1190_p2) + $signed(sext_ln703_5_fu_1195_p1));

assign add_ln703_7_fu_1130_p2 = (trunc_ln703_fu_1033_p1 + trunc_ln703_1_fu_1037_p1);

assign add_ln703_8_fu_1221_p2 = (trunc_ln703_3_reg_1549 + trunc_ln703_2_reg_1534);

assign add_ln703_9_fu_1225_p2 = (add_ln703_7_reg_1569 + add_ln703_8_fu_1221_p2);

assign add_ln703_fu_1041_p2 = ($signed(sext_ln1116_fu_1016_p1) + $signed(sext_ln703_fu_1029_p1));

assign and_ln118_1_fu_468_p2 = (xor_ln118_6_fu_456_p2 & icmp_ln118_fu_462_p2);

assign and_ln118_fu_720_p2 = (xor_ln118_8_fu_708_p2 & icmp_ln118_1_fu_714_p2);

assign and_ln144_fu_788_p2 = (or_ln118_fu_782_p2 & icmp_ln144_fu_752_p2);

assign and_ln512_fu_811_p2 = (icmp_ln899_reg_1416 & icmp_ln891_fu_688_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'd1 == and_ln512_reg_1481_pp0_iter4_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op148_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op141_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'd1 == and_ln512_reg_1481_pp0_iter4_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op148_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op141_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'd1 == and_ln512_reg_1481_pp0_iter4_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op148_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op141_read_state4 == 1'b1)))));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op148_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op141_read_state4 == 1'b1)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter5 = ((1'd1 == and_ln512_reg_1481_pp0_iter4_reg) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_enable_operation_135 = (icmp_ln444_reg_1451 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_138 = (icmp_ln444_reg_1451 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_140 = (ap_predicate_op140_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_142 = (ap_predicate_op142_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_144 = (ap_predicate_op144_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_146 = (ap_predicate_op146_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_149 = (ap_predicate_op149_store_state4 == 1'b1);
end

assign ap_enable_operation_159 = (1'b1 == 1'b1);

assign ap_enable_operation_162 = (1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_165 = (or_ln457_reg_1474_pp0_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_170 = (ap_predicate_op170_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_171 = (ap_predicate_op171_store_state5 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter2_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_predicate_op140_load_state4 = ((or_ln457_reg_1474 == 1'd1) & (icmp_ln444_reg_1451 == 1'd0));
end

always @ (*) begin
    ap_predicate_op141_read_state4 = ((1'd1 == and_ln118_reg_1460) & (icmp_ln899_reg_1416 == 1'd0) & (icmp_ln444_reg_1451 == 1'd0));
end

always @ (*) begin
    ap_predicate_op142_store_state4 = ((icmp_ln879_reg_1421 == 1'd1) & (1'd1 == and_ln118_reg_1460) & (icmp_ln899_reg_1416 == 1'd0) & (icmp_ln444_reg_1451 == 1'd0));
end

always @ (*) begin
    ap_predicate_op144_store_state4 = ((icmp_ln879_1_reg_1425 == 1'd1) & (1'd1 == and_ln118_reg_1460) & (icmp_ln899_reg_1416 == 1'd0) & (icmp_ln444_reg_1451 == 1'd0));
end

always @ (*) begin
    ap_predicate_op146_store_state4 = ((icmp_ln879_reg_1421 == 1'd1) & (1'd1 == and_ln118_reg_1460) & (icmp_ln899_reg_1416 == 1'd0) & (icmp_ln444_reg_1451 == 1'd0));
end

always @ (*) begin
    ap_predicate_op148_read_state4 = ((icmp_ln887_reg_1407 == 1'd1) & (icmp_ln899_reg_1416 == 1'd1) & (1'd1 == and_ln118_reg_1460) & (icmp_ln444_reg_1451 == 1'd0));
end

always @ (*) begin
    ap_predicate_op149_store_state4 = ((icmp_ln887_reg_1407 == 1'd1) & (icmp_ln899_reg_1416 == 1'd1) & (1'd1 == and_ln118_reg_1460) & (icmp_ln444_reg_1451 == 1'd0));
end

always @ (*) begin
    ap_predicate_op170_store_state5 = ((icmp_ln887_reg_1407 == 1'd1) & (icmp_ln899_reg_1416 == 1'd1) & (1'd1 == and_ln118_reg_1460_pp0_iter1_reg));
end

always @ (*) begin
    ap_predicate_op171_store_state5 = ((icmp_ln887_reg_1407 == 1'd1) & (icmp_ln899_reg_1416 == 1'd1) & (1'd1 == and_ln118_reg_1460_pp0_iter1_reg));
end

assign col_buf_0_val_0_0_fu_860_p3 = ((or_ln457_reg_1474_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_4_fu_849_p5);

assign col_buf_0_val_1_0_fu_878_p3 = ((or_ln457_reg_1474_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_5_fu_867_p5);

assign col_buf_0_val_2_0_fu_895_p3 = ((or_ln457_reg_1474_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_6_fu_885_p5);

assign i_V_fu_380_p2 = (t_V_reg_324 + 10'd1);

assign icmp_ln118_1_fu_714_p2 = (($signed(ImagLoc_x_fu_694_p2) < $signed(12'd1280)) ? 1'b1 : 1'b0);

assign icmp_ln118_fu_462_p2 = (($signed(add_ln506_fu_436_p2) < $signed(11'd720)) ? 1'b1 : 1'b0);

assign icmp_ln144_1_fu_500_p2 = (($signed(select_ln139_1_fu_488_p3) < $signed(11'd720)) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_752_p2 = (($signed(select_ln139_fu_740_p3) < $signed(12'd1280)) ? 1'b1 : 1'b0);

assign icmp_ln443_fu_374_p2 = ((t_V_reg_324 == 10'd722) ? 1'b1 : 1'b0);

assign icmp_ln444_fu_666_p2 = ((t_V_2_reg_335 == 11'd1282) ? 1'b1 : 1'b0);

assign icmp_ln785_fu_1260_p2 = ((tmp_10_reg_1590 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_420_p2 = ((t_V_reg_324 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_414_p2 = ((t_V_reg_324 == 10'd1) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_386_p2 = ((t_V_reg_324 < 10'd720) ? 1'b1 : 1'b0);

assign icmp_ln891_fu_688_p2 = ((tmp_34_fu_678_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln899_1_fu_426_p2 = ((t_V_reg_324 > 10'd720) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_408_p2 = ((tmp_fu_398_p4 != 9'd0) ? 1'b1 : 1'b0);

assign j_V_fu_672_p2 = (t_V_2_reg_335 + 11'd1);

assign k_buf_0_val_3_address0 = zext_ln835_fu_822_p1;

assign k_buf_0_val_3_address1 = zext_ln835_fu_822_p1;

assign k_buf_0_val_4_address0 = zext_ln835_fu_822_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_1503;

assign k_buf_0_val_5_address0 = zext_ln835_fu_822_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_1509;

assign mul_ln1118_1_fu_1050_p0 = sext_ln1118_1_reg_1373;

assign mul_ln1118_1_fu_1050_p1 = mul_ln1118_1_fu_1050_p10;

assign mul_ln1118_1_fu_1050_p10 = src_kernel_win_0_va_25_reg_1528;

assign mul_ln1118_1_fu_1050_p2 = ($signed(mul_ln1118_1_fu_1050_p0) * $signed({{1'b0}, {mul_ln1118_1_fu_1050_p1}}));

assign mul_ln1118_2_fu_1073_p0 = sext_ln1118_2_reg_1378;

assign mul_ln1118_2_fu_1073_p1 = mul_ln1118_2_fu_1073_p10;

assign mul_ln1118_2_fu_1073_p10 = src_kernel_win_0_va_20_fu_172;

assign mul_ln1118_2_fu_1073_p2 = ($signed(mul_ln1118_2_fu_1073_p0) * $signed({{1'b0}, {mul_ln1118_2_fu_1073_p1}}));

assign mul_ln1118_3_fu_1085_p0 = zext_ln1118_4_reg_1383;

assign mul_ln1118_3_fu_1085_p1 = mul_ln1118_3_fu_1085_p10;

assign mul_ln1118_3_fu_1085_p10 = src_kernel_win_0_va_24_reg_1522;

assign mul_ln1118_3_fu_1085_p2 = (mul_ln1118_3_fu_1085_p0 * mul_ln1118_3_fu_1085_p1);

assign mul_ln1118_4_fu_1098_p0 = sext_ln1118_3_reg_1388;

assign mul_ln1118_4_fu_1098_p1 = mul_ln1118_4_fu_1098_p10;

assign mul_ln1118_4_fu_1098_p10 = src_kernel_win_0_va_18_fu_164;

assign mul_ln1118_4_fu_1098_p2 = ($signed(mul_ln1118_4_fu_1098_p0) * $signed({{1'b0}, {mul_ln1118_4_fu_1098_p1}}));

assign mul_ln1118_5_fu_1115_p0 = zext_ln1118_8_reg_1393;

assign mul_ln1118_5_fu_1115_p1 = mul_ln1118_5_fu_1115_p10;

assign mul_ln1118_5_fu_1115_p10 = src_kernel_win_0_va_fu_160;

assign mul_ln1118_5_fu_1115_p2 = (mul_ln1118_5_fu_1115_p0 * mul_ln1118_5_fu_1115_p1);

assign mul_ln1118_fu_1024_p0 = sext_ln1118_reg_1368;

assign mul_ln1118_fu_1024_p1 = mul_ln1118_fu_1024_p10;

assign mul_ln1118_fu_1024_p10 = src_kernel_win_0_va_21_fu_176;

assign mul_ln1118_fu_1024_p2 = ($signed(mul_ln1118_fu_1024_p0) * $signed({{1'b0}, {mul_ln1118_fu_1024_p1}}));

assign or_ln118_fu_782_p2 = (xor_ln118_9_fu_776_p2 | tmp_35_fu_700_p3);

assign or_ln340_fu_1279_p2 = (p_Result_s_reg_1579 | overflow_fu_1265_p2);

assign or_ln457_fu_806_p2 = (xor_ln457_reg_1411 | icmp_ln118_1_fu_714_p2);

assign overflow_fu_1265_p2 = (xor_ln785_fu_1255_p2 & icmp_ln785_fu_1260_p2);

assign p_Val2_5_fu_1239_p2 = (add_ln703_9_fu_1225_p2 + add_ln703_12_fu_1234_p2);

assign p_Val2_s_fu_1207_p2 = (zext_ln703_fu_1204_p1 + add_ln703_5_fu_1198_p2);

assign p_dst_data_stream_V_din = ((or_ln340_fu_1279_p2[0:0] === 1'b1) ? select_ln340_fu_1271_p3 : p_Val2_5_reg_1585);

assign select_ln118_1_fu_648_p3 = ((tmp_32_fu_544_p3[0:0] === 1'b1) ? select_ln139_5_fu_640_p3 : add_ln118_fu_624_p2);

assign select_ln118_3_fu_764_p3 = ((and_ln118_fu_720_p2[0:0] === 1'b1) ? ImagLoc_x_fu_694_p2 : sub_ln147_fu_758_p2);

assign select_ln118_fu_610_p3 = ((tmp_30_fu_518_p3[0:0] === 1'b1) ? select_ln139_4_fu_602_p3 : xor_ln118_1_fu_586_p2);

assign select_ln139_1_fu_488_p3 = ((tmp_29_fu_474_p3[0:0] === 1'b1) ? sub_ln142_fu_482_p2 : add_ln506_fu_436_p2);

assign select_ln139_4_fu_602_p3 = ((tmp_31_fu_526_p3[0:0] === 1'b1) ? sub_ln118_fu_592_p2 : trunc_ln118_fu_598_p1);

assign select_ln139_5_fu_640_p3 = ((tmp_33_fu_552_p3[0:0] === 1'b1) ? xor_ln118_7_fu_630_p2 : trunc_ln118_2_fu_636_p1);

assign select_ln139_fu_740_p3 = ((tmp_36_fu_726_p3[0:0] === 1'b1) ? sub_ln142_2_fu_734_p2 : ImagLoc_x_fu_694_p2);

assign select_ln340_fu_1271_p3 = ((xor_ln785_fu_1255_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln507_1_fu_572_p3 = ((and_ln118_1_fu_468_p2[0:0] === 1'b1) ? add_ln507_fu_442_p2 : select_ln507_fu_564_p3);

assign select_ln507_fu_564_p3 = ((icmp_ln144_1_fu_500_p2[0:0] === 1'b1) ? trunc_ln507_fu_496_p1 : sub_ln507_fu_506_p2);

assign sext_ln1116_fu_1016_p1 = sub_ln1118_fu_1010_p2;

assign sext_ln1118_1_fu_350_p1 = $signed(p_kernel_val_0_V_2_read);

assign sext_ln1118_2_fu_354_p1 = $signed(p_kernel_val_1_V_0_read);

assign sext_ln1118_3_fu_362_p1 = $signed(p_kernel_val_2_V_0_read);

assign sext_ln1118_fu_346_p1 = $signed(p_kernel_val_0_V_1_read);

assign sext_ln139_fu_748_p1 = select_ln139_fu_740_p3;

assign sext_ln144_fu_819_p1 = x_reg_1464;

assign sext_ln703_1_fu_1055_p1 = mul_ln1118_1_fu_1050_p2;

assign sext_ln703_2_fu_1178_p1 = $signed(add_ln703_1_reg_1539);

assign sext_ln703_3_fu_1181_p1 = mul_ln1118_2_reg_1544;

assign sext_ln703_4_fu_1103_p1 = mul_ln1118_4_fu_1098_p2;

assign sext_ln703_5_fu_1195_p1 = $signed(add_ln703_4_reg_1564);

assign sext_ln703_fu_1029_p1 = mul_ln1118_fu_1024_p2;

assign src_kernel_win_0_va_23_fu_948_p3 = ((icmp_ln899_1_reg_1429[0:0] === 1'b1) ? tmp_7_fu_937_p5 : col_buf_0_val_0_0_fu_860_p3);

assign src_kernel_win_0_va_24_fu_966_p3 = ((icmp_ln899_1_reg_1429[0:0] === 1'b1) ? tmp_8_fu_955_p5 : col_buf_0_val_1_0_fu_878_p3);

assign src_kernel_win_0_va_25_fu_984_p3 = ((icmp_ln899_1_reg_1429[0:0] === 1'b1) ? tmp_9_fu_973_p5 : col_buf_0_val_2_0_fu_895_p3);

assign sub_ln1118_fu_1010_p2 = (9'd0 - zext_ln1118_fu_1006_p1);

assign sub_ln118_fu_592_p2 = ($signed(2'd2) - $signed(trunc_ln142_fu_534_p1));

assign sub_ln142_2_fu_734_p2 = (12'd1 - zext_ln444_fu_662_p1);

assign sub_ln142_fu_482_p2 = (11'd1 - zext_ln443_fu_370_p1);

assign sub_ln147_fu_758_p2 = ($signed(12'd2558) - $signed(select_ln139_fu_740_p3));

assign sub_ln507_fu_506_p2 = ($signed(2'd2) - $signed(trunc_ln507_fu_496_p1));

assign tmp_28_fu_448_p3 = add_ln506_fu_436_p2[32'd10];

assign tmp_29_fu_474_p3 = add_ln506_fu_436_p2[32'd10];

assign tmp_30_fu_518_p3 = add_ln506_1_fu_512_p2[32'd10];

assign tmp_31_fu_526_p3 = add_ln506_1_fu_512_p2[32'd10];

assign tmp_32_fu_544_p3 = add_ln506_2_fu_538_p2[32'd10];

assign tmp_33_fu_552_p3 = add_ln506_2_fu_538_p2[32'd10];

assign tmp_34_fu_678_p4 = {{t_V_2_reg_335[10:1]}};

assign tmp_35_fu_700_p3 = ImagLoc_x_fu_694_p2[32'd11];

assign tmp_36_fu_726_p3 = ImagLoc_x_fu_694_p2[32'd11];

assign tmp_fu_398_p4 = {{t_V_reg_324[9:1]}};

assign trunc_ln118_2_fu_636_p1 = add_ln506_2_fu_538_p2[1:0];

assign trunc_ln118_fu_598_p1 = add_ln506_1_fu_512_p2[1:0];

assign trunc_ln142_2_fu_560_p1 = t_V_reg_324[1:0];

assign trunc_ln142_fu_534_p1 = t_V_reg_324[1:0];

assign trunc_ln458_fu_802_p1 = x_fu_794_p3[1:0];

assign trunc_ln506_fu_432_p1 = t_V_reg_324[1:0];

assign trunc_ln507_fu_496_p1 = select_ln139_1_fu_488_p3[1:0];

assign trunc_ln703_1_fu_1037_p1 = mul_ln1118_fu_1024_p2[7:0];

assign trunc_ln703_2_fu_1059_p1 = mul_ln1118_1_fu_1050_p2[7:0];

assign trunc_ln703_3_fu_1078_p1 = mul_ln1118_2_fu_1073_p2[7:0];

assign trunc_ln703_4_fu_1090_p1 = mul_ln1118_3_fu_1085_p2[7:0];

assign trunc_ln703_5_fu_1107_p1 = mul_ln1118_4_fu_1098_p2[7:0];

assign trunc_ln703_6_fu_1120_p1 = mul_ln1118_5_fu_1115_p2[7:0];

assign trunc_ln703_fu_1033_p1 = sub_ln1118_fu_1010_p2[7:0];

assign x_fu_794_p3 = ((and_ln144_fu_788_p2[0:0] === 1'b1) ? sext_ln139_fu_748_p1 : zext_ln118_fu_772_p1);

assign xor_ln118_1_fu_586_p2 = (trunc_ln506_fu_432_p1 ^ 2'd2);

assign xor_ln118_6_fu_456_p2 = (tmp_28_fu_448_p3 ^ 1'd1);

assign xor_ln118_7_fu_630_p2 = (trunc_ln142_2_fu_560_p1 ^ 2'd3);

assign xor_ln118_8_fu_708_p2 = (tmp_35_fu_700_p3 ^ 1'd1);

assign xor_ln118_9_fu_776_p2 = (icmp_ln118_1_fu_714_p2 ^ 1'd1);

assign xor_ln457_fu_392_p2 = (icmp_ln887_fu_386_p2 ^ 1'd1);

assign xor_ln493_1_fu_580_p2 = (select_ln507_1_fu_572_p3 ^ 2'd3);

assign xor_ln493_2_fu_618_p2 = (select_ln118_fu_610_p3 ^ 2'd3);

assign xor_ln493_3_fu_656_p2 = (select_ln118_1_fu_648_p3 ^ 2'd3);

assign xor_ln493_fu_829_p2 = (trunc_ln458_reg_1469 ^ 2'd3);

assign xor_ln785_fu_1255_p2 = (p_Result_s_reg_1579 ^ 1'd1);

assign zext_ln1118_4_fu_358_p1 = p_kernel_val_1_V_2_read;

assign zext_ln1118_8_fu_366_p1 = p_kernel_val_2_V_1_read;

assign zext_ln1118_fu_1006_p1 = src_kernel_win_0_va_22_fu_180;

assign zext_ln118_fu_772_p1 = select_ln118_3_fu_764_p3;

assign zext_ln443_fu_370_p1 = t_V_reg_324;

assign zext_ln444_fu_662_p1 = t_V_2_reg_335;

assign zext_ln703_fu_1204_p1 = src_kernel_win_0_va_23_reg_1515_pp0_iter3_reg;

assign zext_ln835_fu_822_p1 = $unsigned(sext_ln144_fu_819_p1);

always @ (posedge ap_clk) begin
    zext_ln1118_4_reg_1383[11:4] <= 8'b00000000;
    zext_ln1118_8_reg_1393[10:3] <= 8'b00000000;
end

endmodule //Filter2D
