-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC;
    p_kernel_val_0_V_1_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_0_V_2_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_1_V_0_read : IN STD_LOGIC_VECTOR (2 downto 0);
    p_kernel_val_1_V_2_read : IN STD_LOGIC_VECTOR (3 downto 0);
    p_kernel_val_2_V_0_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_2_V_1_read : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv10_2D2 : STD_LOGIC_VECTOR (9 downto 0) := "1011010010";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_2D0 : STD_LOGIC_VECTOR (9 downto 0) := "1011010000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_2D0 : STD_LOGIC_VECTOR (10 downto 0) := "01011010000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv11_7FE : STD_LOGIC_VECTOR (10 downto 0) := "11111111110";
    constant ap_const_lv11_7FD : STD_LOGIC_VECTOR (10 downto 0) := "11111111101";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_502 : STD_LOGIC_VECTOR (10 downto 0) := "10100000010";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_500 : STD_LOGIC_VECTOR (11 downto 0) := "010100000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_9FE : STD_LOGIC_VECTOR (11 downto 0) := "100111111110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln444_reg_1451 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_reg_1460 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_1416 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_reg_1407 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal and_ln512_reg_1481 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1481_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_reg_335 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_fu_346_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_reg_1368 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_1_fu_350_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_1_reg_1373 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_2_fu_354_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_2_reg_1378 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1118_4_fu_358_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1118_4_reg_1383 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_3_fu_362_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_3_reg_1388 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1118_8_fu_366_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1118_8_reg_1393 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln443_fu_374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_380_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_V_reg_1402 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln887_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln457_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln457_reg_1411 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1421 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_1425 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_1_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_1_reg_1429 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln493_1_fu_580_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln493_1_reg_1436 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln493_2_fu_618_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln493_2_reg_1441 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln493_3_fu_656_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln493_3_reg_1446 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln444_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op141_read_state4 : BOOLEAN;
    signal ap_predicate_op148_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln444_reg_1451_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_reg_1451_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_672_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal and_ln118_fu_720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_reg_1460_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_794_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_reg_1464 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln458_fu_802_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln458_reg_1469 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln457_fu_806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln457_reg_1474 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln457_reg_1474_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1481_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1481_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1481_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal right_border_buf_0_19_reg_1485 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln493_fu_829_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln493_reg_1496 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_4_addr_reg_1503 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1509 : STD_LOGIC_VECTOR (10 downto 0);
    signal src_kernel_win_0_va_23_fu_948_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_reg_1515 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_reg_1515_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_fu_966_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_reg_1522 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_25_fu_984_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_25_reg_1528 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln703_2_fu_1059_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln703_2_reg_1534 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_1_fu_1063_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln703_1_reg_1539 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1118_2_fu_1073_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1118_2_reg_1544 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln703_3_fu_1078_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln703_3_reg_1549 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_3_fu_1085_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_3_reg_1554 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln703_6_fu_1120_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln703_6_reg_1559 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_4_fu_1124_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln703_4_reg_1564 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln703_7_fu_1130_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_7_reg_1569 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_10_fu_1136_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_10_reg_1574 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_reg_1579 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_5_fu_1239_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_5_reg_1585 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_reg_1590 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter1_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_we0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_we0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_we0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal t_V_reg_324 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln835_fu_822_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal src_kernel_win_0_va_fu_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_18_fu_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_19_fu_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_20_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_860_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_14_fu_188 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_15_fu_192 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_16_fu_196 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_878_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_17_fu_200 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_18_fu_204 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_895_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_right_border_buf_0_19 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_fu_398_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln443_fu_370_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln506_fu_432_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln506_fu_436_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_28_fu_448_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_6_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_474_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_fu_482_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln139_1_fu_488_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln507_fu_496_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln506_1_fu_512_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln506_2_fu_538_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln144_1_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln507_fu_506_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln118_1_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln507_fu_442_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln507_fu_564_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln507_1_fu_572_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln142_fu_534_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_31_fu_526_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln118_fu_592_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln118_fu_598_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_30_fu_518_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln139_4_fu_602_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln118_1_fu_586_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_fu_610_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln142_2_fu_560_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_33_fu_552_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_7_fu_630_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln118_2_fu_636_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_32_fu_544_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln139_5_fu_640_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln118_fu_624_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_1_fu_648_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_34_fu_678_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln444_fu_662_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_fu_694_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_35_fu_700_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_1_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_8_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_726_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_2_fu_734_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln139_fu_740_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln147_fu_758_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln118_3_fu_764_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal xor_ln118_9_fu_776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln118_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln144_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln139_fu_748_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln118_fu_772_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln891_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln144_fu_819_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_849_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_867_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_885_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_937_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_955_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_973_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1118_fu_1006_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1118_fu_1010_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1118_fu_1024_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln1118_fu_1024_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_fu_1024_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1116_fu_1016_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln703_fu_1029_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1118_1_fu_1050_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln1118_1_fu_1050_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_1_fu_1050_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln703_1_fu_1055_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln703_fu_1041_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1118_2_fu_1073_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln1118_2_fu_1073_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_3_fu_1085_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln1118_3_fu_1085_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_4_fu_1098_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln1118_4_fu_1098_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_4_fu_1098_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1118_5_fu_1115_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln1118_5_fu_1115_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_5_fu_1115_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln703_4_fu_1103_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln703_fu_1033_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln703_1_fu_1037_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln703_5_fu_1107_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln703_4_fu_1090_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln703_3_fu_1181_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_2_fu_1178_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_2_fu_1184_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_3_fu_1190_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_5_fu_1195_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln703_fu_1204_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_5_fu_1198_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_fu_1207_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_8_fu_1221_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_11_fu_1230_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_9_fu_1225_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_12_fu_1234_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln785_fu_1260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_fu_1255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_1265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_1279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_1271_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op142_store_state4 : BOOLEAN;
    signal ap_enable_operation_142 : BOOLEAN;
    signal ap_enable_state4_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op140_load_state4 : BOOLEAN;
    signal ap_enable_operation_140 : BOOLEAN;
    signal ap_enable_operation_165 : BOOLEAN;
    signal ap_enable_state5_pp0_iter2_stage0 : BOOLEAN;
    signal ap_predicate_op170_store_state5 : BOOLEAN;
    signal ap_enable_operation_170 : BOOLEAN;
    signal ap_predicate_op144_store_state4 : BOOLEAN;
    signal ap_enable_operation_144 : BOOLEAN;
    signal ap_enable_operation_138 : BOOLEAN;
    signal ap_enable_operation_162 : BOOLEAN;
    signal ap_predicate_op171_store_state5 : BOOLEAN;
    signal ap_enable_operation_171 : BOOLEAN;
    signal ap_predicate_op146_store_state4 : BOOLEAN;
    signal ap_enable_operation_146 : BOOLEAN;
    signal ap_enable_operation_135 : BOOLEAN;
    signal ap_enable_operation_159 : BOOLEAN;
    signal ap_predicate_op149_store_state4 : BOOLEAN;
    signal ap_enable_operation_149 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal mul_ln1118_1_fu_1050_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1118_2_fu_1073_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1118_3_fu_1085_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_4_fu_1098_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1118_5_fu_1115_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1118_fu_1024_p10 : STD_LOGIC_VECTOR (9 downto 0);

    component image_filter_mux_hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Filter2D_1_k_buf_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        we0 => k_buf_0_val_3_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        we0 => k_buf_0_val_4_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_3_q0);

    k_buf_0_val_5_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        we0 => k_buf_0_val_5_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_4_q0);

    image_filter_mux_hbi_U55 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_184,
        din1 => right_border_buf_0_14_fu_188,
        din2 => ap_const_lv8_0,
        din3 => xor_ln493_reg_1496,
        dout => tmp_4_fu_849_p5);

    image_filter_mux_hbi_U56 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_16_fu_196,
        din1 => right_border_buf_0_17_fu_200,
        din2 => ap_const_lv8_0,
        din3 => xor_ln493_reg_1496,
        dout => tmp_5_fu_867_p5);

    image_filter_mux_hbi_U57 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_19_reg_1485,
        din1 => right_border_buf_0_15_fu_192,
        din2 => ap_const_lv8_0,
        din3 => xor_ln493_reg_1496,
        dout => tmp_6_fu_885_p5);

    image_filter_mux_hbi_U58 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_860_p3,
        din1 => col_buf_0_val_1_0_fu_878_p3,
        din2 => col_buf_0_val_2_0_fu_895_p3,
        din3 => xor_ln493_1_reg_1436,
        dout => tmp_7_fu_937_p5);

    image_filter_mux_hbi_U59 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_860_p3,
        din1 => col_buf_0_val_1_0_fu_878_p3,
        din2 => col_buf_0_val_2_0_fu_895_p3,
        din3 => xor_ln493_2_reg_1441,
        dout => tmp_8_fu_955_p5);

    image_filter_mux_hbi_U60 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_860_p3,
        din1 => col_buf_0_val_1_0_fu_878_p3,
        din2 => col_buf_0_val_2_0_fu_895_p3,
        din3 => xor_ln493_3_reg_1446,
        dout => tmp_9_fu_973_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((icmp_ln444_fu_666_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln443_fu_374_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state4)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((icmp_ln443_fu_374_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_2_reg_335_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_fu_666_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_2_reg_335 <= j_V_fu_672_p2;
            elsif (((icmp_ln443_fu_374_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_2_reg_335 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                t_V_reg_324 <= i_V_reg_1402;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_324 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_1481_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln703_10_reg_1574 <= add_ln703_10_fu_1136_p2;
                add_ln703_1_reg_1539 <= add_ln703_1_fu_1063_p2;
                add_ln703_4_reg_1564 <= add_ln703_4_fu_1124_p2;
                add_ln703_7_reg_1569 <= add_ln703_7_fu_1130_p2;
                mul_ln1118_2_reg_1544 <= mul_ln1118_2_fu_1073_p2;
                mul_ln1118_3_reg_1554 <= mul_ln1118_3_fu_1085_p2;
                trunc_ln703_2_reg_1534 <= trunc_ln703_2_fu_1059_p1;
                trunc_ln703_3_reg_1549 <= trunc_ln703_3_fu_1078_p1;
                trunc_ln703_6_reg_1559 <= trunc_ln703_6_fu_1120_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_fu_666_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln118_reg_1460 <= and_ln118_fu_720_p2;
                and_ln512_reg_1481 <= and_ln512_fu_811_p2;
                or_ln457_reg_1474 <= or_ln457_fu_806_p2;
                trunc_ln458_reg_1469 <= trunc_ln458_fu_802_p1;
                x_reg_1464 <= x_fu_794_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln118_reg_1460_pp0_iter1_reg <= and_ln118_reg_1460;
                and_ln512_reg_1481_pp0_iter1_reg <= and_ln512_reg_1481;
                icmp_ln444_reg_1451 <= icmp_ln444_fu_666_p2;
                icmp_ln444_reg_1451_pp0_iter1_reg <= icmp_ln444_reg_1451;
                or_ln457_reg_1474_pp0_iter1_reg <= or_ln457_reg_1474;
                right_border_buf_0_19_reg_1485 <= ap_sig_allocacmp_right_border_buf_0_19;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                and_ln512_reg_1481_pp0_iter2_reg <= and_ln512_reg_1481_pp0_iter1_reg;
                and_ln512_reg_1481_pp0_iter3_reg <= and_ln512_reg_1481_pp0_iter2_reg;
                and_ln512_reg_1481_pp0_iter4_reg <= and_ln512_reg_1481_pp0_iter3_reg;
                icmp_ln444_reg_1451_pp0_iter2_reg <= icmp_ln444_reg_1451_pp0_iter1_reg;
                src_kernel_win_0_va_23_reg_1515 <= src_kernel_win_0_va_23_fu_948_p3;
                src_kernel_win_0_va_23_reg_1515_pp0_iter3_reg <= src_kernel_win_0_va_23_reg_1515;
                src_kernel_win_0_va_24_reg_1522 <= src_kernel_win_0_va_24_fu_966_p3;
                src_kernel_win_0_va_25_reg_1528 <= src_kernel_win_0_va_25_fu_984_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1402 <= i_V_fu_380_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln443_fu_374_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln879_1_reg_1425 <= icmp_ln879_1_fu_420_p2;
                icmp_ln879_reg_1421 <= icmp_ln879_fu_414_p2;
                icmp_ln887_reg_1407 <= icmp_ln887_fu_386_p2;
                icmp_ln899_1_reg_1429 <= icmp_ln899_1_fu_426_p2;
                icmp_ln899_reg_1416 <= icmp_ln899_fu_408_p2;
                xor_ln457_reg_1411 <= xor_ln457_fu_392_p2;
                xor_ln493_1_reg_1436 <= xor_ln493_1_fu_580_p2;
                xor_ln493_2_reg_1441 <= xor_ln493_2_fu_618_p2;
                xor_ln493_3_reg_1446 <= xor_ln493_3_fu_656_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_1451 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_4_addr_reg_1503 <= zext_ln835_fu_822_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1509 <= zext_ln835_fu_822_p1(11 - 1 downto 0);
                xor_ln493_reg_1496 <= xor_ln493_fu_829_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_1481_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Result_s_reg_1579 <= p_Val2_s_fu_1207_p2(11 downto 11);
                p_Val2_5_reg_1585 <= p_Val2_5_fu_1239_p2;
                tmp_10_reg_1590 <= p_Val2_s_fu_1207_p2(11 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_reg_1407 = ap_const_lv1_1) and (icmp_ln899_reg_1416 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1460_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_14_fu_188 <= right_border_buf_0_s_fu_184;
                right_border_buf_0_15_fu_192 <= right_border_buf_0_19_reg_1485;
                right_border_buf_0_16_fu_196 <= col_buf_0_val_1_0_fu_878_p3;
                right_border_buf_0_17_fu_200 <= right_border_buf_0_16_fu_196;
                right_border_buf_0_18_fu_204 <= col_buf_0_val_2_0_fu_895_p3;
                right_border_buf_0_s_fu_184 <= col_buf_0_val_0_0_fu_860_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                sext_ln1118_1_reg_1373 <= sext_ln1118_1_fu_350_p1;
                sext_ln1118_2_reg_1378 <= sext_ln1118_2_fu_354_p1;
                sext_ln1118_3_reg_1388 <= sext_ln1118_3_fu_362_p1;
                sext_ln1118_reg_1368 <= sext_ln1118_fu_346_p1;
                    zext_ln1118_4_reg_1383(3 downto 0) <= zext_ln1118_4_fu_358_p1(3 downto 0);
                    zext_ln1118_8_reg_1393(2 downto 0) <= zext_ln1118_8_fu_366_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_1451_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_18_fu_164 <= src_kernel_win_0_va_fu_160;
                src_kernel_win_0_va_19_fu_168 <= src_kernel_win_0_va_24_reg_1522;
                src_kernel_win_0_va_20_fu_172 <= src_kernel_win_0_va_19_fu_168;
                src_kernel_win_0_va_21_fu_176 <= src_kernel_win_0_va_25_reg_1528;
                src_kernel_win_0_va_22_fu_180 <= src_kernel_win_0_va_21_fu_176;
                src_kernel_win_0_va_fu_160 <= src_kernel_win_0_va_23_reg_1515;
            end if;
        end if;
    end process;
    zext_ln1118_4_reg_1383(11 downto 4) <= "00000000";
    zext_ln1118_8_reg_1393(10 downto 3) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, icmp_ln443_fu_374_p2, ap_CS_fsm_state2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln443_fu_374_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ImagLoc_x_fu_694_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(zext_ln444_fu_662_p1));
    add_ln118_fu_624_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(trunc_ln506_fu_432_p1));
    add_ln506_1_fu_512_p2 <= std_logic_vector(signed(ap_const_lv11_7FE) + signed(zext_ln443_fu_370_p1));
    add_ln506_2_fu_538_p2 <= std_logic_vector(signed(ap_const_lv11_7FD) + signed(zext_ln443_fu_370_p1));
    add_ln506_fu_436_p2 <= std_logic_vector(signed(ap_const_lv11_7FF) + signed(zext_ln443_fu_370_p1));
    add_ln507_fu_442_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(trunc_ln506_fu_432_p1));
    add_ln703_10_fu_1136_p2 <= std_logic_vector(unsigned(trunc_ln703_5_fu_1107_p1) + unsigned(trunc_ln703_4_fu_1090_p1));
    add_ln703_11_fu_1230_p2 <= std_logic_vector(unsigned(src_kernel_win_0_va_23_reg_1515_pp0_iter3_reg) + unsigned(trunc_ln703_6_reg_1559));
    add_ln703_12_fu_1234_p2 <= std_logic_vector(unsigned(add_ln703_10_reg_1574) + unsigned(add_ln703_11_fu_1230_p2));
    add_ln703_1_fu_1063_p2 <= std_logic_vector(signed(sext_ln703_1_fu_1055_p1) + signed(add_ln703_fu_1041_p2));
    add_ln703_2_fu_1184_p2 <= std_logic_vector(signed(sext_ln703_3_fu_1181_p1) + signed(sext_ln703_2_fu_1178_p1));
    add_ln703_3_fu_1190_p2 <= std_logic_vector(unsigned(mul_ln1118_3_reg_1554) + unsigned(add_ln703_2_fu_1184_p2));
    add_ln703_4_fu_1124_p2 <= std_logic_vector(signed(sext_ln703_4_fu_1103_p1) + signed(mul_ln1118_5_fu_1115_p2));
    add_ln703_5_fu_1198_p2 <= std_logic_vector(unsigned(add_ln703_3_fu_1190_p2) + unsigned(sext_ln703_5_fu_1195_p1));
    add_ln703_7_fu_1130_p2 <= std_logic_vector(unsigned(trunc_ln703_fu_1033_p1) + unsigned(trunc_ln703_1_fu_1037_p1));
    add_ln703_8_fu_1221_p2 <= std_logic_vector(unsigned(trunc_ln703_3_reg_1549) + unsigned(trunc_ln703_2_reg_1534));
    add_ln703_9_fu_1225_p2 <= std_logic_vector(unsigned(add_ln703_7_reg_1569) + unsigned(add_ln703_8_fu_1221_p2));
    add_ln703_fu_1041_p2 <= std_logic_vector(signed(sext_ln1116_fu_1016_p1) + signed(sext_ln703_fu_1029_p1));
    and_ln118_1_fu_468_p2 <= (xor_ln118_6_fu_456_p2 and icmp_ln118_fu_462_p2);
    and_ln118_fu_720_p2 <= (xor_ln118_8_fu_708_p2 and icmp_ln118_1_fu_714_p2);
    and_ln144_fu_788_p2 <= (or_ln118_fu_782_p2 and icmp_ln144_fu_752_p2);
    and_ln512_fu_811_p2 <= (icmp_ln899_reg_1416 and icmp_ln891_fu_688_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state9 <= ap_CS_fsm(3);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, and_ln512_reg_1481_pp0_iter4_reg, ap_predicate_op141_read_state4, ap_predicate_op148_read_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_const_lv1_1 = and_ln512_reg_1481_pp0_iter4_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op148_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op141_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, and_ln512_reg_1481_pp0_iter4_reg, ap_predicate_op141_read_state4, ap_predicate_op148_read_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_lv1_1 = and_ln512_reg_1481_pp0_iter4_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op148_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op141_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, and_ln512_reg_1481_pp0_iter4_reg, ap_predicate_op141_read_state4, ap_predicate_op148_read_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_lv1_1 = and_ln512_reg_1481_pp0_iter4_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op148_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op141_read_state4 = ap_const_boolean_1)))));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op141_read_state4, ap_predicate_op148_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op148_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op141_read_state4 = ap_const_boolean_1)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter5_assign_proc : process(p_dst_data_stream_V_full_n, and_ln512_reg_1481_pp0_iter4_reg)
    begin
                ap_block_state8_pp0_stage0_iter5 <= ((ap_const_lv1_1 = and_ln512_reg_1481_pp0_iter4_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter1_state4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln443_fu_374_p2, ap_CS_fsm_state2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln443_fu_374_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_operation_135_assign_proc : process(icmp_ln444_reg_1451)
    begin
                ap_enable_operation_135 <= (icmp_ln444_reg_1451 = ap_const_lv1_0);
    end process;


    ap_enable_operation_138_assign_proc : process(icmp_ln444_reg_1451)
    begin
                ap_enable_operation_138 <= (icmp_ln444_reg_1451 = ap_const_lv1_0);
    end process;


    ap_enable_operation_140_assign_proc : process(ap_predicate_op140_load_state4)
    begin
                ap_enable_operation_140 <= (ap_predicate_op140_load_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_142_assign_proc : process(ap_predicate_op142_store_state4)
    begin
                ap_enable_operation_142 <= (ap_predicate_op142_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_144_assign_proc : process(ap_predicate_op144_store_state4)
    begin
                ap_enable_operation_144 <= (ap_predicate_op144_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_146_assign_proc : process(ap_predicate_op146_store_state4)
    begin
                ap_enable_operation_146 <= (ap_predicate_op146_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_149_assign_proc : process(ap_predicate_op149_store_state4)
    begin
                ap_enable_operation_149 <= (ap_predicate_op149_store_state4 = ap_const_boolean_1);
    end process;

        ap_enable_operation_159 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_162 <= (ap_const_boolean_1 = ap_const_boolean_1);

    ap_enable_operation_165_assign_proc : process(or_ln457_reg_1474_pp0_iter1_reg)
    begin
                ap_enable_operation_165 <= (or_ln457_reg_1474_pp0_iter1_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_170_assign_proc : process(ap_predicate_op170_store_state5)
    begin
                ap_enable_operation_170 <= (ap_predicate_op170_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_171_assign_proc : process(ap_predicate_op171_store_state5)
    begin
                ap_enable_operation_171 <= (ap_predicate_op171_store_state5 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state4_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state4_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state5_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state5_pp0_iter2_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op140_load_state4_assign_proc : process(icmp_ln444_reg_1451, or_ln457_reg_1474)
    begin
                ap_predicate_op140_load_state4 <= ((or_ln457_reg_1474 = ap_const_lv1_1) and (icmp_ln444_reg_1451 = ap_const_lv1_0));
    end process;


    ap_predicate_op141_read_state4_assign_proc : process(icmp_ln444_reg_1451, and_ln118_reg_1460, icmp_ln899_reg_1416)
    begin
                ap_predicate_op141_read_state4 <= ((ap_const_lv1_1 = and_ln118_reg_1460) and (icmp_ln899_reg_1416 = ap_const_lv1_0) and (icmp_ln444_reg_1451 = ap_const_lv1_0));
    end process;


    ap_predicate_op142_store_state4_assign_proc : process(icmp_ln444_reg_1451, and_ln118_reg_1460, icmp_ln899_reg_1416, icmp_ln879_reg_1421)
    begin
                ap_predicate_op142_store_state4 <= ((icmp_ln879_reg_1421 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1460) and (icmp_ln899_reg_1416 = ap_const_lv1_0) and (icmp_ln444_reg_1451 = ap_const_lv1_0));
    end process;


    ap_predicate_op144_store_state4_assign_proc : process(icmp_ln444_reg_1451, and_ln118_reg_1460, icmp_ln899_reg_1416, icmp_ln879_1_reg_1425)
    begin
                ap_predicate_op144_store_state4 <= ((icmp_ln879_1_reg_1425 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1460) and (icmp_ln899_reg_1416 = ap_const_lv1_0) and (icmp_ln444_reg_1451 = ap_const_lv1_0));
    end process;


    ap_predicate_op146_store_state4_assign_proc : process(icmp_ln444_reg_1451, and_ln118_reg_1460, icmp_ln899_reg_1416, icmp_ln879_reg_1421)
    begin
                ap_predicate_op146_store_state4 <= ((icmp_ln879_reg_1421 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1460) and (icmp_ln899_reg_1416 = ap_const_lv1_0) and (icmp_ln444_reg_1451 = ap_const_lv1_0));
    end process;


    ap_predicate_op148_read_state4_assign_proc : process(icmp_ln444_reg_1451, and_ln118_reg_1460, icmp_ln899_reg_1416, icmp_ln887_reg_1407)
    begin
                ap_predicate_op148_read_state4 <= ((icmp_ln887_reg_1407 = ap_const_lv1_1) and (icmp_ln899_reg_1416 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1460) and (icmp_ln444_reg_1451 = ap_const_lv1_0));
    end process;


    ap_predicate_op149_store_state4_assign_proc : process(icmp_ln444_reg_1451, and_ln118_reg_1460, icmp_ln899_reg_1416, icmp_ln887_reg_1407)
    begin
                ap_predicate_op149_store_state4 <= ((icmp_ln887_reg_1407 = ap_const_lv1_1) and (icmp_ln899_reg_1416 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1460) and (icmp_ln444_reg_1451 = ap_const_lv1_0));
    end process;


    ap_predicate_op170_store_state5_assign_proc : process(icmp_ln899_reg_1416, icmp_ln887_reg_1407, and_ln118_reg_1460_pp0_iter1_reg)
    begin
                ap_predicate_op170_store_state5 <= ((icmp_ln887_reg_1407 = ap_const_lv1_1) and (icmp_ln899_reg_1416 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1460_pp0_iter1_reg));
    end process;


    ap_predicate_op171_store_state5_assign_proc : process(icmp_ln899_reg_1416, icmp_ln887_reg_1407, and_ln118_reg_1460_pp0_iter1_reg)
    begin
                ap_predicate_op171_store_state5 <= ((icmp_ln887_reg_1407 = ap_const_lv1_1) and (icmp_ln899_reg_1416 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1460_pp0_iter1_reg));
    end process;


    ap_ready_assign_proc : process(icmp_ln443_fu_374_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln443_fu_374_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_right_border_buf_0_19_assign_proc : process(ap_block_pp0_stage0, icmp_ln899_reg_1416, icmp_ln887_reg_1407, and_ln118_reg_1460_pp0_iter1_reg, ap_enable_reg_pp0_iter2, right_border_buf_0_18_fu_204, col_buf_0_val_2_0_fu_895_p3)
    begin
        if (((icmp_ln887_reg_1407 = ap_const_lv1_1) and (icmp_ln899_reg_1416 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1460_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_right_border_buf_0_19 <= col_buf_0_val_2_0_fu_895_p3;
        else 
            ap_sig_allocacmp_right_border_buf_0_19 <= right_border_buf_0_18_fu_204;
        end if; 
    end process;

    col_buf_0_val_0_0_fu_860_p3 <= 
        k_buf_0_val_3_q0 when (or_ln457_reg_1474_pp0_iter1_reg(0) = '1') else 
        tmp_4_fu_849_p5;
    col_buf_0_val_1_0_fu_878_p3 <= 
        k_buf_0_val_4_q0 when (or_ln457_reg_1474_pp0_iter1_reg(0) = '1') else 
        tmp_5_fu_867_p5;
    col_buf_0_val_2_0_fu_895_p3 <= 
        k_buf_0_val_5_q0 when (or_ln457_reg_1474_pp0_iter1_reg(0) = '1') else 
        tmp_6_fu_885_p5;
    i_V_fu_380_p2 <= std_logic_vector(unsigned(t_V_reg_324) + unsigned(ap_const_lv10_1));
    icmp_ln118_1_fu_714_p2 <= "1" when (signed(ImagLoc_x_fu_694_p2) < signed(ap_const_lv12_500)) else "0";
    icmp_ln118_fu_462_p2 <= "1" when (signed(add_ln506_fu_436_p2) < signed(ap_const_lv11_2D0)) else "0";
    icmp_ln144_1_fu_500_p2 <= "1" when (signed(select_ln139_1_fu_488_p3) < signed(ap_const_lv11_2D0)) else "0";
    icmp_ln144_fu_752_p2 <= "1" when (signed(select_ln139_fu_740_p3) < signed(ap_const_lv12_500)) else "0";
    icmp_ln443_fu_374_p2 <= "1" when (t_V_reg_324 = ap_const_lv10_2D2) else "0";
    icmp_ln444_fu_666_p2 <= "1" when (t_V_2_reg_335 = ap_const_lv11_502) else "0";
    icmp_ln785_fu_1260_p2 <= "0" when (tmp_10_reg_1590 = ap_const_lv4_0) else "1";
    icmp_ln879_1_fu_420_p2 <= "1" when (t_V_reg_324 = ap_const_lv10_0) else "0";
    icmp_ln879_fu_414_p2 <= "1" when (t_V_reg_324 = ap_const_lv10_1) else "0";
    icmp_ln887_fu_386_p2 <= "1" when (unsigned(t_V_reg_324) < unsigned(ap_const_lv10_2D0)) else "0";
    icmp_ln891_fu_688_p2 <= "0" when (tmp_34_fu_678_p4 = ap_const_lv10_0) else "1";
    icmp_ln899_1_fu_426_p2 <= "1" when (unsigned(t_V_reg_324) > unsigned(ap_const_lv10_2D0)) else "0";
    icmp_ln899_fu_408_p2 <= "0" when (tmp_fu_398_p4 = ap_const_lv9_0) else "1";
    j_V_fu_672_p2 <= std_logic_vector(unsigned(t_V_2_reg_335) + unsigned(ap_const_lv11_1));
    k_buf_0_val_3_address0 <= zext_ln835_fu_822_p1(11 - 1 downto 0);
    k_buf_0_val_3_address1 <= zext_ln835_fu_822_p1(11 - 1 downto 0);

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1451, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln444_reg_1451 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1451, and_ln118_reg_1460, icmp_ln899_reg_1416, icmp_ln879_reg_1421, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_reg_1421 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1460) and (icmp_ln899_reg_1416 = ap_const_lv1_0) and (icmp_ln444_reg_1451 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1451, and_ln118_reg_1460, icmp_ln899_reg_1416, icmp_ln887_reg_1407, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln887_reg_1407 = ap_const_lv1_1) and (icmp_ln899_reg_1416 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1460) and (icmp_ln444_reg_1451 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= zext_ln835_fu_822_p1(11 - 1 downto 0);
    k_buf_0_val_4_address1 <= k_buf_0_val_4_addr_reg_1503;

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1451, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln444_reg_1451 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1451, and_ln118_reg_1460, icmp_ln899_reg_1416, icmp_ln879_1_reg_1425, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_1_reg_1425 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1460) and (icmp_ln899_reg_1416 = ap_const_lv1_0) and (icmp_ln444_reg_1451 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(icmp_ln899_reg_1416, icmp_ln887_reg_1407, ap_block_pp0_stage0_11001, and_ln118_reg_1460_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_1407 = ap_const_lv1_1) and (icmp_ln899_reg_1416 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1460_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= zext_ln835_fu_822_p1(11 - 1 downto 0);
    k_buf_0_val_5_address1 <= k_buf_0_val_5_addr_reg_1509;

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1451, and_ln118_reg_1460, icmp_ln899_reg_1416, icmp_ln879_reg_1421, ap_block_pp0_stage0_11001, or_ln457_reg_1474)
    begin
        if ((((icmp_ln879_reg_1421 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1460) and (icmp_ln899_reg_1416 = ap_const_lv1_0) and (icmp_ln444_reg_1451 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_ln457_reg_1474 = ap_const_lv1_1) and (icmp_ln444_reg_1451 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1451, and_ln118_reg_1460, icmp_ln899_reg_1416, icmp_ln879_reg_1421, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_reg_1421 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1460) and (icmp_ln899_reg_1416 = ap_const_lv1_0) and (icmp_ln444_reg_1451 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(icmp_ln899_reg_1416, icmp_ln887_reg_1407, ap_block_pp0_stage0_11001, and_ln118_reg_1460_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_1407 = ap_const_lv1_1) and (icmp_ln899_reg_1416 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1460_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln1118_1_fu_1050_p0 <= sext_ln1118_1_reg_1373(2 - 1 downto 0);
    mul_ln1118_1_fu_1050_p1 <= mul_ln1118_1_fu_1050_p10(8 - 1 downto 0);
    mul_ln1118_1_fu_1050_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_25_reg_1528),10));
    mul_ln1118_1_fu_1050_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_1_fu_1050_p0) * signed('0' &mul_ln1118_1_fu_1050_p1))), 10));
    mul_ln1118_2_fu_1073_p0 <= sext_ln1118_2_reg_1378(3 - 1 downto 0);
    mul_ln1118_2_fu_1073_p1 <= mul_ln1118_2_fu_1073_p10(8 - 1 downto 0);
    mul_ln1118_2_fu_1073_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_20_fu_172),11));
    mul_ln1118_2_fu_1073_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2_fu_1073_p0) * signed('0' &mul_ln1118_2_fu_1073_p1))), 11));
    mul_ln1118_3_fu_1085_p0 <= zext_ln1118_4_reg_1383(4 - 1 downto 0);
    mul_ln1118_3_fu_1085_p1 <= mul_ln1118_3_fu_1085_p10(8 - 1 downto 0);
    mul_ln1118_3_fu_1085_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_24_reg_1522),12));
    mul_ln1118_3_fu_1085_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln1118_3_fu_1085_p0) * unsigned(mul_ln1118_3_fu_1085_p1), 12));
    mul_ln1118_4_fu_1098_p0 <= sext_ln1118_3_reg_1388(2 - 1 downto 0);
    mul_ln1118_4_fu_1098_p1 <= mul_ln1118_4_fu_1098_p10(8 - 1 downto 0);
    mul_ln1118_4_fu_1098_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_18_fu_164),10));
    mul_ln1118_4_fu_1098_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_4_fu_1098_p0) * signed('0' &mul_ln1118_4_fu_1098_p1))), 10));
    mul_ln1118_5_fu_1115_p0 <= zext_ln1118_8_reg_1393(3 - 1 downto 0);
    mul_ln1118_5_fu_1115_p1 <= mul_ln1118_5_fu_1115_p10(8 - 1 downto 0);
    mul_ln1118_5_fu_1115_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_fu_160),11));
    mul_ln1118_5_fu_1115_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln1118_5_fu_1115_p0) * unsigned(mul_ln1118_5_fu_1115_p1), 11));
    mul_ln1118_fu_1024_p0 <= sext_ln1118_reg_1368(2 - 1 downto 0);
    mul_ln1118_fu_1024_p1 <= mul_ln1118_fu_1024_p10(8 - 1 downto 0);
    mul_ln1118_fu_1024_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_21_fu_176),10));
    mul_ln1118_fu_1024_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_fu_1024_p0) * signed('0' &mul_ln1118_fu_1024_p1))), 10));
    or_ln118_fu_782_p2 <= (xor_ln118_9_fu_776_p2 or tmp_35_fu_700_p3);
    or_ln340_fu_1279_p2 <= (p_Result_s_reg_1579 or overflow_fu_1265_p2);
    or_ln457_fu_806_p2 <= (xor_ln457_reg_1411 or icmp_ln118_1_fu_714_p2);
    overflow_fu_1265_p2 <= (xor_ln785_fu_1255_p2 and icmp_ln785_fu_1260_p2);
    p_Val2_5_fu_1239_p2 <= std_logic_vector(unsigned(add_ln703_9_fu_1225_p2) + unsigned(add_ln703_12_fu_1234_p2));
    p_Val2_s_fu_1207_p2 <= std_logic_vector(unsigned(zext_ln703_fu_1204_p1) + unsigned(add_ln703_5_fu_1198_p2));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, and_ln512_reg_1481_pp0_iter4_reg)
    begin
        if (((ap_const_lv1_1 = and_ln512_reg_1481_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        select_ln340_fu_1271_p3 when (or_ln340_fu_1279_p2(0) = '1') else 
        p_Val2_5_reg_1585;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, and_ln512_reg_1481_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_1 = and_ln512_reg_1481_pp0_iter4_reg) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln444_reg_1451, and_ln118_reg_1460, icmp_ln899_reg_1416, icmp_ln887_reg_1407)
    begin
        if ((((icmp_ln887_reg_1407 = ap_const_lv1_1) and (icmp_ln899_reg_1416 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1460) and (icmp_ln444_reg_1451 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = and_ln118_reg_1460) and (icmp_ln899_reg_1416 = ap_const_lv1_0) and (icmp_ln444_reg_1451 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op141_read_state4, ap_predicate_op148_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op148_read_state4 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op141_read_state4 = ap_const_boolean_1)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln118_1_fu_648_p3 <= 
        select_ln139_5_fu_640_p3 when (tmp_32_fu_544_p3(0) = '1') else 
        add_ln118_fu_624_p2;
    select_ln118_3_fu_764_p3 <= 
        ImagLoc_x_fu_694_p2 when (and_ln118_fu_720_p2(0) = '1') else 
        sub_ln147_fu_758_p2;
    select_ln118_fu_610_p3 <= 
        select_ln139_4_fu_602_p3 when (tmp_30_fu_518_p3(0) = '1') else 
        xor_ln118_1_fu_586_p2;
    select_ln139_1_fu_488_p3 <= 
        sub_ln142_fu_482_p2 when (tmp_29_fu_474_p3(0) = '1') else 
        add_ln506_fu_436_p2;
    select_ln139_4_fu_602_p3 <= 
        sub_ln118_fu_592_p2 when (tmp_31_fu_526_p3(0) = '1') else 
        trunc_ln118_fu_598_p1;
    select_ln139_5_fu_640_p3 <= 
        xor_ln118_7_fu_630_p2 when (tmp_33_fu_552_p3(0) = '1') else 
        trunc_ln118_2_fu_636_p1;
    select_ln139_fu_740_p3 <= 
        sub_ln142_2_fu_734_p2 when (tmp_36_fu_726_p3(0) = '1') else 
        ImagLoc_x_fu_694_p2;
    select_ln340_fu_1271_p3 <= 
        ap_const_lv8_FF when (xor_ln785_fu_1255_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln507_1_fu_572_p3 <= 
        add_ln507_fu_442_p2 when (and_ln118_1_fu_468_p2(0) = '1') else 
        select_ln507_fu_564_p3;
    select_ln507_fu_564_p3 <= 
        trunc_ln507_fu_496_p1 when (icmp_ln144_1_fu_500_p2(0) = '1') else 
        sub_ln507_fu_506_p2;
        sext_ln1116_fu_1016_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1118_fu_1010_p2),11));

        sext_ln1118_1_fu_350_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_2_read),10));

        sext_ln1118_2_fu_354_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_0_read),11));

        sext_ln1118_3_fu_362_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_0_read),10));

        sext_ln1118_fu_346_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_1_read),10));

        sext_ln139_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln139_fu_740_p3),13));

        sext_ln144_fu_819_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_reg_1464),32));

        sext_ln703_1_fu_1055_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_1_fu_1050_p2),11));

        sext_ln703_2_fu_1178_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1_reg_1539),12));

        sext_ln703_3_fu_1181_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_2_reg_1544),12));

        sext_ln703_4_fu_1103_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_4_fu_1098_p2),11));

        sext_ln703_5_fu_1195_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_4_reg_1564),12));

        sext_ln703_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_fu_1024_p2),11));

    src_kernel_win_0_va_23_fu_948_p3 <= 
        tmp_7_fu_937_p5 when (icmp_ln899_1_reg_1429(0) = '1') else 
        col_buf_0_val_0_0_fu_860_p3;
    src_kernel_win_0_va_24_fu_966_p3 <= 
        tmp_8_fu_955_p5 when (icmp_ln899_1_reg_1429(0) = '1') else 
        col_buf_0_val_1_0_fu_878_p3;
    src_kernel_win_0_va_25_fu_984_p3 <= 
        tmp_9_fu_973_p5 when (icmp_ln899_1_reg_1429(0) = '1') else 
        col_buf_0_val_2_0_fu_895_p3;
    sub_ln1118_fu_1010_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(zext_ln1118_fu_1006_p1));
    sub_ln118_fu_592_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(trunc_ln142_fu_534_p1));
    sub_ln142_2_fu_734_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(zext_ln444_fu_662_p1));
    sub_ln142_fu_482_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) - unsigned(zext_ln443_fu_370_p1));
    sub_ln147_fu_758_p2 <= std_logic_vector(signed(ap_const_lv12_9FE) - signed(select_ln139_fu_740_p3));
    sub_ln507_fu_506_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(trunc_ln507_fu_496_p1));
    tmp_28_fu_448_p3 <= add_ln506_fu_436_p2(10 downto 10);
    tmp_29_fu_474_p3 <= add_ln506_fu_436_p2(10 downto 10);
    tmp_30_fu_518_p3 <= add_ln506_1_fu_512_p2(10 downto 10);
    tmp_31_fu_526_p3 <= add_ln506_1_fu_512_p2(10 downto 10);
    tmp_32_fu_544_p3 <= add_ln506_2_fu_538_p2(10 downto 10);
    tmp_33_fu_552_p3 <= add_ln506_2_fu_538_p2(10 downto 10);
    tmp_34_fu_678_p4 <= t_V_2_reg_335(10 downto 1);
    tmp_35_fu_700_p3 <= ImagLoc_x_fu_694_p2(11 downto 11);
    tmp_36_fu_726_p3 <= ImagLoc_x_fu_694_p2(11 downto 11);
    tmp_fu_398_p4 <= t_V_reg_324(9 downto 1);
    trunc_ln118_2_fu_636_p1 <= add_ln506_2_fu_538_p2(2 - 1 downto 0);
    trunc_ln118_fu_598_p1 <= add_ln506_1_fu_512_p2(2 - 1 downto 0);
    trunc_ln142_2_fu_560_p1 <= t_V_reg_324(2 - 1 downto 0);
    trunc_ln142_fu_534_p1 <= t_V_reg_324(2 - 1 downto 0);
    trunc_ln458_fu_802_p1 <= x_fu_794_p3(2 - 1 downto 0);
    trunc_ln506_fu_432_p1 <= t_V_reg_324(2 - 1 downto 0);
    trunc_ln507_fu_496_p1 <= select_ln139_1_fu_488_p3(2 - 1 downto 0);
    trunc_ln703_1_fu_1037_p1 <= mul_ln1118_fu_1024_p2(8 - 1 downto 0);
    trunc_ln703_2_fu_1059_p1 <= mul_ln1118_1_fu_1050_p2(8 - 1 downto 0);
    trunc_ln703_3_fu_1078_p1 <= mul_ln1118_2_fu_1073_p2(8 - 1 downto 0);
    trunc_ln703_4_fu_1090_p1 <= mul_ln1118_3_fu_1085_p2(8 - 1 downto 0);
    trunc_ln703_5_fu_1107_p1 <= mul_ln1118_4_fu_1098_p2(8 - 1 downto 0);
    trunc_ln703_6_fu_1120_p1 <= mul_ln1118_5_fu_1115_p2(8 - 1 downto 0);
    trunc_ln703_fu_1033_p1 <= sub_ln1118_fu_1010_p2(8 - 1 downto 0);
    x_fu_794_p3 <= 
        sext_ln139_fu_748_p1 when (and_ln144_fu_788_p2(0) = '1') else 
        zext_ln118_fu_772_p1;
    xor_ln118_1_fu_586_p2 <= (trunc_ln506_fu_432_p1 xor ap_const_lv2_2);
    xor_ln118_6_fu_456_p2 <= (tmp_28_fu_448_p3 xor ap_const_lv1_1);
    xor_ln118_7_fu_630_p2 <= (trunc_ln142_2_fu_560_p1 xor ap_const_lv2_3);
    xor_ln118_8_fu_708_p2 <= (tmp_35_fu_700_p3 xor ap_const_lv1_1);
    xor_ln118_9_fu_776_p2 <= (icmp_ln118_1_fu_714_p2 xor ap_const_lv1_1);
    xor_ln457_fu_392_p2 <= (icmp_ln887_fu_386_p2 xor ap_const_lv1_1);
    xor_ln493_1_fu_580_p2 <= (select_ln507_1_fu_572_p3 xor ap_const_lv2_3);
    xor_ln493_2_fu_618_p2 <= (select_ln118_fu_610_p3 xor ap_const_lv2_3);
    xor_ln493_3_fu_656_p2 <= (select_ln118_1_fu_648_p3 xor ap_const_lv2_3);
    xor_ln493_fu_829_p2 <= (trunc_ln458_reg_1469 xor ap_const_lv2_3);
    xor_ln785_fu_1255_p2 <= (p_Result_s_reg_1579 xor ap_const_lv1_1);
    zext_ln1118_4_fu_358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_1_V_2_read),12));
    zext_ln1118_8_fu_366_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_2_V_1_read),11));
    zext_ln1118_fu_1006_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_22_fu_180),9));
    zext_ln118_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln118_3_fu_764_p3),13));
    zext_ln443_fu_370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_324),11));
    zext_ln444_fu_662_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_335),12));
    zext_ln703_fu_1204_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_23_reg_1515_pp0_iter3_reg),12));
    zext_ln835_fu_822_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln144_fu_819_p1),64));
end behav;
